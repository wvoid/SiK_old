                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Sep  7 2022) (Linux)
                                      4 ; This file was generated Wed Sep  7 10:05:09 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module radio
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _Receiver_ISR
                                     13 	.globl _delay_msec
                                     14 	.globl _delay_expired
                                     15 	.globl _delay_set
                                     16 	.globl _timer2_tick
                                     17 	.globl _panic
                                     18 	.globl _param_get
                                     19 	.globl _memcpy
                                     20 	.globl _NSS1
                                     21 	.globl _IRQ
                                     22 	.globl _PIN_ENABLE
                                     23 	.globl _PIN_CONFIG
                                     24 	.globl _LED_GREEN
                                     25 	.globl _LED_RED
                                     26 	.globl _SPI0EN
                                     27 	.globl _TXBMT0
                                     28 	.globl _NSS0MD0
                                     29 	.globl _NSS0MD1
                                     30 	.globl _RXOVRN0
                                     31 	.globl _MODF0
                                     32 	.globl _WCOL0
                                     33 	.globl _SPIF0
                                     34 	.globl _AD0CM0
                                     35 	.globl _AD0CM1
                                     36 	.globl _AD0CM2
                                     37 	.globl _AD0WINT
                                     38 	.globl _AD0BUSY
                                     39 	.globl _AD0INT
                                     40 	.globl _BURSTEN
                                     41 	.globl _AD0EN
                                     42 	.globl _CCF0
                                     43 	.globl _CCF1
                                     44 	.globl _CCF2
                                     45 	.globl _CCF3
                                     46 	.globl _CCF4
                                     47 	.globl _CCF5
                                     48 	.globl _CR
                                     49 	.globl _CF
                                     50 	.globl _P
                                     51 	.globl _F1
                                     52 	.globl _OV
                                     53 	.globl _RS0
                                     54 	.globl _RS1
                                     55 	.globl _F0
                                     56 	.globl _AC
                                     57 	.globl _CY
                                     58 	.globl _T2XCLK
                                     59 	.globl _T2RCLK
                                     60 	.globl _TR2
                                     61 	.globl _T2SPLIT
                                     62 	.globl _TF2CEN
                                     63 	.globl _TF2LEN
                                     64 	.globl _TF2L
                                     65 	.globl _TF2H
                                     66 	.globl _SI
                                     67 	.globl _ACK
                                     68 	.globl _ARBLOST
                                     69 	.globl _ACKRQ
                                     70 	.globl _STO
                                     71 	.globl _STA
                                     72 	.globl _TXMODE
                                     73 	.globl _MASTER
                                     74 	.globl _PX0
                                     75 	.globl _PT0
                                     76 	.globl _PX1
                                     77 	.globl _PT1
                                     78 	.globl _PS0
                                     79 	.globl _PT2
                                     80 	.globl _PSPI0
                                     81 	.globl _SPI1EN
                                     82 	.globl _TXBMT1
                                     83 	.globl _NSS1MD0
                                     84 	.globl _NSS1MD1
                                     85 	.globl _RXOVRN1
                                     86 	.globl _MODF1
                                     87 	.globl _WCOL1
                                     88 	.globl _SPIF1
                                     89 	.globl _EX0
                                     90 	.globl _ET0
                                     91 	.globl _EX1
                                     92 	.globl _ET1
                                     93 	.globl _ES0
                                     94 	.globl _ET2
                                     95 	.globl _ESPI0
                                     96 	.globl _EA
                                     97 	.globl _RI0
                                     98 	.globl _TI0
                                     99 	.globl _RB80
                                    100 	.globl _TB80
                                    101 	.globl _REN0
                                    102 	.globl _MCE0
                                    103 	.globl _S0MODE
                                    104 	.globl _CRC0VAL
                                    105 	.globl _CRC0INIT
                                    106 	.globl _CRC0SEL
                                    107 	.globl _IT0
                                    108 	.globl _IE0
                                    109 	.globl _IT1
                                    110 	.globl _IE1
                                    111 	.globl _TR0
                                    112 	.globl _TF0
                                    113 	.globl _TR1
                                    114 	.globl _TF1
                                    115 	.globl _PCA0CP4
                                    116 	.globl _PCA0CP0
                                    117 	.globl _PCA0
                                    118 	.globl _PCA0CP3
                                    119 	.globl _PCA0CP2
                                    120 	.globl _PCA0CP1
                                    121 	.globl _PCA0CP5
                                    122 	.globl _TMR2
                                    123 	.globl _TMR2RL
                                    124 	.globl _ADC0LT
                                    125 	.globl _ADC0GT
                                    126 	.globl _ADC0
                                    127 	.globl _TMR3
                                    128 	.globl _TMR3RL
                                    129 	.globl _TOFF
                                    130 	.globl _DP
                                    131 	.globl _VDM0CN
                                    132 	.globl _PCA0CPH4
                                    133 	.globl _PCA0CPL4
                                    134 	.globl _PCA0CPH0
                                    135 	.globl _PCA0CPL0
                                    136 	.globl _PCA0H
                                    137 	.globl _PCA0L
                                    138 	.globl _SPI0CN
                                    139 	.globl _EIP2
                                    140 	.globl _EIP1
                                    141 	.globl _SMB0ADM
                                    142 	.globl _SMB0ADR
                                    143 	.globl _P2MDIN
                                    144 	.globl _P1MDIN
                                    145 	.globl _P0MDIN
                                    146 	.globl _B
                                    147 	.globl _RSTSRC
                                    148 	.globl _PCA0CPH3
                                    149 	.globl _PCA0CPL3
                                    150 	.globl _PCA0CPH2
                                    151 	.globl _PCA0CPL2
                                    152 	.globl _PCA0CPH1
                                    153 	.globl _PCA0CPL1
                                    154 	.globl _ADC0CN
                                    155 	.globl _EIE2
                                    156 	.globl _EIE1
                                    157 	.globl _FLWR
                                    158 	.globl _IT01CF
                                    159 	.globl _XBR2
                                    160 	.globl _XBR1
                                    161 	.globl _XBR0
                                    162 	.globl _ACC
                                    163 	.globl _PCA0PWM
                                    164 	.globl _PCA0CPM4
                                    165 	.globl _PCA0CPM3
                                    166 	.globl _PCA0CPM2
                                    167 	.globl _PCA0CPM1
                                    168 	.globl _PCA0CPM0
                                    169 	.globl _PCA0MD
                                    170 	.globl _PCA0CN
                                    171 	.globl _P0MAT
                                    172 	.globl _P2SKIP
                                    173 	.globl _P1SKIP
                                    174 	.globl _P0SKIP
                                    175 	.globl _PCA0CPH5
                                    176 	.globl _PCA0CPL5
                                    177 	.globl _REF0CN
                                    178 	.globl _PSW
                                    179 	.globl _P1MAT
                                    180 	.globl _PCA0CPM5
                                    181 	.globl _TMR2H
                                    182 	.globl _TMR2L
                                    183 	.globl _TMR2RLH
                                    184 	.globl _TMR2RLL
                                    185 	.globl _REG0CN
                                    186 	.globl _TMR2CN
                                    187 	.globl _P0MASK
                                    188 	.globl _ADC0LTH
                                    189 	.globl _ADC0LTL
                                    190 	.globl _ADC0GTH
                                    191 	.globl _ADC0GTL
                                    192 	.globl _SMB0DAT
                                    193 	.globl _SMB0CF
                                    194 	.globl _SMB0CN
                                    195 	.globl _P1MASK
                                    196 	.globl _ADC0H
                                    197 	.globl _ADC0L
                                    198 	.globl _ADC0TK
                                    199 	.globl _ADC0CF
                                    200 	.globl _ADC0MX
                                    201 	.globl _ADC0PWR
                                    202 	.globl _ADC0AC
                                    203 	.globl _IREF0CN
                                    204 	.globl _IP
                                    205 	.globl _FLKEY
                                    206 	.globl _FLSCL
                                    207 	.globl _PMU0CF
                                    208 	.globl _OSCICL
                                    209 	.globl _OSCICN
                                    210 	.globl _OSCXCN
                                    211 	.globl _SPI1CN
                                    212 	.globl _ONESHOT
                                    213 	.globl _EMI0TC
                                    214 	.globl _RTC0KEY
                                    215 	.globl _RTC0DAT
                                    216 	.globl _RTC0ADR
                                    217 	.globl _EMI0CF
                                    218 	.globl _EMI0CN
                                    219 	.globl _CLKSEL
                                    220 	.globl _IE
                                    221 	.globl _SFRPAGE
                                    222 	.globl _P2DRV
                                    223 	.globl _P2MDOUT
                                    224 	.globl _P1DRV
                                    225 	.globl _P1MDOUT
                                    226 	.globl _P0DRV
                                    227 	.globl _P0MDOUT
                                    228 	.globl _SPI0DAT
                                    229 	.globl _SPI0CKR
                                    230 	.globl _SPI0CFG
                                    231 	.globl _P2
                                    232 	.globl _CPT0MX
                                    233 	.globl _CPT1MX
                                    234 	.globl _CPT0MD
                                    235 	.globl _CPT1MD
                                    236 	.globl _CPT0CN
                                    237 	.globl _CPT1CN
                                    238 	.globl _SBUF0
                                    239 	.globl _SCON0
                                    240 	.globl _CRC0CNT
                                    241 	.globl _DC0CN
                                    242 	.globl _CRC0AUTO
                                    243 	.globl _DC0CF
                                    244 	.globl _TMR3H
                                    245 	.globl _CRC0FLIP
                                    246 	.globl _TMR3L
                                    247 	.globl _CRC0IN
                                    248 	.globl _TMR3RLH
                                    249 	.globl _CRC0CN
                                    250 	.globl _TMR3RLL
                                    251 	.globl _CRC0DAT
                                    252 	.globl _TMR3CN
                                    253 	.globl _P1
                                    254 	.globl _PSCTL
                                    255 	.globl _CKCON
                                    256 	.globl _TH1
                                    257 	.globl _TH0
                                    258 	.globl _TL1
                                    259 	.globl _TL0
                                    260 	.globl _TMOD
                                    261 	.globl _TCON
                                    262 	.globl _PCON
                                    263 	.globl _TOFFH
                                    264 	.globl _SPI1DAT
                                    265 	.globl _TOFFL
                                    266 	.globl _SPI1CKR
                                    267 	.globl _SPI1CFG
                                    268 	.globl _DPH
                                    269 	.globl _DPL
                                    270 	.globl _SP
                                    271 	.globl _P0
                                    272 	.globl _radio_buffer
                                    273 	.globl _radio_transmit_PARM_3
                                    274 	.globl _radio_transmit_PARM_2
                                    275 	.globl _radio_receive_packet_PARM_2
                                    276 	.globl _settings
                                    277 	.globl _netid
                                    278 	.globl _last_rssi
                                    279 	.globl _partial_packet_length
                                    280 	.globl _receive_packet_length
                                    281 	.globl _radio_receive_packet
                                    282 	.globl _radio_receive_in_progress
                                    283 	.globl _radio_preamble_detected
                                    284 	.globl _radio_last_rssi
                                    285 	.globl _radio_current_rssi
                                    286 	.globl _radio_air_rate
                                    287 	.globl _radio_transmit
                                    288 	.globl _radio_receiver_on
                                    289 	.globl _radio_initialise
                                    290 	.globl _radio_set_frequency
                                    291 	.globl _radio_set_channel_spacing
                                    292 	.globl _radio_set_channel
                                    293 	.globl _radio_get_channel
                                    294 	.globl _radio_configure
                                    295 	.globl _radio_set_transmit_power
                                    296 	.globl _radio_get_transmit_power
                                    297 	.globl _radio_set_network_id
                                    298 	.globl _radio_temperature
                                    299 	.globl _radio_set_diversity
                                    300 ;--------------------------------------------------------
                                    301 ; special function registers
                                    302 ;--------------------------------------------------------
                                    303 	.area RSEG    (ABS,DATA)
      000000                        304 	.org 0x0000
                           000080   305 _P0	=	0x0080
                           000081   306 _SP	=	0x0081
                           000082   307 _DPL	=	0x0082
                           000083   308 _DPH	=	0x0083
                           000084   309 _SPI1CFG	=	0x0084
                           000085   310 _SPI1CKR	=	0x0085
                           000085   311 _TOFFL	=	0x0085
                           000086   312 _SPI1DAT	=	0x0086
                           000086   313 _TOFFH	=	0x0086
                           000087   314 _PCON	=	0x0087
                           000088   315 _TCON	=	0x0088
                           000089   316 _TMOD	=	0x0089
                           00008A   317 _TL0	=	0x008a
                           00008B   318 _TL1	=	0x008b
                           00008C   319 _TH0	=	0x008c
                           00008D   320 _TH1	=	0x008d
                           00008E   321 _CKCON	=	0x008e
                           00008F   322 _PSCTL	=	0x008f
                           000090   323 _P1	=	0x0090
                           000091   324 _TMR3CN	=	0x0091
                           000091   325 _CRC0DAT	=	0x0091
                           000092   326 _TMR3RLL	=	0x0092
                           000092   327 _CRC0CN	=	0x0092
                           000093   328 _TMR3RLH	=	0x0093
                           000093   329 _CRC0IN	=	0x0093
                           000094   330 _TMR3L	=	0x0094
                           000095   331 _CRC0FLIP	=	0x0095
                           000095   332 _TMR3H	=	0x0095
                           000096   333 _DC0CF	=	0x0096
                           000096   334 _CRC0AUTO	=	0x0096
                           000097   335 _DC0CN	=	0x0097
                           000097   336 _CRC0CNT	=	0x0097
                           000098   337 _SCON0	=	0x0098
                           000099   338 _SBUF0	=	0x0099
                           00009A   339 _CPT1CN	=	0x009a
                           00009B   340 _CPT0CN	=	0x009b
                           00009C   341 _CPT1MD	=	0x009c
                           00009D   342 _CPT0MD	=	0x009d
                           00009E   343 _CPT1MX	=	0x009e
                           00009F   344 _CPT0MX	=	0x009f
                           0000A0   345 _P2	=	0x00a0
                           0000A1   346 _SPI0CFG	=	0x00a1
                           0000A2   347 _SPI0CKR	=	0x00a2
                           0000A3   348 _SPI0DAT	=	0x00a3
                           0000A4   349 _P0MDOUT	=	0x00a4
                           0000A4   350 _P0DRV	=	0x00a4
                           0000A5   351 _P1MDOUT	=	0x00a5
                           0000A5   352 _P1DRV	=	0x00a5
                           0000A6   353 _P2MDOUT	=	0x00a6
                           0000A6   354 _P2DRV	=	0x00a6
                           0000A7   355 _SFRPAGE	=	0x00a7
                           0000A8   356 _IE	=	0x00a8
                           0000A9   357 _CLKSEL	=	0x00a9
                           0000AA   358 _EMI0CN	=	0x00aa
                           0000AB   359 _EMI0CF	=	0x00ab
                           0000AC   360 _RTC0ADR	=	0x00ac
                           0000AD   361 _RTC0DAT	=	0x00ad
                           0000AE   362 _RTC0KEY	=	0x00ae
                           0000AF   363 _EMI0TC	=	0x00af
                           0000AF   364 _ONESHOT	=	0x00af
                           0000B0   365 _SPI1CN	=	0x00b0
                           0000B1   366 _OSCXCN	=	0x00b1
                           0000B2   367 _OSCICN	=	0x00b2
                           0000B3   368 _OSCICL	=	0x00b3
                           0000B5   369 _PMU0CF	=	0x00b5
                           0000B6   370 _FLSCL	=	0x00b6
                           0000B7   371 _FLKEY	=	0x00b7
                           0000B8   372 _IP	=	0x00b8
                           0000B9   373 _IREF0CN	=	0x00b9
                           0000BA   374 _ADC0AC	=	0x00ba
                           0000BA   375 _ADC0PWR	=	0x00ba
                           0000BB   376 _ADC0MX	=	0x00bb
                           0000BC   377 _ADC0CF	=	0x00bc
                           0000BD   378 _ADC0TK	=	0x00bd
                           0000BD   379 _ADC0L	=	0x00bd
                           0000BE   380 _ADC0H	=	0x00be
                           0000BF   381 _P1MASK	=	0x00bf
                           0000C0   382 _SMB0CN	=	0x00c0
                           0000C1   383 _SMB0CF	=	0x00c1
                           0000C2   384 _SMB0DAT	=	0x00c2
                           0000C3   385 _ADC0GTL	=	0x00c3
                           0000C4   386 _ADC0GTH	=	0x00c4
                           0000C5   387 _ADC0LTL	=	0x00c5
                           0000C6   388 _ADC0LTH	=	0x00c6
                           0000C7   389 _P0MASK	=	0x00c7
                           0000C8   390 _TMR2CN	=	0x00c8
                           0000C9   391 _REG0CN	=	0x00c9
                           0000CA   392 _TMR2RLL	=	0x00ca
                           0000CB   393 _TMR2RLH	=	0x00cb
                           0000CC   394 _TMR2L	=	0x00cc
                           0000CD   395 _TMR2H	=	0x00cd
                           0000CE   396 _PCA0CPM5	=	0x00ce
                           0000CF   397 _P1MAT	=	0x00cf
                           0000D0   398 _PSW	=	0x00d0
                           0000D1   399 _REF0CN	=	0x00d1
                           0000D2   400 _PCA0CPL5	=	0x00d2
                           0000D3   401 _PCA0CPH5	=	0x00d3
                           0000D4   402 _P0SKIP	=	0x00d4
                           0000D5   403 _P1SKIP	=	0x00d5
                           0000D6   404 _P2SKIP	=	0x00d6
                           0000D7   405 _P0MAT	=	0x00d7
                           0000D8   406 _PCA0CN	=	0x00d8
                           0000D9   407 _PCA0MD	=	0x00d9
                           0000DA   408 _PCA0CPM0	=	0x00da
                           0000DB   409 _PCA0CPM1	=	0x00db
                           0000DC   410 _PCA0CPM2	=	0x00dc
                           0000DD   411 _PCA0CPM3	=	0x00dd
                           0000DE   412 _PCA0CPM4	=	0x00de
                           0000DF   413 _PCA0PWM	=	0x00df
                           0000E0   414 _ACC	=	0x00e0
                           0000E1   415 _XBR0	=	0x00e1
                           0000E2   416 _XBR1	=	0x00e2
                           0000E3   417 _XBR2	=	0x00e3
                           0000E4   418 _IT01CF	=	0x00e4
                           0000E5   419 _FLWR	=	0x00e5
                           0000E6   420 _EIE1	=	0x00e6
                           0000E7   421 _EIE2	=	0x00e7
                           0000E8   422 _ADC0CN	=	0x00e8
                           0000E9   423 _PCA0CPL1	=	0x00e9
                           0000EA   424 _PCA0CPH1	=	0x00ea
                           0000EB   425 _PCA0CPL2	=	0x00eb
                           0000EC   426 _PCA0CPH2	=	0x00ec
                           0000ED   427 _PCA0CPL3	=	0x00ed
                           0000EE   428 _PCA0CPH3	=	0x00ee
                           0000EF   429 _RSTSRC	=	0x00ef
                           0000F0   430 _B	=	0x00f0
                           0000F1   431 _P0MDIN	=	0x00f1
                           0000F2   432 _P1MDIN	=	0x00f2
                           0000F3   433 _P2MDIN	=	0x00f3
                           0000F4   434 _SMB0ADR	=	0x00f4
                           0000F5   435 _SMB0ADM	=	0x00f5
                           0000F6   436 _EIP1	=	0x00f6
                           0000F7   437 _EIP2	=	0x00f7
                           0000F8   438 _SPI0CN	=	0x00f8
                           0000F9   439 _PCA0L	=	0x00f9
                           0000FA   440 _PCA0H	=	0x00fa
                           0000FB   441 _PCA0CPL0	=	0x00fb
                           0000FC   442 _PCA0CPH0	=	0x00fc
                           0000FD   443 _PCA0CPL4	=	0x00fd
                           0000FE   444 _PCA0CPH4	=	0x00fe
                           0000FF   445 _VDM0CN	=	0x00ff
                           008382   446 _DP	=	0x8382
                           008685   447 _TOFF	=	0x8685
                           009392   448 _TMR3RL	=	0x9392
                           009594   449 _TMR3	=	0x9594
                           00BEBD   450 _ADC0	=	0xbebd
                           00C4C3   451 _ADC0GT	=	0xc4c3
                           00C6C5   452 _ADC0LT	=	0xc6c5
                           00CBCA   453 _TMR2RL	=	0xcbca
                           00CDCC   454 _TMR2	=	0xcdcc
                           00D3D2   455 _PCA0CP5	=	0xd3d2
                           00EAE9   456 _PCA0CP1	=	0xeae9
                           00ECEB   457 _PCA0CP2	=	0xeceb
                           00EEED   458 _PCA0CP3	=	0xeeed
                           00FAF9   459 _PCA0	=	0xfaf9
                           00FCFB   460 _PCA0CP0	=	0xfcfb
                           00FEFD   461 _PCA0CP4	=	0xfefd
                                    462 ;--------------------------------------------------------
                                    463 ; special function bits
                                    464 ;--------------------------------------------------------
                                    465 	.area RSEG    (ABS,DATA)
      000000                        466 	.org 0x0000
                           00008F   467 _TF1	=	0x008f
                           00008E   468 _TR1	=	0x008e
                           00008D   469 _TF0	=	0x008d
                           00008C   470 _TR0	=	0x008c
                           00008B   471 _IE1	=	0x008b
                           00008A   472 _IT1	=	0x008a
                           000089   473 _IE0	=	0x0089
                           000088   474 _IT0	=	0x0088
                           000096   475 _CRC0SEL	=	0x0096
                           000095   476 _CRC0INIT	=	0x0095
                           000094   477 _CRC0VAL	=	0x0094
                           00009F   478 _S0MODE	=	0x009f
                           00009D   479 _MCE0	=	0x009d
                           00009C   480 _REN0	=	0x009c
                           00009B   481 _TB80	=	0x009b
                           00009A   482 _RB80	=	0x009a
                           000099   483 _TI0	=	0x0099
                           000098   484 _RI0	=	0x0098
                           0000AF   485 _EA	=	0x00af
                           0000AE   486 _ESPI0	=	0x00ae
                           0000AD   487 _ET2	=	0x00ad
                           0000AC   488 _ES0	=	0x00ac
                           0000AB   489 _ET1	=	0x00ab
                           0000AA   490 _EX1	=	0x00aa
                           0000A9   491 _ET0	=	0x00a9
                           0000A8   492 _EX0	=	0x00a8
                           0000B7   493 _SPIF1	=	0x00b7
                           0000B6   494 _WCOL1	=	0x00b6
                           0000B5   495 _MODF1	=	0x00b5
                           0000B4   496 _RXOVRN1	=	0x00b4
                           0000B3   497 _NSS1MD1	=	0x00b3
                           0000B2   498 _NSS1MD0	=	0x00b2
                           0000B1   499 _TXBMT1	=	0x00b1
                           0000B0   500 _SPI1EN	=	0x00b0
                           0000BE   501 _PSPI0	=	0x00be
                           0000BD   502 _PT2	=	0x00bd
                           0000BC   503 _PS0	=	0x00bc
                           0000BB   504 _PT1	=	0x00bb
                           0000BA   505 _PX1	=	0x00ba
                           0000B9   506 _PT0	=	0x00b9
                           0000B8   507 _PX0	=	0x00b8
                           0000C7   508 _MASTER	=	0x00c7
                           0000C6   509 _TXMODE	=	0x00c6
                           0000C5   510 _STA	=	0x00c5
                           0000C4   511 _STO	=	0x00c4
                           0000C3   512 _ACKRQ	=	0x00c3
                           0000C2   513 _ARBLOST	=	0x00c2
                           0000C1   514 _ACK	=	0x00c1
                           0000C0   515 _SI	=	0x00c0
                           0000CF   516 _TF2H	=	0x00cf
                           0000CE   517 _TF2L	=	0x00ce
                           0000CD   518 _TF2LEN	=	0x00cd
                           0000CC   519 _TF2CEN	=	0x00cc
                           0000CB   520 _T2SPLIT	=	0x00cb
                           0000CA   521 _TR2	=	0x00ca
                           0000C9   522 _T2RCLK	=	0x00c9
                           0000C8   523 _T2XCLK	=	0x00c8
                           0000D7   524 _CY	=	0x00d7
                           0000D6   525 _AC	=	0x00d6
                           0000D5   526 _F0	=	0x00d5
                           0000D4   527 _RS1	=	0x00d4
                           0000D3   528 _RS0	=	0x00d3
                           0000D2   529 _OV	=	0x00d2
                           0000D1   530 _F1	=	0x00d1
                           0000D0   531 _P	=	0x00d0
                           0000DF   532 _CF	=	0x00df
                           0000DE   533 _CR	=	0x00de
                           0000DD   534 _CCF5	=	0x00dd
                           0000DC   535 _CCF4	=	0x00dc
                           0000DB   536 _CCF3	=	0x00db
                           0000DA   537 _CCF2	=	0x00da
                           0000D9   538 _CCF1	=	0x00d9
                           0000D8   539 _CCF0	=	0x00d8
                           0000EF   540 _AD0EN	=	0x00ef
                           0000EE   541 _BURSTEN	=	0x00ee
                           0000ED   542 _AD0INT	=	0x00ed
                           0000EC   543 _AD0BUSY	=	0x00ec
                           0000EB   544 _AD0WINT	=	0x00eb
                           0000EA   545 _AD0CM2	=	0x00ea
                           0000E9   546 _AD0CM1	=	0x00e9
                           0000E8   547 _AD0CM0	=	0x00e8
                           0000FF   548 _SPIF0	=	0x00ff
                           0000FE   549 _WCOL0	=	0x00fe
                           0000FD   550 _MODF0	=	0x00fd
                           0000FC   551 _RXOVRN0	=	0x00fc
                           0000FB   552 _NSS0MD1	=	0x00fb
                           0000FA   553 _NSS0MD0	=	0x00fa
                           0000F9   554 _TXBMT0	=	0x00f9
                           0000F8   555 _SPI0EN	=	0x00f8
                           000096   556 _LED_RED	=	0x0096
                           000095   557 _LED_GREEN	=	0x0095
                           000082   558 _PIN_CONFIG	=	0x0082
                           000083   559 _PIN_ENABLE	=	0x0083
                           000087   560 _IRQ	=	0x0087
                           000094   561 _NSS1	=	0x0094
                                    562 ;--------------------------------------------------------
                                    563 ; overlayable register banks
                                    564 ;--------------------------------------------------------
                                    565 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        566 	.ds 8
                                    567 ;--------------------------------------------------------
                                    568 ; overlayable bit register bank
                                    569 ;--------------------------------------------------------
                                    570 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        571 bits:
      000000                        572 	.ds 1
                           008000   573 	b0 = bits[0]
                           008100   574 	b1 = bits[1]
                           008200   575 	b2 = bits[2]
                           008300   576 	b3 = bits[3]
                           008400   577 	b4 = bits[4]
                           008500   578 	b5 = bits[5]
                           008600   579 	b6 = bits[6]
                           008700   580 	b7 = bits[7]
                                    581 ;--------------------------------------------------------
                                    582 ; internal ram data
                                    583 ;--------------------------------------------------------
                                    584 	.area DSEG    (DATA)
                                    585 ;--------------------------------------------------------
                                    586 ; overlayable items in internal ram 
                                    587 ;--------------------------------------------------------
                                    588 	.area	OSEG    (OVR,DATA)
                                    589 ;--------------------------------------------------------
                                    590 ; indirectly addressable internal ram data
                                    591 ;--------------------------------------------------------
                                    592 	.area ISEG    (DATA)
                                    593 ;--------------------------------------------------------
                                    594 ; absolute internal ram data
                                    595 ;--------------------------------------------------------
                                    596 	.area IABS    (ABS,DATA)
                                    597 	.area IABS    (ABS,DATA)
                                    598 ;--------------------------------------------------------
                                    599 ; bit data
                                    600 ;--------------------------------------------------------
                                    601 	.area BSEG    (BIT)
      000000                        602 _packet_received:
      000000                        603 	.ds 1
      000001                        604 _preamble_detected:
      000001                        605 	.ds 1
      000002                        606 _radio_preamble_detected_EX0_saved_1_154:
      000002                        607 	.ds 1
      000003                        608 _radio_transmit_simple_transmit_started_1_167:
      000003                        609 	.ds 1
      000004                        610 _radio_transmit_ret_1_183:
      000004                        611 	.ds 1
      000005                        612 _radio_transmit_EX0_saved_1_183:
      000005                        613 	.ds 1
      000006                        614 _radio_initialise_sloc0_1_0:
      000006                        615 	.ds 1
                                    616 ;--------------------------------------------------------
                                    617 ; paged external ram data
                                    618 ;--------------------------------------------------------
                                    619 	.area PSEG    (PAG,XDATA)
      000000                        620 _receive_packet_length::
      000000                        621 	.ds 1
      000001                        622 _partial_packet_length::
      000001                        623 	.ds 1
      000002                        624 _last_rssi::
      000002                        625 	.ds 1
      000003                        626 _netid::
      000003                        627 	.ds 2
      000005                        628 _settings::
      000005                        629 	.ds 12
      000011                        630 _radio_receive_packet_PARM_2:
      000011                        631 	.ds 2
      000013                        632 _radio_write_transmit_fifo_PARM_2:
      000013                        633 	.ds 2
      000015                        634 _radio_transmit_simple_PARM_2:
      000015                        635 	.ds 2
      000017                        636 _radio_transmit_simple_PARM_3:
      000017                        637 	.ds 2
      000019                        638 _radio_transmit_PARM_2:
      000019                        639 	.ds 2
      00001B                        640 _radio_transmit_PARM_3:
      00001B                        641 	.ds 2
      00001D                        642 _scale_uint32_PARM_2:
      00001D                        643 	.ds 4
      000021                        644 _scale_uint32_value_1_238:
      000021                        645 	.ds 4
      000025                        646 _set_frequency_registers_frequency_1_246:
      000025                        647 	.ds 4
                                    648 ;--------------------------------------------------------
                                    649 ; external ram data
                                    650 ;--------------------------------------------------------
                                    651 	.area XSEG    (XDATA)
      000000                        652 _radio_buffer::
      000000                        653 	.ds 252
      0000FC                        654 _radio_receive_packet_length_1_140:
      0000FC                        655 	.ds 3
      0000FF                        656 _radio_transmit_length_1_182:
      0000FF                        657 	.ds 1
      000100                        658 _radio_set_channel_channel_1_196:
      000100                        659 	.ds 1
      000101                        660 _radio_set_transmit_power_power_1_220:
      000101                        661 	.ds 1
      000102                        662 _radio_set_transmit_power_i_1_221:
      000102                        663 	.ds 1
      000103                        664 _radio_set_network_id_id_1_226:
      000103                        665 	.ds 2
      000105                        666 _set_frequency_registers_band_1_247:
      000105                        667 	.ds 1
      000106                        668 _radio_set_diversity_state_1_252:
      000106                        669 	.ds 1
                                    670 ;--------------------------------------------------------
                                    671 ; absolute external ram data
                                    672 ;--------------------------------------------------------
                                    673 	.area XABS    (ABS,XDATA)
                                    674 ;--------------------------------------------------------
                                    675 ; external initialized ram data
                                    676 ;--------------------------------------------------------
                                    677 	.area XISEG   (XDATA)
                                    678 	.area HOME    (CODE)
                                    679 	.area GSINIT0 (CODE)
                                    680 	.area GSINIT1 (CODE)
                                    681 	.area GSINIT2 (CODE)
                                    682 	.area GSINIT3 (CODE)
                                    683 	.area GSINIT4 (CODE)
                                    684 	.area GSINIT5 (CODE)
                                    685 	.area GSINIT  (CODE)
                                    686 	.area GSFINAL (CODE)
                                    687 	.area CSEG    (CODE)
                                    688 ;--------------------------------------------------------
                                    689 ; global & static initialisations
                                    690 ;--------------------------------------------------------
                                    691 	.area HOME    (CODE)
                                    692 	.area GSINIT  (CODE)
                                    693 	.area GSFINAL (CODE)
                                    694 	.area GSINIT  (CODE)
                                    695 ;--------------------------------------------------------
                                    696 ; Home
                                    697 ;--------------------------------------------------------
                                    698 	.area HOME    (CODE)
                                    699 	.area HOME    (CODE)
                                    700 ;--------------------------------------------------------
                                    701 ; code
                                    702 ;--------------------------------------------------------
                                    703 	.area CSEG    (CODE)
                                    704 ;------------------------------------------------------------
                                    705 ;Allocation info for local variables in function 'radio_receive_packet'
                                    706 ;------------------------------------------------------------
                                    707 ;length                    Allocated with name '_radio_receive_packet_length_1_140'
                                    708 ;------------------------------------------------------------
                                    709 ;	radio/radio.c:78: radio_receive_packet(uint8_t *length, __xdata uint8_t * __pdata buf)
                                    710 ;	-----------------------------------------
                                    711 ;	 function radio_receive_packet
                                    712 ;	-----------------------------------------
      000000                        713 _radio_receive_packet:
                           000007   714 	ar7 = 0x07
                           000006   715 	ar6 = 0x06
                           000005   716 	ar5 = 0x05
                           000004   717 	ar4 = 0x04
                           000003   718 	ar3 = 0x03
                           000002   719 	ar2 = 0x02
                           000001   720 	ar1 = 0x01
                           000000   721 	ar0 = 0x00
      000000 AF F0            [24]  722 	mov	r7,b
      000002 AE 83            [24]  723 	mov	r6,dph
      000004 E5 82            [12]  724 	mov	a,dpl
      000006 90r00rFC         [24]  725 	mov	dptr,#_radio_receive_packet_length_1_140
      000009 F0               [24]  726 	movx	@dptr,a
      00000A EE               [12]  727 	mov	a,r6
      00000B A3               [24]  728 	inc	dptr
      00000C F0               [24]  729 	movx	@dptr,a
      00000D EF               [12]  730 	mov	a,r7
      00000E A3               [24]  731 	inc	dptr
      00000F F0               [24]  732 	movx	@dptr,a
                                    733 ;	radio/radio.c:87: if (!packet_received) {
      000010 20*00 02         [24]  734 	jb	_packet_received,00102$
                                    735 ;	radio/radio.c:88: return false;
      000013 C3               [12]  736 	clr	c
      000014 22               [24]  737 	ret
      000015                        738 00102$:
                                    739 ;	radio/radio.c:91: if (receive_packet_length > MAX_PACKET_LENGTH) {
      000015 78r00            [12]  740 	mov	r0,#_receive_packet_length
      000017 C3               [12]  741 	clr	c
      000018 E2               [24]  742 	movx	a,@r0
      000019 F5 F0            [12]  743 	mov	b,a
      00001B 74 FC            [12]  744 	mov	a,#0xFC
      00001D 95 F0            [12]  745 	subb	a,b
      00001F 50 05            [24]  746 	jnc	00104$
                                    747 ;	radio/radio.c:92: radio_receiver_on();
      000021 12r03r75         [24]  748 	lcall	_radio_receiver_on
                                    749 ;	radio/radio.c:93: goto failed;
      000024 80 45            [24]  750 	sjmp	00105$
      000026                        751 00104$:
                                    752 ;	radio/radio.c:108: *length = receive_packet_length;
      000026 90r00rFC         [24]  753 	mov	dptr,#_radio_receive_packet_length_1_140
      000029 E0               [24]  754 	movx	a,@dptr
      00002A FD               [12]  755 	mov	r5,a
      00002B A3               [24]  756 	inc	dptr
      00002C E0               [24]  757 	movx	a,@dptr
      00002D FE               [12]  758 	mov	r6,a
      00002E A3               [24]  759 	inc	dptr
      00002F E0               [24]  760 	movx	a,@dptr
      000030 FF               [12]  761 	mov	r7,a
      000031 8D 82            [24]  762 	mov	dpl,r5
      000033 8E 83            [24]  763 	mov	dph,r6
      000035 8F F0            [24]  764 	mov	b,r7
      000037 78r00            [12]  765 	mov	r0,#_receive_packet_length
      000039 E2               [24]  766 	movx	a,@r0
      00003A 12r00r00         [24]  767 	lcall	__gptrput
                                    768 ;	radio/radio.c:109: memcpy(buf, radio_buffer, receive_packet_length);
      00003D 78r11            [12]  769 	mov	r0,#_radio_receive_packet_PARM_2
      00003F E2               [24]  770 	movx	a,@r0
      000040 FD               [12]  771 	mov	r5,a
      000041 08               [12]  772 	inc	r0
      000042 E2               [24]  773 	movx	a,@r0
      000043 FE               [12]  774 	mov	r6,a
      000044 7F 00            [12]  775 	mov	r7,#0x00
      000046 90r00r00         [24]  776 	mov	dptr,#_memcpy_PARM_2
      000049 74r00            [12]  777 	mov	a,#_radio_buffer
      00004B F0               [24]  778 	movx	@dptr,a
      00004C 74s00            [12]  779 	mov	a,#(_radio_buffer >> 8)
      00004E A3               [24]  780 	inc	dptr
      00004F F0               [24]  781 	movx	@dptr,a
      000050 E4               [12]  782 	clr	a
      000051 A3               [24]  783 	inc	dptr
      000052 F0               [24]  784 	movx	@dptr,a
      000053 78r00            [12]  785 	mov	r0,#_receive_packet_length
      000055 90r00r00         [24]  786 	mov	dptr,#_memcpy_PARM_3
      000058 E2               [24]  787 	movx	a,@r0
      000059 F0               [24]  788 	movx	@dptr,a
      00005A E4               [12]  789 	clr	a
      00005B A3               [24]  790 	inc	dptr
      00005C F0               [24]  791 	movx	@dptr,a
      00005D 8D 82            [24]  792 	mov	dpl,r5
      00005F 8E 83            [24]  793 	mov	dph,r6
      000061 8F F0            [24]  794 	mov	b,r7
      000063 12r00r00         [24]  795 	lcall	_memcpy
                                    796 ;	radio/radio.c:112: radio_receiver_on();
      000066 12r03r75         [24]  797 	lcall	_radio_receiver_on
                                    798 ;	radio/radio.c:113: return true;
      000069 D3               [12]  799 	setb	c
                                    800 ;	radio/radio.c:187: failed:
      00006A 22               [24]  801 	ret
      00006B                        802 00105$:
                                    803 ;	radio/radio.c:188: if (errors.rx_errors != 0xFFFF) {
      00006B 78r00            [12]  804 	mov	r0,#_errors
      00006D E2               [24]  805 	movx	a,@r0
      00006E FE               [12]  806 	mov	r6,a
      00006F 08               [12]  807 	inc	r0
      000070 E2               [24]  808 	movx	a,@r0
      000071 FF               [12]  809 	mov	r7,a
      000072 BE FF 05         [24]  810 	cjne	r6,#0xFF,00121$
      000075 BF FF 02         [24]  811 	cjne	r7,#0xFF,00121$
      000078 80 0C            [24]  812 	sjmp	00107$
      00007A                        813 00121$:
                                    814 ;	radio/radio.c:189: errors.rx_errors++;
      00007A 0E               [12]  815 	inc	r6
      00007B BE 00 01         [24]  816 	cjne	r6,#0x00,00122$
      00007E 0F               [12]  817 	inc	r7
      00007F                        818 00122$:
      00007F 78r00            [12]  819 	mov	r0,#_errors
      000081 EE               [12]  820 	mov	a,r6
      000082 F2               [24]  821 	movx	@r0,a
      000083 08               [12]  822 	inc	r0
      000084 EF               [12]  823 	mov	a,r7
      000085 F2               [24]  824 	movx	@r0,a
      000086                        825 00107$:
                                    826 ;	radio/radio.c:191: return false;
      000086 C3               [12]  827 	clr	c
      000087 22               [24]  828 	ret
                                    829 ;------------------------------------------------------------
                                    830 ;Allocation info for local variables in function 'radio_write_transmit_fifo'
                                    831 ;------------------------------------------------------------
                                    832 ;n                         Allocated to registers r7 
                                    833 ;------------------------------------------------------------
                                    834 ;	radio/radio.c:198: radio_write_transmit_fifo(register uint8_t n, __xdata uint8_t * __pdata buffer)
                                    835 ;	-----------------------------------------
                                    836 ;	 function radio_write_transmit_fifo
                                    837 ;	-----------------------------------------
      000088                        838 _radio_write_transmit_fifo:
      000088 AF 82            [24]  839 	mov	r7,dpl
                                    840 ;	radio/radio.c:200: RADIO_PAGE();
      00008A 75 A7 00         [24]  841 	mov	_SFRPAGE,#0x00
                                    842 ;	radio/radio.c:202: NSS1 = 0;
      00008D C2 94            [12]  843 	clr	_NSS1
                                    844 ;	radio/radio.c:203: SPIF1 = 0;
      00008F C2 B7            [12]  845 	clr	_SPIF1
                                    846 ;	radio/radio.c:204: SPI1DAT = (0x80 | EZRADIOPRO_FIFO_ACCESS);
      000091 75 86 FF         [24]  847 	mov	_SPI1DAT,#0xFF
                                    848 ;	radio/radio.c:206: while (n--) {
      000094 78r13            [12]  849 	mov	r0,#_radio_write_transmit_fifo_PARM_2
      000096 E2               [24]  850 	movx	a,@r0
      000097 FD               [12]  851 	mov	r5,a
      000098 08               [12]  852 	inc	r0
      000099 E2               [24]  853 	movx	a,@r0
      00009A FE               [12]  854 	mov	r6,a
      00009B                        855 00104$:
      00009B 8F 04            [24]  856 	mov	ar4,r7
      00009D 1F               [12]  857 	dec	r7
      00009E EC               [12]  858 	mov	a,r4
      00009F 60 11            [24]  859 	jz	00107$
                                    860 ;	radio/radio.c:207: while (!TXBMT1) /* noop */;
      0000A1                        861 00101$:
      0000A1 30 B1 FD         [24]  862 	jnb	_TXBMT1,00101$
                                    863 ;	radio/radio.c:208: SPI1DAT = *buffer++;
      0000A4 8D 82            [24]  864 	mov	dpl,r5
      0000A6 8E 83            [24]  865 	mov	dph,r6
      0000A8 E0               [24]  866 	movx	a,@dptr
      0000A9 F5 86            [12]  867 	mov	_SPI1DAT,a
      0000AB A3               [24]  868 	inc	dptr
      0000AC AD 82            [24]  869 	mov	r5,dpl
      0000AE AE 83            [24]  870 	mov	r6,dph
                                    871 ;	radio/radio.c:211: while (!TXBMT1) /* noop */;
      0000B0 80 E9            [24]  872 	sjmp	00104$
      0000B2                        873 00107$:
      0000B2 30 B1 FD         [24]  874 	jnb	_TXBMT1,00107$
                                    875 ;	radio/radio.c:212: while ((SPI1CFG & 0x80) == 0x80);
      0000B5                        876 00110$:
      0000B5 74 80            [12]  877 	mov	a,#0x80
      0000B7 55 84            [12]  878 	anl	a,_SPI1CFG
      0000B9 FF               [12]  879 	mov	r7,a
      0000BA BF 80 02         [24]  880 	cjne	r7,#0x80,00137$
      0000BD 80 F6            [24]  881 	sjmp	00110$
      0000BF                        882 00137$:
                                    883 ;	radio/radio.c:214: SPIF1 = 0;
      0000BF C2 B7            [12]  884 	clr	_SPIF1
                                    885 ;	radio/radio.c:215: NSS1 = 1;
      0000C1 D2 94            [12]  886 	setb	_NSS1
                                    887 ;	radio/radio.c:217: SFRPAGE = LEGACY_PAGE;
      0000C3 75 A7 00         [24]  888 	mov	_SFRPAGE,#0x00
      0000C6 22               [24]  889 	ret
                                    890 ;------------------------------------------------------------
                                    891 ;Allocation info for local variables in function 'radio_receive_in_progress'
                                    892 ;------------------------------------------------------------
                                    893 ;	radio/radio.c:223: radio_receive_in_progress(void)
                                    894 ;	-----------------------------------------
                                    895 ;	 function radio_receive_in_progress
                                    896 ;	-----------------------------------------
      0000C7                        897 _radio_receive_in_progress:
                                    898 ;	radio/radio.c:225: if (packet_received ||
      0000C7 20*00 05         [24]  899 	jb	_packet_received,00101$
                                    900 ;	radio/radio.c:226: partial_packet_length != 0) {
      0000CA 78r01            [12]  901 	mov	r0,#_partial_packet_length
      0000CC E2               [24]  902 	movx	a,@r0
      0000CD 60 02            [24]  903 	jz	00102$
      0000CF                        904 00101$:
                                    905 ;	radio/radio.c:227: return true;
      0000CF D3               [12]  906 	setb	c
      0000D0 22               [24]  907 	ret
      0000D1                        908 00102$:
                                    909 ;	radio/radio.c:231: if (register_read(EZRADIOPRO_EZMAC_STATUS) & EZRADIOPRO_PKRX) {
      0000D1 75 82 31         [24]  910 	mov	dpl,#0x31
      0000D4 12r08r4A         [24]  911 	lcall	_register_read
      0000D7 E5 82            [12]  912 	mov	a,dpl
      0000D9 30 E4 02         [24]  913 	jnb	acc.4,00105$
                                    914 ;	radio/radio.c:232: return true;
      0000DC D3               [12]  915 	setb	c
      0000DD 22               [24]  916 	ret
      0000DE                        917 00105$:
                                    918 ;	radio/radio.c:234: return false;
      0000DE C3               [12]  919 	clr	c
      0000DF 22               [24]  920 	ret
                                    921 ;------------------------------------------------------------
                                    922 ;Allocation info for local variables in function 'radio_preamble_detected'
                                    923 ;------------------------------------------------------------
                                    924 ;	radio/radio.c:241: radio_preamble_detected(void)
                                    925 ;	-----------------------------------------
                                    926 ;	 function radio_preamble_detected
                                    927 ;	-----------------------------------------
      0000E0                        928 _radio_preamble_detected:
                                    929 ;	radio/radio.c:243: EX0_SAVE_DISABLE;
      0000E0 A2 A8            [12]  930 	mov	c,_EX0
      0000E2 92*02            [24]  931 	mov	_radio_preamble_detected_EX0_saved_1_154,c
      0000E4 C2 A8            [12]  932 	clr	_EX0
                                    933 ;	radio/radio.c:244: if (preamble_detected) {
                                    934 ;	radio/radio.c:245: preamble_detected = 0;
      0000E6 10*01 02         [24]  935 	jbc	_preamble_detected,00108$
      0000E9 80 06            [24]  936 	sjmp	00102$
      0000EB                        937 00108$:
                                    938 ;	radio/radio.c:246: EX0_RESTORE;
      0000EB A2*02            [12]  939 	mov	c,_radio_preamble_detected_EX0_saved_1_154
      0000ED 92 A8            [24]  940 	mov	_EX0,c
                                    941 ;	radio/radio.c:247: return true;
      0000EF D3               [12]  942 	setb	c
      0000F0 22               [24]  943 	ret
      0000F1                        944 00102$:
                                    945 ;	radio/radio.c:249: EX0_RESTORE;
      0000F1 A2*02            [12]  946 	mov	c,_radio_preamble_detected_EX0_saved_1_154
      0000F3 92 A8            [24]  947 	mov	_EX0,c
                                    948 ;	radio/radio.c:250: return false;
      0000F5 C3               [12]  949 	clr	c
      0000F6 22               [24]  950 	ret
                                    951 ;------------------------------------------------------------
                                    952 ;Allocation info for local variables in function 'radio_last_rssi'
                                    953 ;------------------------------------------------------------
                                    954 ;	radio/radio.c:258: radio_last_rssi(void)
                                    955 ;	-----------------------------------------
                                    956 ;	 function radio_last_rssi
                                    957 ;	-----------------------------------------
      0000F7                        958 _radio_last_rssi:
                                    959 ;	radio/radio.c:260: return last_rssi;
      0000F7 78r02            [12]  960 	mov	r0,#_last_rssi
      0000F9 E2               [24]  961 	movx	a,@r0
      0000FA F5 82            [12]  962 	mov	dpl,a
      0000FC 22               [24]  963 	ret
                                    964 ;------------------------------------------------------------
                                    965 ;Allocation info for local variables in function 'radio_current_rssi'
                                    966 ;------------------------------------------------------------
                                    967 ;	radio/radio.c:266: radio_current_rssi(void)
                                    968 ;	-----------------------------------------
                                    969 ;	 function radio_current_rssi
                                    970 ;	-----------------------------------------
      0000FD                        971 _radio_current_rssi:
                                    972 ;	radio/radio.c:268: return register_read(EZRADIOPRO_RECEIVED_SIGNAL_STRENGTH_INDICATOR);
      0000FD 75 82 26         [24]  973 	mov	dpl,#0x26
      000100 02r08r4A         [24]  974 	ljmp	_register_read
                                    975 ;------------------------------------------------------------
                                    976 ;Allocation info for local variables in function 'radio_air_rate'
                                    977 ;------------------------------------------------------------
                                    978 ;	radio/radio.c:274: radio_air_rate(void)
                                    979 ;	-----------------------------------------
                                    980 ;	 function radio_air_rate
                                    981 ;	-----------------------------------------
      000103                        982 _radio_air_rate:
                                    983 ;	radio/radio.c:276: return settings.air_data_rate;
      000103 78r0D            [12]  984 	mov	r0,#(_settings + 0x0008)
      000105 E2               [24]  985 	movx	a,@r0
      000106 F5 82            [12]  986 	mov	dpl,a
      000108 22               [24]  987 	ret
                                    988 ;------------------------------------------------------------
                                    989 ;Allocation info for local variables in function 'radio_clear_transmit_fifo'
                                    990 ;------------------------------------------------------------
                                    991 ;control                   Allocated to registers r7 
                                    992 ;------------------------------------------------------------
                                    993 ;	radio/radio.c:282: radio_clear_transmit_fifo(void)
                                    994 ;	-----------------------------------------
                                    995 ;	 function radio_clear_transmit_fifo
                                    996 ;	-----------------------------------------
      000109                        997 _radio_clear_transmit_fifo:
                                    998 ;	radio/radio.c:285: control = register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2);
      000109 75 82 08         [24]  999 	mov	dpl,#0x08
      00010C 12r08r4A         [24] 1000 	lcall	_register_read
      00010F AF 82            [24] 1001 	mov	r7,dpl
                                   1002 ;	radio/radio.c:286: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control | EZRADIOPRO_FFCLRTX);
      000111 74 01            [12] 1003 	mov	a,#0x01
      000113 4F               [12] 1004 	orl	a,r7
      000114 FE               [12] 1005 	mov	r6,a
      000115 C0 07            [24] 1006 	push	ar7
      000117 C0 06            [24] 1007 	push	ar6
      000119 75 82 08         [24] 1008 	mov	dpl,#0x08
      00011C 12r08r14         [24] 1009 	lcall	_register_write
      00011F 15 81            [12] 1010 	dec	sp
      000121 D0 07            [24] 1011 	pop	ar7
                                   1012 ;	radio/radio.c:287: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control & ~EZRADIOPRO_FFCLRTX);
      000123 53 07 FE         [24] 1013 	anl	ar7,#0xFE
      000126 C0 07            [24] 1014 	push	ar7
      000128 75 82 08         [24] 1015 	mov	dpl,#0x08
      00012B 12r08r14         [24] 1016 	lcall	_register_write
      00012E 15 81            [12] 1017 	dec	sp
      000130 22               [24] 1018 	ret
                                   1019 ;------------------------------------------------------------
                                   1020 ;Allocation info for local variables in function 'radio_clear_receive_fifo'
                                   1021 ;------------------------------------------------------------
                                   1022 ;control                   Allocated to registers r7 
                                   1023 ;------------------------------------------------------------
                                   1024 ;	radio/radio.c:294: radio_clear_receive_fifo(void) __reentrant
                                   1025 ;	-----------------------------------------
                                   1026 ;	 function radio_clear_receive_fifo
                                   1027 ;	-----------------------------------------
      000131                       1028 _radio_clear_receive_fifo:
                                   1029 ;	radio/radio.c:297: control = register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2);
      000131 75 82 08         [24] 1030 	mov	dpl,#0x08
      000134 12r08r4A         [24] 1031 	lcall	_register_read
      000137 AF 82            [24] 1032 	mov	r7,dpl
                                   1033 ;	radio/radio.c:298: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control | EZRADIOPRO_FFCLRRX);
      000139 74 02            [12] 1034 	mov	a,#0x02
      00013B 4F               [12] 1035 	orl	a,r7
      00013C FE               [12] 1036 	mov	r6,a
      00013D C0 07            [24] 1037 	push	ar7
      00013F C0 06            [24] 1038 	push	ar6
      000141 75 82 08         [24] 1039 	mov	dpl,#0x08
      000144 12r08r14         [24] 1040 	lcall	_register_write
      000147 15 81            [12] 1041 	dec	sp
      000149 D0 07            [24] 1042 	pop	ar7
                                   1043 ;	radio/radio.c:299: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control & ~EZRADIOPRO_FFCLRRX);
      00014B 53 07 FD         [24] 1044 	anl	ar7,#0xFD
      00014E C0 07            [24] 1045 	push	ar7
      000150 75 82 08         [24] 1046 	mov	dpl,#0x08
      000153 12r08r14         [24] 1047 	lcall	_register_write
      000156 15 81            [12] 1048 	dec	sp
      000158 22               [24] 1049 	ret
                                   1050 ;------------------------------------------------------------
                                   1051 ;Allocation info for local variables in function 'radio_transmit_simple'
                                   1052 ;------------------------------------------------------------
                                   1053 ;length                    Allocated to registers r7 
                                   1054 ;n                         Allocated to registers r6 
                                   1055 ;status                    Allocated to registers r3 
                                   1056 ;------------------------------------------------------------
                                   1057 ;	radio/radio.c:311: radio_transmit_simple(__data uint8_t length, __xdata uint8_t * __pdata buf, __pdata uint16_t timeout_ticks)
                                   1058 ;	-----------------------------------------
                                   1059 ;	 function radio_transmit_simple
                                   1060 ;	-----------------------------------------
      000159                       1061 _radio_transmit_simple:
                                   1062 ;	radio/radio.c:317: if (length > sizeof(radio_buffer)) {
      000159 E5 82            [12] 1063 	mov	a,dpl
      00015B FF               [12] 1064 	mov	r7,a
      00015C 24 03            [12] 1065 	add	a,#0xff - 0xFC
      00015E 50 19            [24] 1066 	jnc	00102$
                                   1067 ;	radio/radio.c:318: panic("oversized packet");
      000160 C0 07            [24] 1068 	push	ar7
      000162 74r00            [12] 1069 	mov	a,#___str_0
      000164 C0 E0            [24] 1070 	push	acc
      000166 74s00            [12] 1071 	mov	a,#(___str_0 >> 8)
      000168 C0 E0            [24] 1072 	push	acc
      00016A 74 80            [12] 1073 	mov	a,#0x80
      00016C C0 E0            [24] 1074 	push	acc
      00016E 12r00r00         [24] 1075 	lcall	_panic
      000171 15 81            [12] 1076 	dec	sp
      000173 15 81            [12] 1077 	dec	sp
      000175 15 81            [12] 1078 	dec	sp
      000177 D0 07            [24] 1079 	pop	ar7
      000179                       1080 00102$:
                                   1081 ;	radio/radio.c:321: radio_clear_transmit_fifo();
      000179 C0 07            [24] 1082 	push	ar7
      00017B 12r01r09         [24] 1083 	lcall	_radio_clear_transmit_fifo
      00017E D0 07            [24] 1084 	pop	ar7
                                   1085 ;	radio/radio.c:323: register_write(EZRADIOPRO_TRANSMIT_PACKET_LENGTH, length);
      000180 C0 07            [24] 1086 	push	ar7
      000182 C0 07            [24] 1087 	push	ar7
      000184 75 82 3E         [24] 1088 	mov	dpl,#0x3E
      000187 12r08r14         [24] 1089 	lcall	_register_write
      00018A 15 81            [12] 1090 	dec	sp
      00018C D0 07            [24] 1091 	pop	ar7
                                   1092 ;	radio/radio.c:326: n = length;
                                   1093 ;	radio/radio.c:327: if (n > TX_FIFO_THRESHOLD_LOW) {
      00018E EF               [12] 1094 	mov	a,r7
      00018F FE               [12] 1095 	mov	r6,a
      000190 24 DF            [12] 1096 	add	a,#0xff - 0x20
      000192 50 02            [24] 1097 	jnc	00104$
                                   1098 ;	radio/radio.c:328: n = TX_FIFO_THRESHOLD_LOW;
      000194 7E 20            [12] 1099 	mov	r6,#0x20
      000196                       1100 00104$:
                                   1101 ;	radio/radio.c:330: radio_write_transmit_fifo(n, buf);
      000196 78r15            [12] 1102 	mov	r0,#_radio_transmit_simple_PARM_2
      000198 79r13            [12] 1103 	mov	r1,#_radio_write_transmit_fifo_PARM_2
      00019A E2               [24] 1104 	movx	a,@r0
      00019B F3               [24] 1105 	movx	@r1,a
      00019C 08               [12] 1106 	inc	r0
      00019D E2               [24] 1107 	movx	a,@r0
      00019E 09               [12] 1108 	inc	r1
      00019F F3               [24] 1109 	movx	@r1,a
      0001A0 8E 82            [24] 1110 	mov	dpl,r6
      0001A2 C0 07            [24] 1111 	push	ar7
      0001A4 C0 06            [24] 1112 	push	ar6
      0001A6 12r00r88         [24] 1113 	lcall	_radio_write_transmit_fifo
      0001A9 D0 06            [24] 1114 	pop	ar6
      0001AB D0 07            [24] 1115 	pop	ar7
                                   1116 ;	radio/radio.c:331: length -= n;
      0001AD EF               [12] 1117 	mov	a,r7
      0001AE C3               [12] 1118 	clr	c
      0001AF 9E               [12] 1119 	subb	a,r6
      0001B0 FF               [12] 1120 	mov	r7,a
                                   1121 ;	radio/radio.c:332: buf += n;
      0001B1 78r15            [12] 1122 	mov	r0,#_radio_transmit_simple_PARM_2
      0001B3 E2               [24] 1123 	movx	a,@r0
      0001B4 2E               [12] 1124 	add	a,r6
      0001B5 F2               [24] 1125 	movx	@r0,a
      0001B6 08               [12] 1126 	inc	r0
      0001B7 E2               [24] 1127 	movx	a,@r0
      0001B8 34 00            [12] 1128 	addc	a,#0x00
      0001BA F2               [24] 1129 	movx	@r0,a
                                   1130 ;	radio/radio.c:335: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      0001BB C0 07            [24] 1131 	push	ar7
      0001BD E4               [12] 1132 	clr	a
      0001BE C0 E0            [24] 1133 	push	acc
      0001C0 75 82 05         [24] 1134 	mov	dpl,#0x05
      0001C3 12r08r14         [24] 1135 	lcall	_register_write
      0001C6 15 81            [12] 1136 	dec	sp
                                   1137 ;	radio/radio.c:336: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0);
      0001C8 E4               [12] 1138 	clr	a
      0001C9 C0 E0            [24] 1139 	push	acc
      0001CB 75 82 06         [24] 1140 	mov	dpl,#0x06
      0001CE 12r08r14         [24] 1141 	lcall	_register_write
      0001D1 15 81            [12] 1142 	dec	sp
                                   1143 ;	radio/radio.c:338: preamble_detected = 0;
      0001D3 C2*01            [12] 1144 	clr	_preamble_detected
                                   1145 ;	radio/radio.c:339: transmit_started = false;
      0001D5 C2*03            [12] 1146 	clr	_radio_transmit_simple_transmit_started_1_167
                                   1147 ;	radio/radio.c:342: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, EZRADIOPRO_TXON | EZRADIOPRO_XTON);
      0001D7 74 09            [12] 1148 	mov	a,#0x09
      0001D9 C0 E0            [24] 1149 	push	acc
      0001DB 75 82 07         [24] 1150 	mov	dpl,#0x07
      0001DE 12r08r14         [24] 1151 	lcall	_register_write
      0001E1 15 81            [12] 1152 	dec	sp
                                   1153 ;	radio/radio.c:348: tstart = timer2_tick();
      0001E3 12r00r00         [24] 1154 	lcall	_timer2_tick
      0001E6 AC 82            [24] 1155 	mov	r4,dpl
      0001E8 AD 83            [24] 1156 	mov	r5,dph
      0001EA D0 07            [24] 1157 	pop	ar7
                                   1158 ;	radio/radio.c:349: while ((uint16_t)(timer2_tick() - tstart) < timeout_ticks) {
      0001EC                       1159 00130$:
      0001EC C0 07            [24] 1160 	push	ar7
      0001EE C0 05            [24] 1161 	push	ar5
      0001F0 C0 04            [24] 1162 	push	ar4
      0001F2 12r00r00         [24] 1163 	lcall	_timer2_tick
      0001F5 AA 82            [24] 1164 	mov	r2,dpl
      0001F7 AB 83            [24] 1165 	mov	r3,dph
      0001F9 D0 04            [24] 1166 	pop	ar4
      0001FB D0 05            [24] 1167 	pop	ar5
      0001FD D0 07            [24] 1168 	pop	ar7
      0001FF EA               [12] 1169 	mov	a,r2
      000200 C3               [12] 1170 	clr	c
      000201 9C               [12] 1171 	subb	a,r4
      000202 FA               [12] 1172 	mov	r2,a
      000203 EB               [12] 1173 	mov	a,r3
      000204 9D               [12] 1174 	subb	a,r5
      000205 FB               [12] 1175 	mov	r3,a
      000206 78r17            [12] 1176 	mov	r0,#_radio_transmit_simple_PARM_3
      000208 C3               [12] 1177 	clr	c
      000209 E2               [24] 1178 	movx	a,@r0
      00020A F5 F0            [12] 1179 	mov	b,a
      00020C EA               [12] 1180 	mov	a,r2
      00020D 95 F0            [12] 1181 	subb	a,b
      00020F 08               [12] 1182 	inc	r0
      000210 E2               [24] 1183 	movx	a,@r0
      000211 F5 F0            [12] 1184 	mov	b,a
      000213 EB               [12] 1185 	mov	a,r3
      000214 95 F0            [12] 1186 	subb	a,b
      000216 40 03            [24] 1187 	jc	00199$
      000218 02r03r25         [24] 1188 	ljmp	00132$
      00021B                       1189 00199$:
                                   1190 ;	radio/radio.c:353: status = register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      00021B 75 82 03         [24] 1191 	mov	dpl,#0x03
      00021E C0 07            [24] 1192 	push	ar7
      000220 C0 05            [24] 1193 	push	ar5
      000222 C0 04            [24] 1194 	push	ar4
      000224 12r08r4A         [24] 1195 	lcall	_register_read
      000227 AB 82            [24] 1196 	mov	r3,dpl
      000229 D0 04            [24] 1197 	pop	ar4
      00022B D0 05            [24] 1198 	pop	ar5
      00022D D0 07            [24] 1199 	pop	ar7
                                   1200 ;	radio/radio.c:354: if (transmit_started && length != 0 && (status & EZRADIOPRO_ITXFFAEM)) {
      00022F 30*03 40         [24] 1201 	jnb	_radio_transmit_simple_transmit_started_1_167,00108$
      000232 EF               [12] 1202 	mov	a,r7
      000233 60 3D            [24] 1203 	jz	00108$
      000235 EB               [12] 1204 	mov	a,r3
      000236 30 E5 39         [24] 1205 	jnb	acc.5,00108$
                                   1206 ;	radio/radio.c:361: n = 4;
      000239 7E 04            [12] 1207 	mov	r6,#0x04
                                   1208 ;	radio/radio.c:362: if (n > length) {
      00023B BF 04 00         [24] 1209 	cjne	r7,#0x04,00203$
      00023E                       1210 00203$:
      00023E 50 02            [24] 1211 	jnc	00106$
                                   1212 ;	radio/radio.c:363: n = length;
      000240 8F 06            [24] 1213 	mov	ar6,r7
      000242                       1214 00106$:
                                   1215 ;	radio/radio.c:365: radio_write_transmit_fifo(n, buf);
      000242 78r15            [12] 1216 	mov	r0,#_radio_transmit_simple_PARM_2
      000244 79r13            [12] 1217 	mov	r1,#_radio_write_transmit_fifo_PARM_2
      000246 E2               [24] 1218 	movx	a,@r0
      000247 F3               [24] 1219 	movx	@r1,a
      000248 08               [12] 1220 	inc	r0
      000249 E2               [24] 1221 	movx	a,@r0
      00024A 09               [12] 1222 	inc	r1
      00024B F3               [24] 1223 	movx	@r1,a
      00024C 8E 82            [24] 1224 	mov	dpl,r6
      00024E C0 07            [24] 1225 	push	ar7
      000250 C0 06            [24] 1226 	push	ar6
      000252 C0 05            [24] 1227 	push	ar5
      000254 C0 04            [24] 1228 	push	ar4
      000256 12r00r88         [24] 1229 	lcall	_radio_write_transmit_fifo
      000259 D0 04            [24] 1230 	pop	ar4
      00025B D0 05            [24] 1231 	pop	ar5
      00025D D0 06            [24] 1232 	pop	ar6
      00025F D0 07            [24] 1233 	pop	ar7
                                   1234 ;	radio/radio.c:366: length -= n;
      000261 EF               [12] 1235 	mov	a,r7
      000262 C3               [12] 1236 	clr	c
      000263 9E               [12] 1237 	subb	a,r6
      000264 FF               [12] 1238 	mov	r7,a
                                   1239 ;	radio/radio.c:367: buf += n;
      000265 78r15            [12] 1240 	mov	r0,#_radio_transmit_simple_PARM_2
      000267 E2               [24] 1241 	movx	a,@r0
      000268 2E               [12] 1242 	add	a,r6
      000269 F2               [24] 1243 	movx	@r0,a
      00026A 08               [12] 1244 	inc	r0
      00026B E2               [24] 1245 	movx	a,@r0
      00026C 34 00            [12] 1246 	addc	a,#0x00
      00026E F2               [24] 1247 	movx	@r0,a
                                   1248 ;	radio/radio.c:368: continue;
      00026F 02r01rEC         [24] 1249 	ljmp	00130$
      000272                       1250 00108$:
                                   1251 ;	radio/radio.c:370: if (transmit_started && length != 0 && (status & EZRADIOPRO_ITXFFAFULL) == 0) {
      000272 30*03 40         [24] 1252 	jnb	_radio_transmit_simple_transmit_started_1_167,00114$
      000275 EF               [12] 1253 	mov	a,r7
      000276 60 3D            [24] 1254 	jz	00114$
      000278 EB               [12] 1255 	mov	a,r3
      000279 20 E6 39         [24] 1256 	jb	acc.6,00114$
                                   1257 ;	radio/radio.c:374: n = 4;
      00027C 7E 04            [12] 1258 	mov	r6,#0x04
                                   1259 ;	radio/radio.c:375: if (n > length) {
      00027E BF 04 00         [24] 1260 	cjne	r7,#0x04,00208$
      000281                       1261 00208$:
      000281 50 02            [24] 1262 	jnc	00112$
                                   1263 ;	radio/radio.c:376: n = length;
      000283 8F 06            [24] 1264 	mov	ar6,r7
      000285                       1265 00112$:
                                   1266 ;	radio/radio.c:378: radio_write_transmit_fifo(n, buf);
      000285 78r15            [12] 1267 	mov	r0,#_radio_transmit_simple_PARM_2
      000287 79r13            [12] 1268 	mov	r1,#_radio_write_transmit_fifo_PARM_2
      000289 E2               [24] 1269 	movx	a,@r0
      00028A F3               [24] 1270 	movx	@r1,a
      00028B 08               [12] 1271 	inc	r0
      00028C E2               [24] 1272 	movx	a,@r0
      00028D 09               [12] 1273 	inc	r1
      00028E F3               [24] 1274 	movx	@r1,a
      00028F 8E 82            [24] 1275 	mov	dpl,r6
      000291 C0 07            [24] 1276 	push	ar7
      000293 C0 06            [24] 1277 	push	ar6
      000295 C0 05            [24] 1278 	push	ar5
      000297 C0 04            [24] 1279 	push	ar4
      000299 12r00r88         [24] 1280 	lcall	_radio_write_transmit_fifo
      00029C D0 04            [24] 1281 	pop	ar4
      00029E D0 05            [24] 1282 	pop	ar5
      0002A0 D0 06            [24] 1283 	pop	ar6
      0002A2 D0 07            [24] 1284 	pop	ar7
                                   1285 ;	radio/radio.c:379: length -= n;
      0002A4 EF               [12] 1286 	mov	a,r7
      0002A5 C3               [12] 1287 	clr	c
      0002A6 9E               [12] 1288 	subb	a,r6
      0002A7 FF               [12] 1289 	mov	r7,a
                                   1290 ;	radio/radio.c:380: buf += n;
      0002A8 78r15            [12] 1291 	mov	r0,#_radio_transmit_simple_PARM_2
      0002AA E2               [24] 1292 	movx	a,@r0
      0002AB 2E               [12] 1293 	add	a,r6
      0002AC F2               [24] 1294 	movx	@r0,a
      0002AD 08               [12] 1295 	inc	r0
      0002AE E2               [24] 1296 	movx	a,@r0
      0002AF 34 00            [12] 1297 	addc	a,#0x00
      0002B1 F2               [24] 1298 	movx	@r0,a
                                   1299 ;	radio/radio.c:381: continue;
      0002B2 02r01rEC         [24] 1300 	ljmp	00130$
      0002B5                       1301 00114$:
                                   1302 ;	radio/radio.c:384: if (status & EZRADIOPRO_IFFERR) {
      0002B5 EB               [12] 1303 	mov	a,r3
      0002B6 30 E7 20         [24] 1304 	jnb	acc.7,00120$
                                   1305 ;	radio/radio.c:386: radio_clear_transmit_fifo();
      0002B9 12r01r09         [24] 1306 	lcall	_radio_clear_transmit_fifo
                                   1307 ;	radio/radio.c:388: if (errors.tx_errors != 0xFFFF) {
      0002BC 78r02            [12] 1308 	mov	r0,#(_errors + 0x0002)
      0002BE E2               [24] 1309 	movx	a,@r0
      0002BF FA               [12] 1310 	mov	r2,a
      0002C0 08               [12] 1311 	inc	r0
      0002C1 E2               [24] 1312 	movx	a,@r0
      0002C2 FE               [12] 1313 	mov	r6,a
      0002C3 BA FF 05         [24] 1314 	cjne	r2,#0xFF,00211$
      0002C6 BE FF 02         [24] 1315 	cjne	r6,#0xFF,00211$
      0002C9 80 0C            [24] 1316 	sjmp	00118$
      0002CB                       1317 00211$:
                                   1318 ;	radio/radio.c:389: errors.tx_errors++;
      0002CB 0A               [12] 1319 	inc	r2
      0002CC BA 00 01         [24] 1320 	cjne	r2,#0x00,00212$
      0002CF 0E               [12] 1321 	inc	r6
      0002D0                       1322 00212$:
      0002D0 78r02            [12] 1323 	mov	r0,#(_errors + 0x0002)
      0002D2 EA               [12] 1324 	mov	a,r2
      0002D3 F2               [24] 1325 	movx	@r0,a
      0002D4 08               [12] 1326 	inc	r0
      0002D5 EE               [12] 1327 	mov	a,r6
      0002D6 F2               [24] 1328 	movx	@r0,a
      0002D7                       1329 00118$:
                                   1330 ;	radio/radio.c:394: return false;
      0002D7 C3               [12] 1331 	clr	c
      0002D8 22               [24] 1332 	ret
      0002D9                       1333 00120$:
                                   1334 ;	radio/radio.c:399: status = register_read(EZRADIOPRO_DEVICE_STATUS);
      0002D9 75 82 02         [24] 1335 	mov	dpl,#0x02
      0002DC C0 07            [24] 1336 	push	ar7
      0002DE C0 05            [24] 1337 	push	ar5
      0002E0 C0 04            [24] 1338 	push	ar4
      0002E2 12r08r4A         [24] 1339 	lcall	_register_read
      0002E5 AB 82            [24] 1340 	mov	r3,dpl
      0002E7 D0 04            [24] 1341 	pop	ar4
      0002E9 D0 05            [24] 1342 	pop	ar5
      0002EB D0 07            [24] 1343 	pop	ar7
                                   1344 ;	radio/radio.c:400: if (status & 0x02) {
      0002ED EB               [12] 1345 	mov	a,r3
      0002EE 30 E1 05         [24] 1346 	jnb	acc.1,00122$
                                   1347 ;	radio/radio.c:402: transmit_started = true;
      0002F1 D2*03            [12] 1348 	setb	_radio_transmit_simple_transmit_started_1_167
                                   1349 ;	radio/radio.c:403: continue;
      0002F3 02r01rEC         [24] 1350 	ljmp	00130$
      0002F6                       1351 00122$:
                                   1352 ;	radio/radio.c:405: if (transmit_started && (status & 0x02) == 0) {
      0002F6 20*03 03         [24] 1353 	jb	_radio_transmit_simple_transmit_started_1_167,00214$
      0002F9 02r01rEC         [24] 1354 	ljmp	00130$
      0002FC                       1355 00214$:
      0002FC EB               [12] 1356 	mov	a,r3
      0002FD 30 E1 03         [24] 1357 	jnb	acc.1,00215$
      000300 02r01rEC         [24] 1358 	ljmp	00130$
      000303                       1359 00215$:
                                   1360 ;	radio/radio.c:408: if (length != 0) {
      000303 EF               [12] 1361 	mov	a,r7
      000304 60 1D            [24] 1362 	jz	00126$
                                   1363 ;	radio/radio.c:410: if (errors.tx_errors != 0xFFFF) {
      000306 78r02            [12] 1364 	mov	r0,#(_errors + 0x0002)
      000308 E2               [24] 1365 	movx	a,@r0
      000309 FE               [12] 1366 	mov	r6,a
      00030A 08               [12] 1367 	inc	r0
      00030B E2               [24] 1368 	movx	a,@r0
      00030C FF               [12] 1369 	mov	r7,a
      00030D BE FF 05         [24] 1370 	cjne	r6,#0xFF,00217$
      000310 BF FF 02         [24] 1371 	cjne	r7,#0xFF,00217$
      000313 80 0C            [24] 1372 	sjmp	00124$
      000315                       1373 00217$:
                                   1374 ;	radio/radio.c:411: errors.tx_errors++;
      000315 0E               [12] 1375 	inc	r6
      000316 BE 00 01         [24] 1376 	cjne	r6,#0x00,00218$
      000319 0F               [12] 1377 	inc	r7
      00031A                       1378 00218$:
      00031A 78r02            [12] 1379 	mov	r0,#(_errors + 0x0002)
      00031C EE               [12] 1380 	mov	a,r6
      00031D F2               [24] 1381 	movx	@r0,a
      00031E 08               [12] 1382 	inc	r0
      00031F EF               [12] 1383 	mov	a,r7
      000320 F2               [24] 1384 	movx	@r0,a
      000321                       1385 00124$:
                                   1386 ;	radio/radio.c:416: return false;
      000321 C3               [12] 1387 	clr	c
      000322 22               [24] 1388 	ret
      000323                       1389 00126$:
                                   1390 ;	radio/radio.c:421: return true;
      000323 D3               [12] 1391 	setb	c
      000324 22               [24] 1392 	ret
      000325                       1393 00132$:
                                   1394 ;	radio/radio.c:435: if (errors.tx_errors != 0xFFFF) {
      000325 78r02            [12] 1395 	mov	r0,#(_errors + 0x0002)
      000327 E2               [24] 1396 	movx	a,@r0
      000328 FE               [12] 1397 	mov	r6,a
      000329 08               [12] 1398 	inc	r0
      00032A E2               [24] 1399 	movx	a,@r0
      00032B FF               [12] 1400 	mov	r7,a
      00032C BE FF 05         [24] 1401 	cjne	r6,#0xFF,00219$
      00032F BF FF 02         [24] 1402 	cjne	r7,#0xFF,00219$
      000332 80 0C            [24] 1403 	sjmp	00134$
      000334                       1404 00219$:
                                   1405 ;	radio/radio.c:436: errors.tx_errors++;
      000334 0E               [12] 1406 	inc	r6
      000335 BE 00 01         [24] 1407 	cjne	r6,#0x00,00220$
      000338 0F               [12] 1408 	inc	r7
      000339                       1409 00220$:
      000339 78r02            [12] 1410 	mov	r0,#(_errors + 0x0002)
      00033B EE               [12] 1411 	mov	a,r6
      00033C F2               [24] 1412 	movx	@r0,a
      00033D 08               [12] 1413 	inc	r0
      00033E EF               [12] 1414 	mov	a,r7
      00033F F2               [24] 1415 	movx	@r0,a
      000340                       1416 00134$:
                                   1417 ;	radio/radio.c:439: return false;
      000340 C3               [12] 1418 	clr	c
      000341 22               [24] 1419 	ret
                                   1420 ;------------------------------------------------------------
                                   1421 ;Allocation info for local variables in function 'radio_transmit'
                                   1422 ;------------------------------------------------------------
                                   1423 ;length                    Allocated with name '_radio_transmit_length_1_182'
                                   1424 ;------------------------------------------------------------
                                   1425 ;	radio/radio.c:503: radio_transmit(uint8_t length, __xdata uint8_t * __pdata buf, __pdata uint16_t timeout_ticks)
                                   1426 ;	-----------------------------------------
                                   1427 ;	 function radio_transmit
                                   1428 ;	-----------------------------------------
      000342                       1429 _radio_transmit:
      000342 E5 82            [12] 1430 	mov	a,dpl
      000344 90r00rFF         [24] 1431 	mov	dptr,#_radio_transmit_length_1_182
      000347 F0               [24] 1432 	movx	@dptr,a
                                   1433 ;	radio/radio.c:507: EX0_SAVE_DISABLE;
      000348 A2 A8            [12] 1434 	mov	c,_EX0
      00034A 92*05            [24] 1435 	mov	_radio_transmit_EX0_saved_1_183,c
      00034C C2 A8            [12] 1436 	clr	_EX0
                                   1437 ;	radio/radio.c:520: ret = radio_transmit_simple(length, buf, timeout_ticks);
      00034E 90r00rFF         [24] 1438 	mov	dptr,#_radio_transmit_length_1_182
      000351 E0               [24] 1439 	movx	a,@dptr
      000352 FF               [12] 1440 	mov	r7,a
      000353 78r19            [12] 1441 	mov	r0,#_radio_transmit_PARM_2
      000355 79r15            [12] 1442 	mov	r1,#_radio_transmit_simple_PARM_2
      000357 E2               [24] 1443 	movx	a,@r0
      000358 F3               [24] 1444 	movx	@r1,a
      000359 08               [12] 1445 	inc	r0
      00035A E2               [24] 1446 	movx	a,@r0
      00035B 09               [12] 1447 	inc	r1
      00035C F3               [24] 1448 	movx	@r1,a
      00035D 78r1B            [12] 1449 	mov	r0,#_radio_transmit_PARM_3
      00035F 79r17            [12] 1450 	mov	r1,#_radio_transmit_simple_PARM_3
      000361 E2               [24] 1451 	movx	a,@r0
      000362 F3               [24] 1452 	movx	@r1,a
      000363 08               [12] 1453 	inc	r0
      000364 E2               [24] 1454 	movx	a,@r0
      000365 09               [12] 1455 	inc	r1
      000366 F3               [24] 1456 	movx	@r1,a
      000367 8F 82            [24] 1457 	mov	dpl,r7
      000369 12r01r59         [24] 1458 	lcall	_radio_transmit_simple
      00036C 92*04            [24] 1459 	mov	_radio_transmit_ret_1_183,c
                                   1460 ;	radio/radio.c:526: EX0_RESTORE;
      00036E A2*05            [12] 1461 	mov	c,_radio_transmit_EX0_saved_1_183
      000370 92 A8            [24] 1462 	mov	_EX0,c
                                   1463 ;	radio/radio.c:527: return ret;
      000372 A2*04            [12] 1464 	mov	c,_radio_transmit_ret_1_183
      000374 22               [24] 1465 	ret
                                   1466 ;------------------------------------------------------------
                                   1467 ;Allocation info for local variables in function 'radio_receiver_on'
                                   1468 ;------------------------------------------------------------
                                   1469 ;	radio/radio.c:534: radio_receiver_on(void)
                                   1470 ;	-----------------------------------------
                                   1471 ;	 function radio_receiver_on
                                   1472 ;	-----------------------------------------
      000375                       1473 _radio_receiver_on:
                                   1474 ;	radio/radio.c:536: EX0 = 0;
      000375 C2 A8            [12] 1475 	clr	_EX0
                                   1476 ;	radio/radio.c:538: packet_received = 0;
      000377 C2*00            [12] 1477 	clr	_packet_received
                                   1478 ;	radio/radio.c:539: receive_packet_length = 0;
      000379 78r00            [12] 1479 	mov	r0,#_receive_packet_length
      00037B E4               [12] 1480 	clr	a
      00037C F2               [24] 1481 	movx	@r0,a
                                   1482 ;	radio/radio.c:540: preamble_detected = 0;
      00037D C2*01            [12] 1483 	clr	_preamble_detected
                                   1484 ;	radio/radio.c:541: partial_packet_length = 0;
      00037F 78r01            [12] 1485 	mov	r0,#_partial_packet_length
      000381 E4               [12] 1486 	clr	a
      000382 F2               [24] 1487 	movx	@r0,a
                                   1488 ;	radio/radio.c:544: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, RADIO_RX_INTERRUPTS);
      000383 74 13            [12] 1489 	mov	a,#0x13
      000385 C0 E0            [24] 1490 	push	acc
      000387 75 82 05         [24] 1491 	mov	dpl,#0x05
      00038A 12r08r14         [24] 1492 	lcall	_register_write
      00038D 15 81            [12] 1493 	dec	sp
                                   1494 ;	radio/radio.c:545: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, EZRADIOPRO_ENPREAVAL);
      00038F 74 40            [12] 1495 	mov	a,#0x40
      000391 C0 E0            [24] 1496 	push	acc
      000393 75 82 06         [24] 1497 	mov	dpl,#0x06
      000396 12r08r14         [24] 1498 	lcall	_register_write
      000399 15 81            [12] 1499 	dec	sp
                                   1500 ;	radio/radio.c:547: clear_status_registers();
      00039B 12r08rBE         [24] 1501 	lcall	_clear_status_registers
                                   1502 ;	radio/radio.c:548: radio_clear_transmit_fifo();
      00039E 12r01r09         [24] 1503 	lcall	_radio_clear_transmit_fifo
                                   1504 ;	radio/radio.c:549: radio_clear_receive_fifo();
      0003A1 12r01r31         [24] 1505 	lcall	_radio_clear_receive_fifo
                                   1506 ;	radio/radio.c:552: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, EZRADIOPRO_RXON | EZRADIOPRO_XTON);
      0003A4 74 05            [12] 1507 	mov	a,#0x05
      0003A6 C0 E0            [24] 1508 	push	acc
      0003A8 75 82 07         [24] 1509 	mov	dpl,#0x07
      0003AB 12r08r14         [24] 1510 	lcall	_register_write
      0003AE 15 81            [12] 1511 	dec	sp
                                   1512 ;	radio/radio.c:555: EX0 = 1;
      0003B0 D2 A8            [12] 1513 	setb	_EX0
                                   1514 ;	radio/radio.c:557: return true;
      0003B2 D3               [12] 1515 	setb	c
      0003B3 22               [24] 1516 	ret
                                   1517 ;------------------------------------------------------------
                                   1518 ;Allocation info for local variables in function 'radio_initialise'
                                   1519 ;------------------------------------------------------------
                                   1520 ;status                    Allocated with name '_radio_initialise_status_1_187'
                                   1521 ;------------------------------------------------------------
                                   1522 ;	radio/radio.c:564: radio_initialise(void)
                                   1523 ;	-----------------------------------------
                                   1524 ;	 function radio_initialise
                                   1525 ;	-----------------------------------------
      0003B4                       1526 _radio_initialise:
                                   1527 ;	radio/radio.c:568: delay_msec(50);
      0003B4 90 00 32         [24] 1528 	mov	dptr,#0x0032
      0003B7 12r00r00         [24] 1529 	lcall	_delay_msec
                                   1530 ;	radio/radio.c:571: status = register_read(EZRADIOPRO_DEVICE_VERSION);
      0003BA 75 82 01         [24] 1531 	mov	dpl,#0x01
      0003BD 12r08r4A         [24] 1532 	lcall	_register_read
      0003C0 AF 82            [24] 1533 	mov	r7,dpl
                                   1534 ;	radio/radio.c:572: if (status == 0xFF || status < 5) {
      0003C2 BF FF 02         [24] 1535 	cjne	r7,#0xFF,00119$
      0003C5 80 05            [24] 1536 	sjmp	00101$
      0003C7                       1537 00119$:
      0003C7 BF 05 00         [24] 1538 	cjne	r7,#0x05,00120$
      0003CA                       1539 00120$:
      0003CA 50 02            [24] 1540 	jnc	00102$
      0003CC                       1541 00101$:
                                   1542 ;	radio/radio.c:574: return false;
      0003CC C3               [12] 1543 	clr	c
      0003CD 22               [24] 1544 	ret
      0003CE                       1545 00102$:
                                   1546 ;	radio/radio.c:578: software_reset();
      0003CE 12r09r1E         [24] 1547 	lcall	_software_reset
                                   1548 ;	radio/radio.c:580: status = register_read(EZRADIOPRO_DEVICE_VERSION);
      0003D1 75 82 01         [24] 1549 	mov	dpl,#0x01
      0003D4 12r08r4A         [24] 1550 	lcall	_register_read
                                   1551 ;	radio/radio.c:582: if ((status & EZRADIOPRO_IPOR) == 0) {
      0003D7 E5 82            [12] 1552 	mov	a,dpl
      0003D9 FF               [12] 1553 	mov	r7,a
      0003DA 20 E0 06         [24] 1554 	jb	acc.0,00105$
                                   1555 ;	radio/radio.c:584: return software_reset();
      0003DD 12r09r1E         [24] 1556 	lcall	_software_reset
      0003E0 92*06            [24] 1557 	mov  _radio_initialise_sloc0_1_0,c
      0003E2 22               [24] 1558 	ret
      0003E3                       1559 00105$:
                                   1560 ;	radio/radio.c:587: if (status & EZRADIOPRO_ICHIPRDY) {
      0003E3 EF               [12] 1561 	mov	a,r7
      0003E4 30 E1 02         [24] 1562 	jnb	acc.1,00107$
                                   1563 ;	radio/radio.c:589: return true;
      0003E7 D3               [12] 1564 	setb	c
      0003E8 22               [24] 1565 	ret
      0003E9                       1566 00107$:
                                   1567 ;	radio/radio.c:592: return false;
      0003E9 C3               [12] 1568 	clr	c
      0003EA 22               [24] 1569 	ret
                                   1570 ;------------------------------------------------------------
                                   1571 ;Allocation info for local variables in function 'radio_set_frequency'
                                   1572 ;------------------------------------------------------------
                                   1573 ;	radio/radio.c:599: radio_set_frequency(__pdata uint32_t value)
                                   1574 ;	-----------------------------------------
                                   1575 ;	 function radio_set_frequency
                                   1576 ;	-----------------------------------------
      0003EB                       1577 _radio_set_frequency:
      0003EB AC 82            [24] 1578 	mov	r4,dpl
      0003ED AD 83            [24] 1579 	mov	r5,dph
      0003EF AE F0            [24] 1580 	mov	r6,b
      0003F1 FF               [12] 1581 	mov	r7,a
                                   1582 ;	radio/radio.c:601: if (value < 240000000UL || value > 935000000UL) {
      0003F2 C3               [12] 1583 	clr	c
      0003F3 ED               [12] 1584 	mov	a,r5
      0003F4 94 1C            [12] 1585 	subb	a,#0x1C
      0003F6 EE               [12] 1586 	mov	a,r6
      0003F7 94 4E            [12] 1587 	subb	a,#0x4E
      0003F9 EF               [12] 1588 	mov	a,r7
      0003FA 94 0E            [12] 1589 	subb	a,#0x0E
      0003FC 40 0E            [24] 1590 	jc	00101$
      0003FE 74 C0            [12] 1591 	mov	a,#0xC0
      000400 9C               [12] 1592 	subb	a,r4
      000401 74 F7            [12] 1593 	mov	a,#0xF7
      000403 9D               [12] 1594 	subb	a,r5
      000404 74 BA            [12] 1595 	mov	a,#0xBA
      000406 9E               [12] 1596 	subb	a,r6
      000407 74 37            [12] 1597 	mov	a,#0x37
      000409 9F               [12] 1598 	subb	a,r7
      00040A 50 02            [24] 1599 	jnc	00102$
      00040C                       1600 00101$:
                                   1601 ;	radio/radio.c:602: return false;
      00040C C3               [12] 1602 	clr	c
      00040D 22               [24] 1603 	ret
      00040E                       1604 00102$:
                                   1605 ;	radio/radio.c:604: settings.frequency = value;
      00040E 78r05            [12] 1606 	mov	r0,#_settings
      000410 EC               [12] 1607 	mov	a,r4
      000411 F2               [24] 1608 	movx	@r0,a
      000412 08               [12] 1609 	inc	r0
      000413 ED               [12] 1610 	mov	a,r5
      000414 F2               [24] 1611 	movx	@r0,a
      000415 08               [12] 1612 	inc	r0
      000416 EE               [12] 1613 	mov	a,r6
      000417 F2               [24] 1614 	movx	@r0,a
      000418 08               [12] 1615 	inc	r0
      000419 EF               [12] 1616 	mov	a,r7
      00041A F2               [24] 1617 	movx	@r0,a
                                   1618 ;	radio/radio.c:605: set_frequency_registers(value);
      00041B 8C 82            [24] 1619 	mov	dpl,r4
      00041D 8D 83            [24] 1620 	mov	dph,r5
      00041F 8E F0            [24] 1621 	mov	b,r6
      000421 EF               [12] 1622 	mov	a,r7
      000422 12r09r8A         [24] 1623 	lcall	_set_frequency_registers
                                   1624 ;	radio/radio.c:606: return true;
      000425 D3               [12] 1625 	setb	c
      000426 22               [24] 1626 	ret
                                   1627 ;------------------------------------------------------------
                                   1628 ;Allocation info for local variables in function 'radio_set_channel_spacing'
                                   1629 ;------------------------------------------------------------
                                   1630 ;	radio/radio.c:613: radio_set_channel_spacing(__pdata uint32_t value)
                                   1631 ;	-----------------------------------------
                                   1632 ;	 function radio_set_channel_spacing
                                   1633 ;	-----------------------------------------
      000427                       1634 _radio_set_channel_spacing:
      000427 AC 82            [24] 1635 	mov	r4,dpl
      000429 AD 83            [24] 1636 	mov	r5,dph
      00042B AE F0            [24] 1637 	mov	r6,b
      00042D FF               [12] 1638 	mov	r7,a
                                   1639 ;	radio/radio.c:615: if (value > 2550000L)
      00042E C3               [12] 1640 	clr	c
      00042F 74 F0            [12] 1641 	mov	a,#0xF0
      000431 9C               [12] 1642 	subb	a,r4
      000432 74 E8            [12] 1643 	mov	a,#0xE8
      000434 9D               [12] 1644 	subb	a,r5
      000435 74 26            [12] 1645 	mov	a,#0x26
      000437 9E               [12] 1646 	subb	a,r6
      000438 E4               [12] 1647 	clr	a
      000439 9F               [12] 1648 	subb	a,r7
      00043A 50 02            [24] 1649 	jnc	00102$
                                   1650 ;	radio/radio.c:616: return false;
      00043C C3               [12] 1651 	clr	c
      00043D 22               [24] 1652 	ret
      00043E                       1653 00102$:
                                   1654 ;	radio/radio.c:617: value = scale_uint32(value, 10000);
      00043E 78r1D            [12] 1655 	mov	r0,#_scale_uint32_PARM_2
      000440 74 10            [12] 1656 	mov	a,#0x10
      000442 F2               [24] 1657 	movx	@r0,a
      000443 08               [12] 1658 	inc	r0
      000444 74 27            [12] 1659 	mov	a,#0x27
      000446 F2               [24] 1660 	movx	@r0,a
      000447 08               [12] 1661 	inc	r0
      000448 E4               [12] 1662 	clr	a
      000449 F2               [24] 1663 	movx	@r0,a
      00044A 08               [12] 1664 	inc	r0
      00044B F2               [24] 1665 	movx	@r0,a
      00044C 8C 82            [24] 1666 	mov	dpl,r4
      00044E 8D 83            [24] 1667 	mov	dph,r5
      000450 8E F0            [24] 1668 	mov	b,r6
      000452 EF               [12] 1669 	mov	a,r7
      000453 12r08rCA         [24] 1670 	lcall	_scale_uint32
      000456 AC 82            [24] 1671 	mov	r4,dpl
      000458 AD 83            [24] 1672 	mov	r5,dph
      00045A AE F0            [24] 1673 	mov	r6,b
      00045C FF               [12] 1674 	mov	r7,a
                                   1675 ;	radio/radio.c:618: settings.channel_spacing = value;
      00045D 78r09            [12] 1676 	mov	r0,#(_settings + 0x0004)
      00045F EC               [12] 1677 	mov	a,r4
      000460 F2               [24] 1678 	movx	@r0,a
      000461 08               [12] 1679 	inc	r0
      000462 ED               [12] 1680 	mov	a,r5
      000463 F2               [24] 1681 	movx	@r0,a
      000464 08               [12] 1682 	inc	r0
      000465 EE               [12] 1683 	mov	a,r6
      000466 F2               [24] 1684 	movx	@r0,a
      000467 08               [12] 1685 	inc	r0
      000468 EF               [12] 1686 	mov	a,r7
      000469 F2               [24] 1687 	movx	@r0,a
                                   1688 ;	radio/radio.c:619: register_write(EZRADIOPRO_FREQUENCY_HOPPING_STEP_SIZE, value);
      00046A C0 04            [24] 1689 	push	ar4
      00046C 75 82 7A         [24] 1690 	mov	dpl,#0x7A
      00046F 12r08r14         [24] 1691 	lcall	_register_write
      000472 15 81            [12] 1692 	dec	sp
                                   1693 ;	radio/radio.c:620: return true;
      000474 D3               [12] 1694 	setb	c
      000475 22               [24] 1695 	ret
                                   1696 ;------------------------------------------------------------
                                   1697 ;Allocation info for local variables in function 'radio_set_channel'
                                   1698 ;------------------------------------------------------------
                                   1699 ;channel                   Allocated with name '_radio_set_channel_channel_1_196'
                                   1700 ;------------------------------------------------------------
                                   1701 ;	radio/radio.c:626: radio_set_channel(uint8_t channel)
                                   1702 ;	-----------------------------------------
                                   1703 ;	 function radio_set_channel
                                   1704 ;	-----------------------------------------
      000476                       1705 _radio_set_channel:
      000476 E5 82            [12] 1706 	mov	a,dpl
      000478 90r01r00         [24] 1707 	mov	dptr,#_radio_set_channel_channel_1_196
      00047B F0               [24] 1708 	movx	@dptr,a
                                   1709 ;	radio/radio.c:628: if (channel != settings.current_channel) {
      00047C 78r0E            [12] 1710 	mov	r0,#(_settings + 0x0009)
      00047E E2               [24] 1711 	movx	a,@r0
      00047F FF               [12] 1712 	mov	r7,a
      000480 E0               [24] 1713 	movx	a,@dptr
      000481 FE               [12] 1714 	mov	r6,a
      000482 B5 07 01         [24] 1715 	cjne	a,ar7,00108$
      000485 22               [24] 1716 	ret
      000486                       1717 00108$:
                                   1718 ;	radio/radio.c:629: settings.current_channel = channel;
      000486 78r0E            [12] 1719 	mov	r0,#(_settings + 0x0009)
      000488 EE               [12] 1720 	mov	a,r6
      000489 F2               [24] 1721 	movx	@r0,a
                                   1722 ;	radio/radio.c:630: register_write(EZRADIOPRO_FREQUENCY_HOPPING_CHANNEL_SELECT, channel);
      00048A C0 06            [24] 1723 	push	ar6
      00048C 75 82 79         [24] 1724 	mov	dpl,#0x79
      00048F 12r08r14         [24] 1725 	lcall	_register_write
      000492 15 81            [12] 1726 	dec	sp
                                   1727 ;	radio/radio.c:631: preamble_detected = 0;
      000494 C2*01            [12] 1728 	clr	_preamble_detected
      000496 22               [24] 1729 	ret
                                   1730 ;------------------------------------------------------------
                                   1731 ;Allocation info for local variables in function 'radio_get_channel'
                                   1732 ;------------------------------------------------------------
                                   1733 ;	radio/radio.c:638: radio_get_channel(void)
                                   1734 ;	-----------------------------------------
                                   1735 ;	 function radio_get_channel
                                   1736 ;	-----------------------------------------
      000497                       1737 _radio_get_channel:
                                   1738 ;	radio/radio.c:640: return settings.current_channel;
      000497 78r0E            [12] 1739 	mov	r0,#(_settings + 0x0009)
      000499 E2               [24] 1740 	movx	a,@r0
      00049A F5 82            [12] 1741 	mov	dpl,a
      00049C 22               [24] 1742 	ret
                                   1743 ;------------------------------------------------------------
                                   1744 ;Allocation info for local variables in function 'radio_configure'
                                   1745 ;------------------------------------------------------------
                                   1746 ;	radio/radio.c:737: radio_configure(__pdata uint8_t air_rate)
                                   1747 ;	-----------------------------------------
                                   1748 ;	 function radio_configure
                                   1749 ;	-----------------------------------------
      00049D                       1750 _radio_configure:
      00049D AF 82            [24] 1751 	mov	r7,dpl
                                   1752 ;	radio/radio.c:742: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0x00);
      00049F C0 07            [24] 1753 	push	ar7
      0004A1 E4               [12] 1754 	clr	a
      0004A2 C0 E0            [24] 1755 	push	acc
      0004A4 75 82 05         [24] 1756 	mov	dpl,#0x05
      0004A7 12r08r14         [24] 1757 	lcall	_register_write
      0004AA 15 81            [12] 1758 	dec	sp
                                   1759 ;	radio/radio.c:743: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0x00);
      0004AC E4               [12] 1760 	clr	a
      0004AD C0 E0            [24] 1761 	push	acc
      0004AF 75 82 06         [24] 1762 	mov	dpl,#0x06
      0004B2 12r08r14         [24] 1763 	lcall	_register_write
      0004B5 15 81            [12] 1764 	dec	sp
                                   1765 ;	radio/radio.c:745: clear_status_registers();
      0004B7 12r08rBE         [24] 1766 	lcall	_clear_status_registers
                                   1767 ;	radio/radio.c:759: register_write(EZRADIOPRO_GPIO0_CONFIGURATION, 0x15);	// RX data (output)
      0004BA 74 15            [12] 1768 	mov	a,#0x15
      0004BC C0 E0            [24] 1769 	push	acc
      0004BE 75 82 0B         [24] 1770 	mov	dpl,#0x0B
      0004C1 12r08r14         [24] 1771 	lcall	_register_write
      0004C4 15 81            [12] 1772 	dec	sp
                                   1773 ;	radio/radio.c:760: register_write(EZRADIOPRO_GPIO1_CONFIGURATION, 0x12);	// RX data (output)
      0004C6 74 12            [12] 1774 	mov	a,#0x12
      0004C8 C0 E0            [24] 1775 	push	acc
      0004CA 75 82 0C         [24] 1776 	mov	dpl,#0x0C
      0004CD 12r08r14         [24] 1777 	lcall	_register_write
      0004D0 15 81            [12] 1778 	dec	sp
                                   1779 ;	radio/radio.c:762: radio_set_diversity(DIVERSITY_ENABLED);
      0004D2 75 82 00         [24] 1780 	mov	dpl,#0x00
      0004D5 12r0Cr3B         [24] 1781 	lcall	_radio_set_diversity
                                   1782 ;	radio/radio.c:774: register_write(EZRADIOPRO_CRYSTAL_OSCILLATOR_LOAD_CAPACITANCE, EZRADIOPRO_OSC_CAP_VALUE);
      0004D8 74 B6            [12] 1783 	mov	a,#0xB6
      0004DA C0 E0            [24] 1784 	push	acc
      0004DC 75 82 09         [24] 1785 	mov	dpl,#0x09
      0004DF 12r08r14         [24] 1786 	lcall	_register_write
      0004E2 15 81            [12] 1787 	dec	sp
      0004E4 D0 07            [24] 1788 	pop	ar7
                                   1789 ;	radio/radio.c:777: if (air_rate > 100) {
      0004E6 EF               [12] 1790 	mov	a,r7
      0004E7 24 9B            [12] 1791 	add	a,#0xff - 0x64
      0004E9 50 10            [24] 1792 	jnc	00102$
                                   1793 ;	radio/radio.c:778: register_write(EZRADIOPRO_CHARGEPUMP_CURRENT_TRIMMING_OVERRIDE, 0xC0);
      0004EB C0 07            [24] 1794 	push	ar7
      0004ED 74 C0            [12] 1795 	mov	a,#0xC0
      0004EF C0 E0            [24] 1796 	push	acc
      0004F1 75 82 58         [24] 1797 	mov	dpl,#0x58
      0004F4 12r08r14         [24] 1798 	lcall	_register_write
      0004F7 15 81            [12] 1799 	dec	sp
      0004F9 D0 07            [24] 1800 	pop	ar7
      0004FB                       1801 00102$:
                                   1802 ;	radio/radio.c:782: set_frequency_registers(settings.frequency);
      0004FB 78r05            [12] 1803 	mov	r0,#_settings
      0004FD E2               [24] 1804 	movx	a,@r0
      0004FE FB               [12] 1805 	mov	r3,a
      0004FF 08               [12] 1806 	inc	r0
      000500 E2               [24] 1807 	movx	a,@r0
      000501 FC               [12] 1808 	mov	r4,a
      000502 08               [12] 1809 	inc	r0
      000503 E2               [24] 1810 	movx	a,@r0
      000504 FD               [12] 1811 	mov	r5,a
      000505 08               [12] 1812 	inc	r0
      000506 E2               [24] 1813 	movx	a,@r0
      000507 8B 82            [24] 1814 	mov	dpl,r3
      000509 8C 83            [24] 1815 	mov	dph,r4
      00050B 8D F0            [24] 1816 	mov	b,r5
      00050D C0 07            [24] 1817 	push	ar7
      00050F 12r09r8A         [24] 1818 	lcall	_set_frequency_registers
                                   1819 ;	radio/radio.c:783: register_write(EZRADIOPRO_FREQUENCY_HOPPING_STEP_SIZE, settings.channel_spacing);
      000512 78r09            [12] 1820 	mov	r0,#(_settings + 0x0004)
      000514 E2               [24] 1821 	movx	a,@r0
      000515 FB               [12] 1822 	mov	r3,a
      000516 08               [12] 1823 	inc	r0
      000517 E2               [24] 1824 	movx	a,@r0
      000518 08               [12] 1825 	inc	r0
      000519 E2               [24] 1826 	movx	a,@r0
      00051A 08               [12] 1827 	inc	r0
      00051B E2               [24] 1828 	movx	a,@r0
      00051C C0 03            [24] 1829 	push	ar3
      00051E 75 82 7A         [24] 1830 	mov	dpl,#0x7A
      000521 12r08r14         [24] 1831 	lcall	_register_write
      000524 15 81            [12] 1832 	dec	sp
      000526 D0 07            [24] 1833 	pop	ar7
                                   1834 ;	radio/radio.c:785: if (feature_golay) {
      000528 30*00 29         [24] 1835 	jnb	_feature_golay,00104$
                                   1836 ;	radio/radio.c:789: register_write(EZRADIOPRO_DATA_ACCESS_CONTROL,
      00052B C0 07            [24] 1837 	push	ar7
      00052D 74 88            [12] 1838 	mov	a,#0x88
      00052F C0 E0            [24] 1839 	push	acc
      000531 75 82 30         [24] 1840 	mov	dpl,#0x30
      000534 12r08r14         [24] 1841 	lcall	_register_write
      000537 15 81            [12] 1842 	dec	sp
                                   1843 ;	radio/radio.c:793: register_write(EZRADIOPRO_HEADER_CONTROL_2, EZRADIOPRO_HDLEN_0BYTE | EZRADIOPRO_SYNCLEN_2BYTE);
      000539 74 02            [12] 1844 	mov	a,#0x02
      00053B C0 E0            [24] 1845 	push	acc
      00053D 75 82 33         [24] 1846 	mov	dpl,#0x33
      000540 12r08r14         [24] 1847 	lcall	_register_write
      000543 15 81            [12] 1848 	dec	sp
                                   1849 ;	radio/radio.c:796: register_write(EZRADIOPRO_HEADER_CONTROL_1, 0x00);
      000545 E4               [12] 1850 	clr	a
      000546 C0 E0            [24] 1851 	push	acc
      000548 75 82 32         [24] 1852 	mov	dpl,#0x32
      00054B 12r08r14         [24] 1853 	lcall	_register_write
      00054E 15 81            [12] 1854 	dec	sp
      000550 D0 07            [24] 1855 	pop	ar7
      000552 80 40            [24] 1856 	sjmp	00105$
      000554                       1857 00104$:
                                   1858 ;	radio/radio.c:798: register_write(EZRADIOPRO_DATA_ACCESS_CONTROL,
      000554 C0 07            [24] 1859 	push	ar7
      000556 74 8D            [12] 1860 	mov	a,#0x8D
      000558 C0 E0            [24] 1861 	push	acc
      00055A 75 82 30         [24] 1862 	mov	dpl,#0x30
      00055D 12r08r14         [24] 1863 	lcall	_register_write
      000560 15 81            [12] 1864 	dec	sp
                                   1865 ;	radio/radio.c:804: register_write(EZRADIOPRO_HEADER_CONTROL_2, EZRADIOPRO_HDLEN_2BYTE | EZRADIOPRO_SYNCLEN_2BYTE);
      000562 74 22            [12] 1866 	mov	a,#0x22
      000564 C0 E0            [24] 1867 	push	acc
      000566 75 82 33         [24] 1868 	mov	dpl,#0x33
      000569 12r08r14         [24] 1869 	lcall	_register_write
      00056C 15 81            [12] 1870 	dec	sp
                                   1871 ;	radio/radio.c:806: register_write(EZRADIOPRO_HEADER_CONTROL_1, 0x0C);
      00056E 74 0C            [12] 1872 	mov	a,#0x0C
      000570 C0 E0            [24] 1873 	push	acc
      000572 75 82 32         [24] 1874 	mov	dpl,#0x32
      000575 12r08r14         [24] 1875 	lcall	_register_write
      000578 15 81            [12] 1876 	dec	sp
                                   1877 ;	radio/radio.c:807: register_write(EZRADIOPRO_HEADER_ENABLE_3, 0xFF);
      00057A 74 FF            [12] 1878 	mov	a,#0xFF
      00057C C0 E0            [24] 1879 	push	acc
      00057E 75 82 43         [24] 1880 	mov	dpl,#0x43
      000581 12r08r14         [24] 1881 	lcall	_register_write
      000584 15 81            [12] 1882 	dec	sp
                                   1883 ;	radio/radio.c:808: register_write(EZRADIOPRO_HEADER_ENABLE_2, 0xFF);
      000586 74 FF            [12] 1884 	mov	a,#0xFF
      000588 C0 E0            [24] 1885 	push	acc
      00058A 75 82 44         [24] 1886 	mov	dpl,#0x44
      00058D 12r08r14         [24] 1887 	lcall	_register_write
      000590 15 81            [12] 1888 	dec	sp
      000592 D0 07            [24] 1889 	pop	ar7
      000594                       1890 00105$:
                                   1891 ;	radio/radio.c:813: register_write(EZRADIOPRO_TX_FIFO_CONTROL_1, TX_FIFO_THRESHOLD_HIGH);
      000594 C0 07            [24] 1892 	push	ar7
      000596 74 3C            [12] 1893 	mov	a,#0x3C
      000598 C0 E0            [24] 1894 	push	acc
      00059A 75 82 7C         [24] 1895 	mov	dpl,#0x7C
      00059D 12r08r14         [24] 1896 	lcall	_register_write
      0005A0 15 81            [12] 1897 	dec	sp
                                   1898 ;	radio/radio.c:814: register_write(EZRADIOPRO_TX_FIFO_CONTROL_2, TX_FIFO_THRESHOLD_LOW);
      0005A2 74 20            [12] 1899 	mov	a,#0x20
      0005A4 C0 E0            [24] 1900 	push	acc
      0005A6 75 82 7D         [24] 1901 	mov	dpl,#0x7D
      0005A9 12r08r14         [24] 1902 	lcall	_register_write
      0005AC 15 81            [12] 1903 	dec	sp
                                   1904 ;	radio/radio.c:815: register_write(EZRADIOPRO_RX_FIFO_CONTROL, RX_FIFO_THRESHOLD_HIGH);
      0005AE 74 32            [12] 1905 	mov	a,#0x32
      0005B0 C0 E0            [24] 1906 	push	acc
      0005B2 75 82 7E         [24] 1907 	mov	dpl,#0x7E
      0005B5 12r08r14         [24] 1908 	lcall	_register_write
      0005B8 15 81            [12] 1909 	dec	sp
                                   1910 ;	radio/radio.c:817: settings.preamble_length = 16;
      0005BA 78r10            [12] 1911 	mov	r0,#(_settings + 0x000b)
      0005BC 74 10            [12] 1912 	mov	a,#0x10
      0005BE F2               [24] 1913 	movx	@r0,a
                                   1914 ;	radio/radio.c:819: register_write(EZRADIOPRO_PREAMBLE_LENGTH, settings.preamble_length); // nibbles 
      0005BF 78r10            [12] 1915 	mov	r0,#(_settings + 0x000b)
      0005C1 E2               [24] 1916 	movx	a,@r0
      0005C2 FE               [12] 1917 	mov	r6,a
      0005C3 C0 06            [24] 1918 	push	ar6
      0005C5 75 82 34         [24] 1919 	mov	dpl,#0x34
      0005C8 12r08r14         [24] 1920 	lcall	_register_write
      0005CB 15 81            [12] 1921 	dec	sp
                                   1922 ;	radio/radio.c:820: register_write(EZRADIOPRO_PREAMBLE_DETECTION_CONTROL, 5<<3); // 5 nibbles
      0005CD 74 28            [12] 1923 	mov	a,#0x28
      0005CF C0 E0            [24] 1924 	push	acc
      0005D1 75 82 35         [24] 1925 	mov	dpl,#0x35
      0005D4 12r08r14         [24] 1926 	lcall	_register_write
      0005D7 15 81            [12] 1927 	dec	sp
                                   1928 ;	radio/radio.c:823: radio_set_transmit_power(0);
      0005D9 75 82 00         [24] 1929 	mov	dpl,#0x00
      0005DC 12r07r76         [24] 1930 	lcall	_radio_set_transmit_power
      0005DF D0 07            [24] 1931 	pop	ar7
                                   1932 ;	radio/radio.c:826: for (i = 0; i < NUM_DATA_RATES - 1; i++) {
      0005E1 7E 00            [12] 1933 	mov	r6,#0x00
      0005E3                       1934 00131$:
                                   1935 ;	radio/radio.c:827: if (air_data_rates[i] >= air_rate) break;
      0005E3 EE               [12] 1936 	mov	a,r6
      0005E4 90r00r1D         [24] 1937 	mov	dptr,#_air_data_rates
      0005E7 93               [24] 1938 	movc	a,@a+dptr
      0005E8 FD               [12] 1939 	mov	r5,a
      0005E9 C3               [12] 1940 	clr	c
      0005EA 9F               [12] 1941 	subb	a,r7
      0005EB 50 06            [24] 1942 	jnc	00108$
                                   1943 ;	radio/radio.c:826: for (i = 0; i < NUM_DATA_RATES - 1; i++) {
      0005ED 0E               [12] 1944 	inc	r6
      0005EE BE 0C 00         [24] 1945 	cjne	r6,#0x0C,00205$
      0005F1                       1946 00205$:
      0005F1 40 F0            [24] 1947 	jc	00131$
      0005F3                       1948 00108$:
                                   1949 ;	radio/radio.c:829: rate_selection = i;
                                   1950 ;	radio/radio.c:831: settings.air_data_rate = air_data_rates[rate_selection];
      0005F3 EE               [12] 1951 	mov	a,r6
      0005F4 FF               [12] 1952 	mov	r7,a
      0005F5 90r00r1D         [24] 1953 	mov	dptr,#_air_data_rates
      0005F8 93               [24] 1954 	movc	a,@a+dptr
      0005F9 FE               [12] 1955 	mov	r6,a
      0005FA 78r0D            [12] 1956 	mov	r0,#(_settings + 0x0008)
      0005FC F2               [24] 1957 	movx	@r0,a
                                   1958 ;	radio/radio.c:833: if (settings.air_data_rate >= 32) {
      0005FD BE 20 00         [24] 1959 	cjne	r6,#0x20,00207$
      000600                       1960 00207$:
      000600 40 04            [24] 1961 	jc	00110$
                                   1962 ;	radio/radio.c:834: control = 0x0D;
      000602 7E 0D            [12] 1963 	mov	r6,#0x0D
      000604 80 02            [24] 1964 	sjmp	00111$
      000606                       1965 00110$:
                                   1966 ;	radio/radio.c:836: control = 0x2D;
      000606 7E 2D            [12] 1967 	mov	r6,#0x2D
      000608                       1968 00111$:
                                   1969 ;	radio/radio.c:838: if (param_get(PARAM_MANCHESTER) && settings.air_data_rate <= 128) {
      000608 75 82 0D         [24] 1970 	mov	dpl,#0x0D
      00060B C0 07            [24] 1971 	push	ar7
      00060D C0 06            [24] 1972 	push	ar6
      00060F 12r00r00         [24] 1973 	lcall	_param_get
      000612 AA 82            [24] 1974 	mov	r2,dpl
      000614 AB 83            [24] 1975 	mov	r3,dph
      000616 AC F0            [24] 1976 	mov	r4,b
      000618 FD               [12] 1977 	mov	r5,a
      000619 D0 06            [24] 1978 	pop	ar6
      00061B D0 07            [24] 1979 	pop	ar7
      00061D EA               [12] 1980 	mov	a,r2
      00061E 4B               [12] 1981 	orl	a,r3
      00061F 4C               [12] 1982 	orl	a,r4
      000620 4D               [12] 1983 	orl	a,r5
      000621 60 0B            [24] 1984 	jz	00113$
      000623 78r0D            [12] 1985 	mov	r0,#(_settings + 0x0008)
      000625 E2               [24] 1986 	movx	a,@r0
      000626 FD               [12] 1987 	mov  r5,a
      000627 24 7F            [12] 1988 	add	a,#0xff - 0x80
      000629 40 03            [24] 1989 	jc	00113$
                                   1990 ;	radio/radio.c:840: control |= EZRADIOPRO_ENMANCH;
      00062B 43 06 02         [24] 1991 	orl	ar6,#0x02
      00062E                       1992 00113$:
                                   1993 ;	radio/radio.c:842: register_write(EZRADIOPRO_MODULATION_MODE_CONTROL_1, control);
      00062E C0 07            [24] 1994 	push	ar7
      000630 C0 06            [24] 1995 	push	ar6
      000632 75 82 70         [24] 1996 	mov	dpl,#0x70
      000635 12r08r14         [24] 1997 	lcall	_register_write
      000638 15 81            [12] 1998 	dec	sp
                                   1999 ;	radio/radio.c:844: register_write(EZRADIOPRO_MODULATION_MODE_CONTROL_2, 0x23);
      00063A 74 23            [12] 2000 	mov	a,#0x23
      00063C C0 E0            [24] 2001 	push	acc
      00063E 75 82 71         [24] 2002 	mov	dpl,#0x71
      000641 12r08r14         [24] 2003 	lcall	_register_write
      000644 15 81            [12] 2004 	dec	sp
                                   2005 ;	radio/radio.c:848: register_write(EZRADIOPRO_AFC_LOOP_GEARSHIFT_OVERRIDE, 0x44);
      000646 74 44            [12] 2006 	mov	a,#0x44
      000648 C0 E0            [24] 2007 	push	acc
      00064A 75 82 1D         [24] 2008 	mov	dpl,#0x1D
      00064D 12r08r14         [24] 2009 	lcall	_register_write
      000650 15 81            [12] 2010 	dec	sp
      000652 D0 07            [24] 2011 	pop	ar7
                                   2012 ;	radio/radio.c:852: if (settings.air_data_rate < 200) {
      000654 78r0D            [12] 2013 	mov	r0,#(_settings + 0x0008)
      000656 E2               [24] 2014 	movx	a,@r0
      000657 FE               [12] 2015 	mov	r6,a
      000658 BE C8 00         [24] 2016 	cjne	r6,#0xC8,00211$
      00065B                       2017 00211$:
      00065B 50 12            [24] 2018 	jnc	00116$
                                   2019 ;	radio/radio.c:853: register_write(EZRADIOPRO_AFC_TIMING_CONTROL, 0x0A);
      00065D C0 07            [24] 2020 	push	ar7
      00065F 74 0A            [12] 2021 	mov	a,#0x0A
      000661 C0 E0            [24] 2022 	push	acc
      000663 75 82 1E         [24] 2023 	mov	dpl,#0x1E
      000666 12r08r14         [24] 2024 	lcall	_register_write
      000669 15 81            [12] 2025 	dec	sp
      00066B D0 07            [24] 2026 	pop	ar7
      00066D 80 10            [24] 2027 	sjmp	00117$
      00066F                       2028 00116$:
                                   2029 ;	radio/radio.c:855: register_write(EZRADIOPRO_AFC_TIMING_CONTROL, 0x02);
      00066F C0 07            [24] 2030 	push	ar7
      000671 74 02            [12] 2031 	mov	a,#0x02
      000673 C0 E0            [24] 2032 	push	acc
      000675 75 82 1E         [24] 2033 	mov	dpl,#0x1E
      000678 12r08r14         [24] 2034 	lcall	_register_write
      00067B 15 81            [12] 2035 	dec	sp
      00067D D0 07            [24] 2036 	pop	ar7
      00067F                       2037 00117$:
                                   2038 ;	radio/radio.c:859: if (g_board_frequency == FREQ_433) {
      00067F 78r00            [12] 2039 	mov	r0,#_g_board_frequency
      000681 E2               [24] 2040 	movx	a,@r0
      000682 B4 43 3A         [24] 2041 	cjne	a,#0x43,00129$
                                   2042 ;	radio/radio.c:860: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      000685 7E 00            [12] 2043 	mov	r6,#0x00
      000687                       2044 00133$:
                                   2045 ;	radio/radio.c:862: reg_table_433[i][rate_selection]);
      000687 EE               [12] 2046 	mov	a,r6
      000688 75 F0 0D         [24] 2047 	mov	b,#0x0D
      00068B A4               [48] 2048 	mul	ab
      00068C 24r2A            [12] 2049 	add	a,#_reg_table_433
      00068E FC               [12] 2050 	mov	r4,a
      00068F 74s00            [12] 2051 	mov	a,#(_reg_table_433 >> 8)
      000691 35 F0            [12] 2052 	addc	a,b
      000693 FD               [12] 2053 	mov	r5,a
      000694 EF               [12] 2054 	mov	a,r7
      000695 2C               [12] 2055 	add	a,r4
      000696 F5 82            [12] 2056 	mov	dpl,a
      000698 E4               [12] 2057 	clr	a
      000699 3D               [12] 2058 	addc	a,r5
      00069A F5 83            [12] 2059 	mov	dph,a
      00069C E4               [12] 2060 	clr	a
      00069D 93               [24] 2061 	movc	a,@a+dptr
      00069E FD               [12] 2062 	mov	r5,a
                                   2063 ;	radio/radio.c:861: register_write(reg_index[i],
      00069F EE               [12] 2064 	mov	a,r6
      0006A0 90r00r11         [24] 2065 	mov	dptr,#_reg_index
      0006A3 93               [24] 2066 	movc	a,@a+dptr
      0006A4 FC               [12] 2067 	mov	r4,a
      0006A5 C0 07            [24] 2068 	push	ar7
      0006A7 C0 06            [24] 2069 	push	ar6
      0006A9 C0 05            [24] 2070 	push	ar5
      0006AB 8C 82            [24] 2071 	mov	dpl,r4
      0006AD 12r08r14         [24] 2072 	lcall	_register_write
      0006B0 15 81            [12] 2073 	dec	sp
      0006B2 D0 06            [24] 2074 	pop	ar6
      0006B4 D0 07            [24] 2075 	pop	ar7
                                   2076 ;	radio/radio.c:860: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      0006B6 0E               [12] 2077 	inc	r6
      0006B7 BE 0C 00         [24] 2078 	cjne	r6,#0x0C,00215$
      0006BA                       2079 00215$:
      0006BA 40 CB            [24] 2080 	jc	00133$
      0006BC 02r07r74         [24] 2081 	ljmp	00130$
      0006BF                       2082 00129$:
                                   2083 ;	radio/radio.c:864: } else if (g_board_frequency == FREQ_470) {
      0006BF 78r00            [12] 2084 	mov	r0,#_g_board_frequency
      0006C1 E2               [24] 2085 	movx	a,@r0
      0006C2 B4 47 39         [24] 2086 	cjne	a,#0x47,00126$
                                   2087 ;	radio/radio.c:865: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      0006C5 7E 00            [12] 2088 	mov	r6,#0x00
      0006C7                       2089 00135$:
                                   2090 ;	radio/radio.c:867: reg_table_470[i][rate_selection]);
      0006C7 EE               [12] 2091 	mov	a,r6
      0006C8 75 F0 0D         [24] 2092 	mov	b,#0x0D
      0006CB A4               [48] 2093 	mul	ab
      0006CC 24rC6            [12] 2094 	add	a,#_reg_table_470
      0006CE FC               [12] 2095 	mov	r4,a
      0006CF 74s00            [12] 2096 	mov	a,#(_reg_table_470 >> 8)
      0006D1 35 F0            [12] 2097 	addc	a,b
      0006D3 FD               [12] 2098 	mov	r5,a
      0006D4 EF               [12] 2099 	mov	a,r7
      0006D5 2C               [12] 2100 	add	a,r4
      0006D6 F5 82            [12] 2101 	mov	dpl,a
      0006D8 E4               [12] 2102 	clr	a
      0006D9 3D               [12] 2103 	addc	a,r5
      0006DA F5 83            [12] 2104 	mov	dph,a
      0006DC E4               [12] 2105 	clr	a
      0006DD 93               [24] 2106 	movc	a,@a+dptr
      0006DE FD               [12] 2107 	mov	r5,a
                                   2108 ;	radio/radio.c:866: register_write(reg_index[i],
      0006DF EE               [12] 2109 	mov	a,r6
      0006E0 90r00r11         [24] 2110 	mov	dptr,#_reg_index
      0006E3 93               [24] 2111 	movc	a,@a+dptr
      0006E4 FC               [12] 2112 	mov	r4,a
      0006E5 C0 07            [24] 2113 	push	ar7
      0006E7 C0 06            [24] 2114 	push	ar6
      0006E9 C0 05            [24] 2115 	push	ar5
      0006EB 8C 82            [24] 2116 	mov	dpl,r4
      0006ED 12r08r14         [24] 2117 	lcall	_register_write
      0006F0 15 81            [12] 2118 	dec	sp
      0006F2 D0 06            [24] 2119 	pop	ar6
      0006F4 D0 07            [24] 2120 	pop	ar7
                                   2121 ;	radio/radio.c:865: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      0006F6 0E               [12] 2122 	inc	r6
      0006F7 BE 0C 00         [24] 2123 	cjne	r6,#0x0C,00219$
      0006FA                       2124 00219$:
      0006FA 40 CB            [24] 2125 	jc	00135$
      0006FC 80 76            [24] 2126 	sjmp	00130$
      0006FE                       2127 00126$:
                                   2128 ;	radio/radio.c:869: } else if (g_board_frequency == FREQ_868) {
      0006FE 78r00            [12] 2129 	mov	r0,#_g_board_frequency
      000700 E2               [24] 2130 	movx	a,@r0
      000701 B4 86 39         [24] 2131 	cjne	a,#0x86,00160$
                                   2132 ;	radio/radio.c:870: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      000704 7E 00            [12] 2133 	mov	r6,#0x00
      000706                       2134 00137$:
                                   2135 ;	radio/radio.c:872: reg_table_868[i][rate_selection]);
      000706 EE               [12] 2136 	mov	a,r6
      000707 75 F0 0D         [24] 2137 	mov	b,#0x0D
      00070A A4               [48] 2138 	mul	ab
      00070B 24r62            [12] 2139 	add	a,#_reg_table_868
      00070D FC               [12] 2140 	mov	r4,a
      00070E 74s01            [12] 2141 	mov	a,#(_reg_table_868 >> 8)
      000710 35 F0            [12] 2142 	addc	a,b
      000712 FD               [12] 2143 	mov	r5,a
      000713 EF               [12] 2144 	mov	a,r7
      000714 2C               [12] 2145 	add	a,r4
      000715 F5 82            [12] 2146 	mov	dpl,a
      000717 E4               [12] 2147 	clr	a
      000718 3D               [12] 2148 	addc	a,r5
      000719 F5 83            [12] 2149 	mov	dph,a
      00071B E4               [12] 2150 	clr	a
      00071C 93               [24] 2151 	movc	a,@a+dptr
      00071D FD               [12] 2152 	mov	r5,a
                                   2153 ;	radio/radio.c:871: register_write(reg_index[i],
      00071E EE               [12] 2154 	mov	a,r6
      00071F 90r00r11         [24] 2155 	mov	dptr,#_reg_index
      000722 93               [24] 2156 	movc	a,@a+dptr
      000723 FC               [12] 2157 	mov	r4,a
      000724 C0 07            [24] 2158 	push	ar7
      000726 C0 06            [24] 2159 	push	ar6
      000728 C0 05            [24] 2160 	push	ar5
      00072A 8C 82            [24] 2161 	mov	dpl,r4
      00072C 12r08r14         [24] 2162 	lcall	_register_write
      00072F 15 81            [12] 2163 	dec	sp
      000731 D0 06            [24] 2164 	pop	ar6
      000733 D0 07            [24] 2165 	pop	ar7
                                   2166 ;	radio/radio.c:870: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      000735 0E               [12] 2167 	inc	r6
      000736 BE 0C 00         [24] 2168 	cjne	r6,#0x0C,00223$
      000739                       2169 00223$:
      000739 40 CB            [24] 2170 	jc	00137$
                                   2171 ;	radio/radio.c:875: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      00073B 80 37            [24] 2172 	sjmp	00130$
      00073D                       2173 00160$:
      00073D 7E 00            [12] 2174 	mov	r6,#0x00
      00073F                       2175 00139$:
                                   2176 ;	radio/radio.c:877: reg_table_915[i][rate_selection]);
      00073F EE               [12] 2177 	mov	a,r6
      000740 75 F0 0D         [24] 2178 	mov	b,#0x0D
      000743 A4               [48] 2179 	mul	ab
      000744 24rFE            [12] 2180 	add	a,#_reg_table_915
      000746 FC               [12] 2181 	mov	r4,a
      000747 74s01            [12] 2182 	mov	a,#(_reg_table_915 >> 8)
      000749 35 F0            [12] 2183 	addc	a,b
      00074B FD               [12] 2184 	mov	r5,a
      00074C EF               [12] 2185 	mov	a,r7
      00074D 2C               [12] 2186 	add	a,r4
      00074E F5 82            [12] 2187 	mov	dpl,a
      000750 E4               [12] 2188 	clr	a
      000751 3D               [12] 2189 	addc	a,r5
      000752 F5 83            [12] 2190 	mov	dph,a
      000754 E4               [12] 2191 	clr	a
      000755 93               [24] 2192 	movc	a,@a+dptr
      000756 FD               [12] 2193 	mov	r5,a
                                   2194 ;	radio/radio.c:876: register_write(reg_index[i],
      000757 EE               [12] 2195 	mov	a,r6
      000758 90r00r11         [24] 2196 	mov	dptr,#_reg_index
      00075B 93               [24] 2197 	movc	a,@a+dptr
      00075C FC               [12] 2198 	mov	r4,a
      00075D C0 07            [24] 2199 	push	ar7
      00075F C0 06            [24] 2200 	push	ar6
      000761 C0 05            [24] 2201 	push	ar5
      000763 8C 82            [24] 2202 	mov	dpl,r4
      000765 12r08r14         [24] 2203 	lcall	_register_write
      000768 15 81            [12] 2204 	dec	sp
      00076A D0 06            [24] 2205 	pop	ar6
      00076C D0 07            [24] 2206 	pop	ar7
                                   2207 ;	radio/radio.c:875: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      00076E 0E               [12] 2208 	inc	r6
      00076F BE 0C 00         [24] 2209 	cjne	r6,#0x0C,00225$
      000772                       2210 00225$:
      000772 40 CB            [24] 2211 	jc	00139$
      000774                       2212 00130$:
                                   2213 ;	radio/radio.c:881: return true;
      000774 D3               [12] 2214 	setb	c
      000775 22               [24] 2215 	ret
                                   2216 ;------------------------------------------------------------
                                   2217 ;Allocation info for local variables in function 'radio_set_transmit_power'
                                   2218 ;------------------------------------------------------------
                                   2219 ;power                     Allocated with name '_radio_set_transmit_power_power_1_220'
                                   2220 ;i                         Allocated with name '_radio_set_transmit_power_i_1_221'
                                   2221 ;------------------------------------------------------------
                                   2222 ;	radio/radio.c:902: radio_set_transmit_power(uint8_t power)
                                   2223 ;	-----------------------------------------
                                   2224 ;	 function radio_set_transmit_power
                                   2225 ;	-----------------------------------------
      000776                       2226 _radio_set_transmit_power:
      000776 E5 82            [12] 2227 	mov	a,dpl
      000778 90r01r01         [24] 2228 	mov	dptr,#_radio_set_transmit_power_power_1_220
      00077B F0               [24] 2229 	movx	@dptr,a
                                   2230 ;	radio/radio.c:921: for (i=0; i<NUM_POWER_LEVELS; i++) {
      00077C E0               [24] 2231 	movx	a,@dptr
      00077D FF               [12] 2232 	mov	r7,a
      00077E 7E 00            [12] 2233 	mov	r6,#0x00
      000780                       2234 00106$:
                                   2235 ;	radio/radio.c:922: if (power <= power_levels[i]) break;
      000780 EE               [12] 2236 	mov	a,r6
      000781 90r02r9A         [24] 2237 	mov	dptr,#_power_levels
      000784 93               [24] 2238 	movc	a,@a+dptr
      000785 FD               [12] 2239 	mov	r5,a
      000786 C3               [12] 2240 	clr	c
      000787 9F               [12] 2241 	subb	a,r7
      000788 50 06            [24] 2242 	jnc	00113$
                                   2243 ;	radio/radio.c:921: for (i=0; i<NUM_POWER_LEVELS; i++) {
      00078A 0E               [12] 2244 	inc	r6
      00078B BE 05 00         [24] 2245 	cjne	r6,#0x05,00121$
      00078E                       2246 00121$:
      00078E 40 F0            [24] 2247 	jc	00106$
      000790                       2248 00113$:
      000790 90r01r02         [24] 2249 	mov	dptr,#_radio_set_transmit_power_i_1_221
      000793 EE               [12] 2250 	mov	a,r6
      000794 F0               [24] 2251 	movx	@dptr,a
                                   2252 ;	radio/radio.c:924: if (i == NUM_POWER_LEVELS) {
      000795 BE 05 06         [24] 2253 	cjne	r6,#0x05,00105$
                                   2254 ;	radio/radio.c:925: i = NUM_POWER_LEVELS-1;
      000798 90r01r02         [24] 2255 	mov	dptr,#_radio_set_transmit_power_i_1_221
      00079B 74 04            [12] 2256 	mov	a,#0x04
      00079D F0               [24] 2257 	movx	@dptr,a
      00079E                       2258 00105$:
                                   2259 ;	radio/radio.c:927: settings.transmit_power = power_levels[i];
      00079E 90r01r02         [24] 2260 	mov	dptr,#_radio_set_transmit_power_i_1_221
      0007A1 E0               [24] 2261 	movx	a,@dptr
      0007A2 FF               [12] 2262 	mov	r7,a
      0007A3 90r02r9A         [24] 2263 	mov	dptr,#_power_levels
      0007A6 93               [24] 2264 	movc	a,@a+dptr
      0007A7 FE               [12] 2265 	mov	r6,a
      0007A8 78r0F            [12] 2266 	mov	r0,#(_settings + 0x000a)
      0007AA EE               [12] 2267 	mov	a,r6
      0007AB F2               [24] 2268 	movx	@r0,a
                                   2269 ;	radio/radio.c:928: register_write(EZRADIOPRO_TX_POWER, i);
      0007AC C0 07            [24] 2270 	push	ar7
      0007AE 75 82 6D         [24] 2271 	mov	dpl,#0x6D
      0007B1 12r08r14         [24] 2272 	lcall	_register_write
      0007B4 15 81            [12] 2273 	dec	sp
      0007B6 22               [24] 2274 	ret
                                   2275 ;------------------------------------------------------------
                                   2276 ;Allocation info for local variables in function 'radio_get_transmit_power'
                                   2277 ;------------------------------------------------------------
                                   2278 ;	radio/radio.c:935: radio_get_transmit_power(void)
                                   2279 ;	-----------------------------------------
                                   2280 ;	 function radio_get_transmit_power
                                   2281 ;	-----------------------------------------
      0007B7                       2282 _radio_get_transmit_power:
                                   2283 ;	radio/radio.c:937: return settings.transmit_power;
      0007B7 78r0F            [12] 2284 	mov	r0,#(_settings + 0x000a)
      0007B9 E2               [24] 2285 	movx	a,@r0
      0007BA F5 82            [12] 2286 	mov	dpl,a
      0007BC 22               [24] 2287 	ret
                                   2288 ;------------------------------------------------------------
                                   2289 ;Allocation info for local variables in function 'radio_set_network_id'
                                   2290 ;------------------------------------------------------------
                                   2291 ;id                        Allocated with name '_radio_set_network_id_id_1_226'
                                   2292 ;------------------------------------------------------------
                                   2293 ;	radio/radio.c:943: radio_set_network_id(uint16_t id)
                                   2294 ;	-----------------------------------------
                                   2295 ;	 function radio_set_network_id
                                   2296 ;	-----------------------------------------
      0007BD                       2297 _radio_set_network_id:
      0007BD AF 83            [24] 2298 	mov	r7,dph
      0007BF E5 82            [12] 2299 	mov	a,dpl
      0007C1 90r01r03         [24] 2300 	mov	dptr,#_radio_set_network_id_id_1_226
      0007C4 F0               [24] 2301 	movx	@dptr,a
      0007C5 EF               [12] 2302 	mov	a,r7
      0007C6 A3               [24] 2303 	inc	dptr
      0007C7 F0               [24] 2304 	movx	@dptr,a
                                   2305 ;	radio/radio.c:945: netid[0] = id&0xFF;
      0007C8 90r01r03         [24] 2306 	mov	dptr,#_radio_set_network_id_id_1_226
      0007CB E0               [24] 2307 	movx	a,@dptr
      0007CC FE               [12] 2308 	mov	r6,a
      0007CD A3               [24] 2309 	inc	dptr
      0007CE E0               [24] 2310 	movx	a,@dptr
      0007CF FF               [12] 2311 	mov	r7,a
      0007D0 8E 04            [24] 2312 	mov	ar4,r6
      0007D2 78r03            [12] 2313 	mov	r0,#_netid
      0007D4 EC               [12] 2314 	mov	a,r4
      0007D5 F2               [24] 2315 	movx	@r0,a
                                   2316 ;	radio/radio.c:946: netid[1] = id>>8;
      0007D6 8F 05            [24] 2317 	mov	ar5,r7
      0007D8 78r04            [12] 2318 	mov	r0,#(_netid + 0x0001)
      0007DA ED               [12] 2319 	mov	a,r5
      0007DB F2               [24] 2320 	movx	@r0,a
                                   2321 ;	radio/radio.c:947: if (!feature_golay) {
      0007DC 20*00 34         [24] 2322 	jb	_feature_golay,00103$
                                   2323 ;	radio/radio.c:950: register_write(EZRADIOPRO_TRANSMIT_HEADER_3, id >> 8);
      0007DF C0 07            [24] 2324 	push	ar7
      0007E1 C0 06            [24] 2325 	push	ar6
      0007E3 C0 05            [24] 2326 	push	ar5
      0007E5 C0 05            [24] 2327 	push	ar5
      0007E7 75 82 3A         [24] 2328 	mov	dpl,#0x3A
      0007EA 12r08r14         [24] 2329 	lcall	_register_write
      0007ED 15 81            [12] 2330 	dec	sp
      0007EF D0 05            [24] 2331 	pop	ar5
      0007F1 D0 06            [24] 2332 	pop	ar6
      0007F3 D0 07            [24] 2333 	pop	ar7
                                   2334 ;	radio/radio.c:951: register_write(EZRADIOPRO_TRANSMIT_HEADER_2, id & 0xFF);
      0007F5 C0 06            [24] 2335 	push	ar6
      0007F7 C0 05            [24] 2336 	push	ar5
      0007F9 C0 06            [24] 2337 	push	ar6
      0007FB 75 82 3B         [24] 2338 	mov	dpl,#0x3B
      0007FE 12r08r14         [24] 2339 	lcall	_register_write
      000801 15 81            [12] 2340 	dec	sp
                                   2341 ;	radio/radio.c:952: register_write(EZRADIOPRO_CHECK_HEADER_3, id >> 8);
      000803 75 82 3F         [24] 2342 	mov	dpl,#0x3F
      000806 12r08r14         [24] 2343 	lcall	_register_write
      000809 15 81            [12] 2344 	dec	sp
                                   2345 ;	radio/radio.c:953: register_write(EZRADIOPRO_CHECK_HEADER_2, id & 0xFF);
      00080B 75 82 40         [24] 2346 	mov	dpl,#0x40
      00080E 12r08r14         [24] 2347 	lcall	_register_write
      000811 15 81            [12] 2348 	dec	sp
      000813                       2349 00103$:
      000813 22               [24] 2350 	ret
                                   2351 ;------------------------------------------------------------
                                   2352 ;Allocation info for local variables in function 'register_write'
                                   2353 ;------------------------------------------------------------
                                   2354 ;value                     Allocated to stack - sp -2
                                   2355 ;reg                       Allocated to registers r7 
                                   2356 ;EX0_saved                 Allocated to registers b0 
                                   2357 ;------------------------------------------------------------
                                   2358 ;	radio/radio.c:964: register_write(uint8_t reg, uint8_t value) __reentrant
                                   2359 ;	-----------------------------------------
                                   2360 ;	 function register_write
                                   2361 ;	-----------------------------------------
      000814                       2362 _register_write:
      000814 AF 82            [24] 2363 	mov	r7,dpl
                                   2364 ;	radio/radio.c:966: EX0_SAVE_DISABLE;
      000816 A2 A8            [12] 2365 	mov	c,_EX0
      000818 92*00            [24] 2366 	mov	b0,c
      00081A C2 A8            [12] 2367 	clr	_EX0
                                   2368 ;	radio/radio.c:968: RADIO_PAGE();
      00081C 75 A7 00         [24] 2369 	mov	_SFRPAGE,#0x00
                                   2370 ;	radio/radio.c:969: NSS1 = 0;                           // drive NSS low
      00081F C2 94            [12] 2371 	clr	_NSS1
                                   2372 ;	radio/radio.c:970: SPIF1 = 0;                          // clear SPIF
      000821 C2 B7            [12] 2373 	clr	_SPIF1
                                   2374 ;	radio/radio.c:971: SPI1DAT = (reg | 0x80);             // write reg address
      000823 74 80            [12] 2375 	mov	a,#0x80
      000825 4F               [12] 2376 	orl	a,r7
      000826 F5 86            [12] 2377 	mov	_SPI1DAT,a
                                   2378 ;	radio/radio.c:972: while (!TXBMT1);                    // wait on TXBMT
      000828                       2379 00101$:
      000828 30 B1 FD         [24] 2380 	jnb	_TXBMT1,00101$
                                   2381 ;	radio/radio.c:973: SPI1DAT = value;                    // write value
      00082B A8 81            [24] 2382 	mov	r0,sp
      00082D 18               [12] 2383 	dec	r0
      00082E 18               [12] 2384 	dec	r0
      00082F 86 86            [24] 2385 	mov	_SPI1DAT,@r0
                                   2386 ;	radio/radio.c:974: while (!TXBMT1);                    // wait on TXBMT
      000831                       2387 00104$:
      000831 30 B1 FD         [24] 2388 	jnb	_TXBMT1,00104$
                                   2389 ;	radio/radio.c:975: while ((SPI1CFG & 0x80) == 0x80);   // wait on SPIBSY
      000834                       2390 00107$:
      000834 74 80            [12] 2391 	mov	a,#0x80
      000836 55 84            [12] 2392 	anl	a,_SPI1CFG
      000838 FF               [12] 2393 	mov	r7,a
      000839 BF 80 02         [24] 2394 	cjne	r7,#0x80,00129$
      00083C 80 F6            [24] 2395 	sjmp	00107$
      00083E                       2396 00129$:
                                   2397 ;	radio/radio.c:977: SPIF1 = 0;                          // leave SPIF cleared
      00083E C2 B7            [12] 2398 	clr	_SPIF1
                                   2399 ;	radio/radio.c:978: NSS1 = 1;                           // drive NSS high
      000840 D2 94            [12] 2400 	setb	_NSS1
                                   2401 ;	radio/radio.c:979: SFRPAGE = LEGACY_PAGE;
      000842 75 A7 00         [24] 2402 	mov	_SFRPAGE,#0x00
                                   2403 ;	radio/radio.c:981: EX0_RESTORE;
      000845 A2*00            [12] 2404 	mov	c,b0
      000847 92 A8            [24] 2405 	mov	_EX0,c
      000849 22               [24] 2406 	ret
                                   2407 ;------------------------------------------------------------
                                   2408 ;Allocation info for local variables in function 'register_read'
                                   2409 ;------------------------------------------------------------
                                   2410 ;reg                       Allocated to registers r7 
                                   2411 ;value                     Allocated to registers r7 
                                   2412 ;EX0_saved                 Allocated to registers b0 
                                   2413 ;------------------------------------------------------------
                                   2414 ;	radio/radio.c:991: register_read(uint8_t reg) __reentrant
                                   2415 ;	-----------------------------------------
                                   2416 ;	 function register_read
                                   2417 ;	-----------------------------------------
      00084A                       2418 _register_read:
      00084A AF 82            [24] 2419 	mov	r7,dpl
                                   2420 ;	radio/radio.c:994: EX0_SAVE_DISABLE;
      00084C A2 A8            [12] 2421 	mov	c,_EX0
      00084E 92*00            [24] 2422 	mov	b0,c
      000850 C2 A8            [12] 2423 	clr	_EX0
                                   2424 ;	radio/radio.c:996: RADIO_PAGE();
      000852 75 A7 00         [24] 2425 	mov	_SFRPAGE,#0x00
                                   2426 ;	radio/radio.c:997: NSS1 = 0;				// dsrive NSS low
      000855 C2 94            [12] 2427 	clr	_NSS1
                                   2428 ;	radio/radio.c:998: SPIF1 = 0;				// clear SPIF
      000857 C2 B7            [12] 2429 	clr	_SPIF1
                                   2430 ;	radio/radio.c:999: SPI1DAT = (reg);			// write reg address
      000859 8F 86            [24] 2431 	mov	_SPI1DAT,r7
                                   2432 ;	radio/radio.c:1000: while (!TXBMT1);			// wait on TXBMT
      00085B                       2433 00101$:
      00085B 30 B1 FD         [24] 2434 	jnb	_TXBMT1,00101$
                                   2435 ;	radio/radio.c:1001: SPI1DAT = 0x00;				// write anything
      00085E 75 86 00         [24] 2436 	mov	_SPI1DAT,#0x00
                                   2437 ;	radio/radio.c:1002: while (!TXBMT1);			// wait on TXBMT
      000861                       2438 00104$:
      000861 30 B1 FD         [24] 2439 	jnb	_TXBMT1,00104$
                                   2440 ;	radio/radio.c:1003: while ((SPI1CFG & 0x80) == 0x80);	// wait on SPIBSY
      000864                       2441 00107$:
      000864 74 80            [12] 2442 	mov	a,#0x80
      000866 55 84            [12] 2443 	anl	a,_SPI1CFG
      000868 FF               [12] 2444 	mov	r7,a
      000869 BF 80 02         [24] 2445 	cjne	r7,#0x80,00129$
      00086C 80 F6            [24] 2446 	sjmp	00107$
      00086E                       2447 00129$:
                                   2448 ;	radio/radio.c:1004: value = SPI1DAT;			// read value
      00086E AF 86            [24] 2449 	mov	r7,_SPI1DAT
                                   2450 ;	radio/radio.c:1005: SPIF1 = 0;				// leave SPIF cleared
      000870 C2 B7            [12] 2451 	clr	_SPIF1
                                   2452 ;	radio/radio.c:1006: NSS1 = 1;				// drive NSS high
      000872 D2 94            [12] 2453 	setb	_NSS1
                                   2454 ;	radio/radio.c:1007: SFRPAGE = LEGACY_PAGE;
      000874 75 A7 00         [24] 2455 	mov	_SFRPAGE,#0x00
                                   2456 ;	radio/radio.c:1009: EX0_RESTORE;
      000877 A2*00            [12] 2457 	mov	c,b0
      000879 92 A8            [24] 2458 	mov	_EX0,c
                                   2459 ;	radio/radio.c:1011: return value;
      00087B 8F 82            [24] 2460 	mov	dpl,r7
      00087D 22               [24] 2461 	ret
                                   2462 ;------------------------------------------------------------
                                   2463 ;Allocation info for local variables in function 'read_receive_fifo'
                                   2464 ;------------------------------------------------------------
                                   2465 ;buf                       Allocated to stack - sp -3
                                   2466 ;n                         Allocated to registers r7 
                                   2467 ;------------------------------------------------------------
                                   2468 ;	radio/radio.c:1018: read_receive_fifo(register uint8_t n, __xdata uint8_t * buf) __reentrant
                                   2469 ;	-----------------------------------------
                                   2470 ;	 function read_receive_fifo
                                   2471 ;	-----------------------------------------
      00087E                       2472 _read_receive_fifo:
      00087E AF 82            [24] 2473 	mov	r7,dpl
                                   2474 ;	radio/radio.c:1020: RADIO_PAGE();
      000880 75 A7 00         [24] 2475 	mov	_SFRPAGE,#0x00
                                   2476 ;	radio/radio.c:1021: NSS1 = 0;				// drive NSS low
      000883 C2 94            [12] 2477 	clr	_NSS1
                                   2478 ;	radio/radio.c:1022: SPIF1 = 0;				// clear SPIF
      000885 C2 B7            [12] 2479 	clr	_SPIF1
                                   2480 ;	radio/radio.c:1023: SPI1DAT = EZRADIOPRO_FIFO_ACCESS;
      000887 75 86 7F         [24] 2481 	mov	_SPI1DAT,#0x7F
                                   2482 ;	radio/radio.c:1024: while (!SPIF1);				// wait on SPIF
      00088A                       2483 00101$:
      00088A 30 B7 FD         [24] 2484 	jnb	_SPIF1,00101$
                                   2485 ;	radio/radio.c:1025: ACC = SPI1DAT;				// discard first byte
      00088D 85 86 E0         [24] 2486 	mov	_ACC,_SPI1DAT
                                   2487 ;	radio/radio.c:1027: while (n--) {
      000890 E5 81            [12] 2488 	mov	a,sp
      000892 24 FD            [12] 2489 	add	a,#0xfd
      000894 F8               [12] 2490 	mov	r0,a
      000895 86 05            [24] 2491 	mov	ar5,@r0
      000897 08               [12] 2492 	inc	r0
      000898 86 06            [24] 2493 	mov	ar6,@r0
      00089A                       2494 00107$:
      00089A 8F 04            [24] 2495 	mov	ar4,r7
      00089C 1F               [12] 2496 	dec	r7
      00089D EC               [12] 2497 	mov	a,r4
      00089E 60 16            [24] 2498 	jz	00109$
                                   2499 ;	radio/radio.c:1028: SPIF1 = 0;			// clear SPIF
      0008A0 C2 B7            [12] 2500 	clr	_SPIF1
                                   2501 ;	radio/radio.c:1029: SPI1DAT = 0x00;			// write anything
      0008A2 75 86 00         [24] 2502 	mov	_SPI1DAT,#0x00
                                   2503 ;	radio/radio.c:1030: while (!SPIF1);			// wait on SPIF
      0008A5                       2504 00104$:
      0008A5 30 B7 FD         [24] 2505 	jnb	_SPIF1,00104$
                                   2506 ;	radio/radio.c:1031: *buf++ = SPI1DAT;		// copy to buffer
      0008A8 8D 82            [24] 2507 	mov	dpl,r5
      0008AA 8E 83            [24] 2508 	mov	dph,r6
      0008AC E5 86            [12] 2509 	mov	a,_SPI1DAT
      0008AE F0               [24] 2510 	movx	@dptr,a
      0008AF A3               [24] 2511 	inc	dptr
      0008B0 AD 82            [24] 2512 	mov	r5,dpl
      0008B2 AE 83            [24] 2513 	mov	r6,dph
      0008B4 80 E4            [24] 2514 	sjmp	00107$
      0008B6                       2515 00109$:
                                   2516 ;	radio/radio.c:1034: SPIF1 = 0;				// leave SPIF cleared
      0008B6 C2 B7            [12] 2517 	clr	_SPIF1
                                   2518 ;	radio/radio.c:1035: NSS1 = 1;				// drive NSS high
      0008B8 D2 94            [12] 2519 	setb	_NSS1
                                   2520 ;	radio/radio.c:1036: SFRPAGE = LEGACY_PAGE;
      0008BA 75 A7 00         [24] 2521 	mov	_SFRPAGE,#0x00
      0008BD 22               [24] 2522 	ret
                                   2523 ;------------------------------------------------------------
                                   2524 ;Allocation info for local variables in function 'clear_status_registers'
                                   2525 ;------------------------------------------------------------
                                   2526 ;	radio/radio.c:1042: clear_status_registers(void)
                                   2527 ;	-----------------------------------------
                                   2528 ;	 function clear_status_registers
                                   2529 ;	-----------------------------------------
      0008BE                       2530 _clear_status_registers:
                                   2531 ;	radio/radio.c:1044: register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      0008BE 75 82 03         [24] 2532 	mov	dpl,#0x03
      0008C1 12r08r4A         [24] 2533 	lcall	_register_read
                                   2534 ;	radio/radio.c:1045: register_read(EZRADIOPRO_INTERRUPT_STATUS_2);
      0008C4 75 82 04         [24] 2535 	mov	dpl,#0x04
      0008C7 02r08r4A         [24] 2536 	ljmp	_register_read
                                   2537 ;------------------------------------------------------------
                                   2538 ;Allocation info for local variables in function 'scale_uint32'
                                   2539 ;------------------------------------------------------------
                                   2540 ;	radio/radio.c:1055: scale_uint32(__pdata uint32_t value, __pdata uint32_t scale)
                                   2541 ;	-----------------------------------------
                                   2542 ;	 function scale_uint32
                                   2543 ;	-----------------------------------------
      0008CA                       2544 _scale_uint32:
      0008CA AF 82            [24] 2545 	mov	r7,dpl
      0008CC AE 83            [24] 2546 	mov	r6,dph
      0008CE AD F0            [24] 2547 	mov	r5,b
      0008D0 FC               [12] 2548 	mov	r4,a
      0008D1 78r21            [12] 2549 	mov	r0,#_scale_uint32_value_1_238
      0008D3 EF               [12] 2550 	mov	a,r7
      0008D4 F2               [24] 2551 	movx	@r0,a
      0008D5 08               [12] 2552 	inc	r0
      0008D6 EE               [12] 2553 	mov	a,r6
      0008D7 F2               [24] 2554 	movx	@r0,a
      0008D8 08               [12] 2555 	inc	r0
      0008D9 ED               [12] 2556 	mov	a,r5
      0008DA F2               [24] 2557 	movx	@r0,a
      0008DB 08               [12] 2558 	inc	r0
      0008DC EC               [12] 2559 	mov	a,r4
      0008DD F2               [24] 2560 	movx	@r0,a
                                   2561 ;	radio/radio.c:1057: return (value + (scale >> 1)) / scale;
      0008DE 78r20            [12] 2562 	mov	r0,#(_scale_uint32_PARM_2 + 3)
      0008E0 E2               [24] 2563 	movx	a,@r0
      0008E1 C3               [12] 2564 	clr	c
      0008E2 13               [12] 2565 	rrc	a
      0008E3 FF               [12] 2566 	mov	r7,a
      0008E4 18               [12] 2567 	dec	r0
      0008E5 E2               [24] 2568 	movx	a,@r0
      0008E6 13               [12] 2569 	rrc	a
      0008E7 FE               [12] 2570 	mov	r6,a
      0008E8 18               [12] 2571 	dec	r0
      0008E9 E2               [24] 2572 	movx	a,@r0
      0008EA 13               [12] 2573 	rrc	a
      0008EB FB               [12] 2574 	mov	r3,a
      0008EC 18               [12] 2575 	dec	r0
      0008ED E2               [24] 2576 	movx	a,@r0
      0008EE 13               [12] 2577 	rrc	a
      0008EF FA               [12] 2578 	mov	r2,a
      0008F0 78r21            [12] 2579 	mov	r0,#_scale_uint32_value_1_238
      0008F2 E2               [24] 2580 	movx	a,@r0
      0008F3 2A               [12] 2581 	add	a,r2
      0008F4 FA               [12] 2582 	mov	r2,a
      0008F5 08               [12] 2583 	inc	r0
      0008F6 E2               [24] 2584 	movx	a,@r0
      0008F7 3B               [12] 2585 	addc	a,r3
      0008F8 FB               [12] 2586 	mov	r3,a
      0008F9 08               [12] 2587 	inc	r0
      0008FA E2               [24] 2588 	movx	a,@r0
      0008FB 3E               [12] 2589 	addc	a,r6
      0008FC FE               [12] 2590 	mov	r6,a
      0008FD 08               [12] 2591 	inc	r0
      0008FE E2               [24] 2592 	movx	a,@r0
      0008FF 3F               [12] 2593 	addc	a,r7
      000900 FF               [12] 2594 	mov	r7,a
      000901 78r1D            [12] 2595 	mov	r0,#_scale_uint32_PARM_2
      000903 90r00r00         [24] 2596 	mov	dptr,#__divulong_PARM_2
      000906 E2               [24] 2597 	movx	a,@r0
      000907 F0               [24] 2598 	movx	@dptr,a
      000908 08               [12] 2599 	inc	r0
      000909 E2               [24] 2600 	movx	a,@r0
      00090A A3               [24] 2601 	inc	dptr
      00090B F0               [24] 2602 	movx	@dptr,a
      00090C 08               [12] 2603 	inc	r0
      00090D E2               [24] 2604 	movx	a,@r0
      00090E A3               [24] 2605 	inc	dptr
      00090F F0               [24] 2606 	movx	@dptr,a
      000910 08               [12] 2607 	inc	r0
      000911 E2               [24] 2608 	movx	a,@r0
      000912 A3               [24] 2609 	inc	dptr
      000913 F0               [24] 2610 	movx	@dptr,a
      000914 8A 82            [24] 2611 	mov	dpl,r2
      000916 8B 83            [24] 2612 	mov	dph,r3
      000918 8E F0            [24] 2613 	mov	b,r6
      00091A EF               [12] 2614 	mov	a,r7
      00091B 02r00r00         [24] 2615 	ljmp	__divulong
                                   2616 ;------------------------------------------------------------
                                   2617 ;Allocation info for local variables in function 'software_reset'
                                   2618 ;------------------------------------------------------------
                                   2619 ;status                    Allocated with name '_software_reset_status_1_241'
                                   2620 ;------------------------------------------------------------
                                   2621 ;	radio/radio.c:1065: software_reset(void)
                                   2622 ;	-----------------------------------------
                                   2623 ;	 function software_reset
                                   2624 ;	-----------------------------------------
      00091E                       2625 _software_reset:
                                   2626 ;	radio/radio.c:1070: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      00091E E4               [12] 2627 	clr	a
      00091F C0 E0            [24] 2628 	push	acc
      000921 75 82 05         [24] 2629 	mov	dpl,#0x05
      000924 12r08r14         [24] 2630 	lcall	_register_write
      000927 15 81            [12] 2631 	dec	sp
                                   2632 ;	radio/radio.c:1071: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0);
      000929 E4               [12] 2633 	clr	a
      00092A C0 E0            [24] 2634 	push	acc
      00092C 75 82 06         [24] 2635 	mov	dpl,#0x06
      00092F 12r08r14         [24] 2636 	lcall	_register_write
      000932 15 81            [12] 2637 	dec	sp
                                   2638 ;	radio/radio.c:1073: clear_status_registers();
      000934 12r08rBE         [24] 2639 	lcall	_clear_status_registers
                                   2640 ;	radio/radio.c:1076: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, (EZRADIOPRO_SWRES | EZRADIOPRO_XTON));
      000937 74 81            [12] 2641 	mov	a,#0x81
      000939 C0 E0            [24] 2642 	push	acc
      00093B 75 82 07         [24] 2643 	mov	dpl,#0x07
      00093E 12r08r14         [24] 2644 	lcall	_register_write
      000941 15 81            [12] 2645 	dec	sp
                                   2646 ;	radio/radio.c:1079: delay_set(2);
      000943 90 00 02         [24] 2647 	mov	dptr,#0x0002
      000946 12r00r00         [24] 2648 	lcall	_delay_set
                                   2649 ;	radio/radio.c:1080: while (IRQ) {
      000949                       2650 00103$:
      000949 30 87 07         [24] 2651 	jnb	_IRQ,00105$
                                   2652 ;	radio/radio.c:1081: if (delay_expired()) {
      00094C 12r00r00         [24] 2653 	lcall	_delay_expired
      00094F 50 F8            [24] 2654 	jnc	00103$
                                   2655 ;	radio/radio.c:1082: return false;
      000951 C3               [12] 2656 	clr	c
      000952 22               [24] 2657 	ret
      000953                       2658 00105$:
                                   2659 ;	radio/radio.c:1087: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      000953 E4               [12] 2660 	clr	a
      000954 C0 E0            [24] 2661 	push	acc
      000956 75 82 05         [24] 2662 	mov	dpl,#0x05
      000959 12r08r14         [24] 2663 	lcall	_register_write
      00095C 15 81            [12] 2664 	dec	sp
                                   2665 ;	radio/radio.c:1088: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, EZRADIOPRO_ENCHIPRDY);
      00095E 74 02            [12] 2666 	mov	a,#0x02
      000960 C0 E0            [24] 2667 	push	acc
      000962 75 82 06         [24] 2668 	mov	dpl,#0x06
      000965 12r08r14         [24] 2669 	lcall	_register_write
      000968 15 81            [12] 2670 	dec	sp
                                   2671 ;	radio/radio.c:1090: delay_set(20);
      00096A 90 00 14         [24] 2672 	mov	dptr,#0x0014
      00096D 12r00r00         [24] 2673 	lcall	_delay_set
                                   2674 ;	radio/radio.c:1091: while (!delay_expired()) {
      000970                       2675 00108$:
      000970 12r00r00         [24] 2676 	lcall	_delay_expired
      000973 40 13            [24] 2677 	jc	00110$
                                   2678 ;	radio/radio.c:1092: status = register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      000975 75 82 03         [24] 2679 	mov	dpl,#0x03
      000978 12r08r4A         [24] 2680 	lcall	_register_read
                                   2681 ;	radio/radio.c:1093: status = register_read(EZRADIOPRO_INTERRUPT_STATUS_2);
      00097B 75 82 04         [24] 2682 	mov	dpl,#0x04
      00097E 12r08r4A         [24] 2683 	lcall	_register_read
      000981 E5 82            [12] 2684 	mov	a,dpl
                                   2685 ;	radio/radio.c:1094: if (status & EZRADIOPRO_ICHIPRDY) {
      000983 30 E1 EA         [24] 2686 	jnb	acc.1,00108$
                                   2687 ;	radio/radio.c:1095: return true;
      000986 D3               [12] 2688 	setb	c
      000987 22               [24] 2689 	ret
      000988                       2690 00110$:
                                   2691 ;	radio/radio.c:1098: return false;
      000988 C3               [12] 2692 	clr	c
      000989 22               [24] 2693 	ret
                                   2694 ;------------------------------------------------------------
                                   2695 ;Allocation info for local variables in function 'set_frequency_registers'
                                   2696 ;------------------------------------------------------------
                                   2697 ;band                      Allocated with name '_set_frequency_registers_band_1_247'
                                   2698 ;carrier                   Allocated with name '_set_frequency_registers_carrier_1_247'
                                   2699 ;------------------------------------------------------------
                                   2700 ;	radio/radio.c:1105: set_frequency_registers(__pdata uint32_t frequency)
                                   2701 ;	-----------------------------------------
                                   2702 ;	 function set_frequency_registers
                                   2703 ;	-----------------------------------------
      00098A                       2704 _set_frequency_registers:
      00098A AF 82            [24] 2705 	mov	r7,dpl
      00098C AE 83            [24] 2706 	mov	r6,dph
      00098E AD F0            [24] 2707 	mov	r5,b
      000990 FC               [12] 2708 	mov	r4,a
      000991 78r25            [12] 2709 	mov	r0,#_set_frequency_registers_frequency_1_246
      000993 EF               [12] 2710 	mov	a,r7
      000994 F2               [24] 2711 	movx	@r0,a
      000995 08               [12] 2712 	inc	r0
      000996 EE               [12] 2713 	mov	a,r6
      000997 F2               [24] 2714 	movx	@r0,a
      000998 08               [12] 2715 	inc	r0
      000999 ED               [12] 2716 	mov	a,r5
      00099A F2               [24] 2717 	movx	@r0,a
      00099B 08               [12] 2718 	inc	r0
      00099C EC               [12] 2719 	mov	a,r4
      00099D F2               [24] 2720 	movx	@r0,a
                                   2721 ;	radio/radio.c:1110: if (frequency > 480000000UL) {
      00099E 78r25            [12] 2722 	mov	r0,#_set_frequency_registers_frequency_1_246
      0009A0 C3               [12] 2723 	clr	c
      0009A1 E2               [24] 2724 	movx	a,@r0
      0009A2 F5 F0            [12] 2725 	mov	b,a
      0009A4 E4               [12] 2726 	clr	a
      0009A5 95 F0            [12] 2727 	subb	a,b
      0009A7 08               [12] 2728 	inc	r0
      0009A8 E2               [24] 2729 	movx	a,@r0
      0009A9 F5 F0            [12] 2730 	mov	b,a
      0009AB 74 38            [12] 2731 	mov	a,#0x38
      0009AD 95 F0            [12] 2732 	subb	a,b
      0009AF 08               [12] 2733 	inc	r0
      0009B0 E2               [24] 2734 	movx	a,@r0
      0009B1 F5 F0            [12] 2735 	mov	b,a
      0009B3 74 9C            [12] 2736 	mov	a,#0x9C
      0009B5 95 F0            [12] 2737 	subb	a,b
      0009B7 08               [12] 2738 	inc	r0
      0009B8 E2               [24] 2739 	movx	a,@r0
      0009B9 F5 F0            [12] 2740 	mov	b,a
      0009BB 74 1C            [12] 2741 	mov	a,#0x1C
      0009BD 95 F0            [12] 2742 	subb	a,b
      0009BF 40 03            [24] 2743 	jc	00109$
      0009C1 02r0Ar7F         [24] 2744 	ljmp	00102$
      0009C4                       2745 00109$:
                                   2746 ;	radio/radio.c:1111: frequency -= 480000000UL;
      0009C4 78r26            [12] 2747 	mov	r0,#(_set_frequency_registers_frequency_1_246 + 1)
      0009C6 E2               [24] 2748 	movx	a,@r0
      0009C7 24 C8            [12] 2749 	add	a,#0xC8
      0009C9 F2               [24] 2750 	movx	@r0,a
      0009CA 08               [12] 2751 	inc	r0
      0009CB E2               [24] 2752 	movx	a,@r0
      0009CC 34 63            [12] 2753 	addc	a,#0x63
      0009CE F2               [24] 2754 	movx	@r0,a
      0009CF 08               [12] 2755 	inc	r0
      0009D0 E2               [24] 2756 	movx	a,@r0
      0009D1 34 E3            [12] 2757 	addc	a,#0xE3
      0009D3 F2               [24] 2758 	movx	@r0,a
                                   2759 ;	radio/radio.c:1112: band  = frequency / 20000000UL;
      0009D4 90r00r00         [24] 2760 	mov	dptr,#__divulong_PARM_2
      0009D7 E4               [12] 2761 	clr	a
      0009D8 F0               [24] 2762 	movx	@dptr,a
      0009D9 74 2D            [12] 2763 	mov	a,#0x2D
      0009DB A3               [24] 2764 	inc	dptr
      0009DC F0               [24] 2765 	movx	@dptr,a
      0009DD 74 31            [12] 2766 	mov	a,#0x31
      0009DF A3               [24] 2767 	inc	dptr
      0009E0 F0               [24] 2768 	movx	@dptr,a
      0009E1 74 01            [12] 2769 	mov	a,#0x01
      0009E3 A3               [24] 2770 	inc	dptr
      0009E4 F0               [24] 2771 	movx	@dptr,a
      0009E5 78r25            [12] 2772 	mov	r0,#_set_frequency_registers_frequency_1_246
      0009E7 E2               [24] 2773 	movx	a,@r0
      0009E8 F5 82            [12] 2774 	mov	dpl,a
      0009EA 08               [12] 2775 	inc	r0
      0009EB E2               [24] 2776 	movx	a,@r0
      0009EC F5 83            [12] 2777 	mov	dph,a
      0009EE 08               [12] 2778 	inc	r0
      0009EF E2               [24] 2779 	movx	a,@r0
      0009F0 F5 F0            [12] 2780 	mov	b,a
      0009F2 08               [12] 2781 	inc	r0
      0009F3 E2               [24] 2782 	movx	a,@r0
      0009F4 12r00r00         [24] 2783 	lcall	__divulong
      0009F7 AA 82            [24] 2784 	mov	r2,dpl
      0009F9 90r01r05         [24] 2785 	mov	dptr,#_set_frequency_registers_band_1_247
      0009FC EA               [12] 2786 	mov	a,r2
      0009FD F0               [24] 2787 	movx	@dptr,a
                                   2788 ;	radio/radio.c:1113: frequency -= (uint32_t)band * 20000000UL;
      0009FE 90r00r00         [24] 2789 	mov	dptr,#__mullong_PARM_2
      000A01 EA               [12] 2790 	mov	a,r2
      000A02 F0               [24] 2791 	movx	@dptr,a
      000A03 E4               [12] 2792 	clr	a
      000A04 A3               [24] 2793 	inc	dptr
      000A05 F0               [24] 2794 	movx	@dptr,a
      000A06 A3               [24] 2795 	inc	dptr
      000A07 F0               [24] 2796 	movx	@dptr,a
      000A08 A3               [24] 2797 	inc	dptr
      000A09 F0               [24] 2798 	movx	@dptr,a
      000A0A 90 2D 00         [24] 2799 	mov	dptr,#0x2D00
      000A0D 75 F0 31         [24] 2800 	mov	b,#0x31
      000A10 74 01            [12] 2801 	mov	a,#0x01
      000A12 12r00r00         [24] 2802 	lcall	__mullong
      000A15 AC 82            [24] 2803 	mov	r4,dpl
      000A17 AD 83            [24] 2804 	mov	r5,dph
      000A19 AE F0            [24] 2805 	mov	r6,b
      000A1B FF               [12] 2806 	mov	r7,a
      000A1C 78r25            [12] 2807 	mov	r0,#_set_frequency_registers_frequency_1_246
      000A1E E2               [24] 2808 	movx	a,@r0
      000A1F C3               [12] 2809 	clr	c
      000A20 9C               [12] 2810 	subb	a,r4
      000A21 F2               [24] 2811 	movx	@r0,a
      000A22 08               [12] 2812 	inc	r0
      000A23 E2               [24] 2813 	movx	a,@r0
      000A24 9D               [12] 2814 	subb	a,r5
      000A25 F2               [24] 2815 	movx	@r0,a
      000A26 08               [12] 2816 	inc	r0
      000A27 E2               [24] 2817 	movx	a,@r0
      000A28 9E               [12] 2818 	subb	a,r6
      000A29 F2               [24] 2819 	movx	@r0,a
      000A2A 08               [12] 2820 	inc	r0
      000A2B E2               [24] 2821 	movx	a,@r0
      000A2C 9F               [12] 2822 	subb	a,r7
      000A2D F2               [24] 2823 	movx	@r0,a
                                   2824 ;	radio/radio.c:1114: frequency  = scale_uint32(frequency, 625);
      000A2E 78r1D            [12] 2825 	mov	r0,#_scale_uint32_PARM_2
      000A30 74 71            [12] 2826 	mov	a,#0x71
      000A32 F2               [24] 2827 	movx	@r0,a
      000A33 08               [12] 2828 	inc	r0
      000A34 74 02            [12] 2829 	mov	a,#0x02
      000A36 F2               [24] 2830 	movx	@r0,a
      000A37 08               [12] 2831 	inc	r0
      000A38 E4               [12] 2832 	clr	a
      000A39 F2               [24] 2833 	movx	@r0,a
      000A3A 08               [12] 2834 	inc	r0
      000A3B F2               [24] 2835 	movx	@r0,a
      000A3C 78r25            [12] 2836 	mov	r0,#_set_frequency_registers_frequency_1_246
      000A3E E2               [24] 2837 	movx	a,@r0
      000A3F F5 82            [12] 2838 	mov	dpl,a
      000A41 08               [12] 2839 	inc	r0
      000A42 E2               [24] 2840 	movx	a,@r0
      000A43 F5 83            [12] 2841 	mov	dph,a
      000A45 08               [12] 2842 	inc	r0
      000A46 E2               [24] 2843 	movx	a,@r0
      000A47 F5 F0            [12] 2844 	mov	b,a
      000A49 08               [12] 2845 	inc	r0
      000A4A E2               [24] 2846 	movx	a,@r0
      000A4B 12r08rCA         [24] 2847 	lcall	_scale_uint32
      000A4E 78r25            [12] 2848 	mov	r0,#_set_frequency_registers_frequency_1_246
      000A50 C0 E0            [24] 2849 	push	acc
      000A52 E5 82            [12] 2850 	mov	a,dpl
      000A54 F2               [24] 2851 	movx	@r0,a
      000A55 08               [12] 2852 	inc	r0
      000A56 E5 83            [12] 2853 	mov	a,dph
      000A58 F2               [24] 2854 	movx	@r0,a
      000A59 08               [12] 2855 	inc	r0
      000A5A E5 F0            [12] 2856 	mov	a,b
      000A5C F2               [24] 2857 	movx	@r0,a
      000A5D D0 E0            [24] 2858 	pop	acc
      000A5F 08               [12] 2859 	inc	r0
      000A60 F2               [24] 2860 	movx	@r0,a
                                   2861 ;	radio/radio.c:1115: frequency <<= 1;
      000A61 78r25            [12] 2862 	mov	r0,#_set_frequency_registers_frequency_1_246
      000A63 E2               [24] 2863 	movx	a,@r0
      000A64 25 E0            [12] 2864 	add	a,acc
      000A66 F2               [24] 2865 	movx	@r0,a
      000A67 08               [12] 2866 	inc	r0
      000A68 E2               [24] 2867 	movx	a,@r0
      000A69 33               [12] 2868 	rlc	a
      000A6A F2               [24] 2869 	movx	@r0,a
      000A6B 08               [12] 2870 	inc	r0
      000A6C E2               [24] 2871 	movx	a,@r0
      000A6D 33               [12] 2872 	rlc	a
      000A6E F2               [24] 2873 	movx	@r0,a
      000A6F 08               [12] 2874 	inc	r0
      000A70 E2               [24] 2875 	movx	a,@r0
      000A71 33               [12] 2876 	rlc	a
      000A72 F2               [24] 2877 	movx	@r0,a
                                   2878 ;	radio/radio.c:1116: band |= EZRADIOPRO_HBSEL;
      000A73 90r01r05         [24] 2879 	mov	dptr,#_set_frequency_registers_band_1_247
      000A76 E0               [24] 2880 	movx	a,@dptr
      000A77 FF               [12] 2881 	mov	r7,a
      000A78 74 20            [12] 2882 	mov	a,#0x20
      000A7A 4F               [12] 2883 	orl	a,r7
      000A7B F0               [24] 2884 	movx	@dptr,a
      000A7C 02r0Br40         [24] 2885 	ljmp	00103$
      000A7F                       2886 00102$:
                                   2887 ;	radio/radio.c:1118: frequency -= 240000000UL;
      000A7F 78r26            [12] 2888 	mov	r0,#(_set_frequency_registers_frequency_1_246 + 1)
      000A81 E2               [24] 2889 	movx	a,@r0
      000A82 24 E4            [12] 2890 	add	a,#0xE4
      000A84 F2               [24] 2891 	movx	@r0,a
      000A85 08               [12] 2892 	inc	r0
      000A86 E2               [24] 2893 	movx	a,@r0
      000A87 34 B1            [12] 2894 	addc	a,#0xB1
      000A89 F2               [24] 2895 	movx	@r0,a
      000A8A 08               [12] 2896 	inc	r0
      000A8B E2               [24] 2897 	movx	a,@r0
      000A8C 34 F1            [12] 2898 	addc	a,#0xF1
      000A8E F2               [24] 2899 	movx	@r0,a
                                   2900 ;	radio/radio.c:1119: band  = frequency / 10000000UL;
      000A8F 90r00r00         [24] 2901 	mov	dptr,#__divulong_PARM_2
      000A92 74 80            [12] 2902 	mov	a,#0x80
      000A94 F0               [24] 2903 	movx	@dptr,a
      000A95 74 96            [12] 2904 	mov	a,#0x96
      000A97 A3               [24] 2905 	inc	dptr
      000A98 F0               [24] 2906 	movx	@dptr,a
      000A99 74 98            [12] 2907 	mov	a,#0x98
      000A9B A3               [24] 2908 	inc	dptr
      000A9C F0               [24] 2909 	movx	@dptr,a
      000A9D E4               [12] 2910 	clr	a
      000A9E A3               [24] 2911 	inc	dptr
      000A9F F0               [24] 2912 	movx	@dptr,a
      000AA0 78r25            [12] 2913 	mov	r0,#_set_frequency_registers_frequency_1_246
      000AA2 E2               [24] 2914 	movx	a,@r0
      000AA3 F5 82            [12] 2915 	mov	dpl,a
      000AA5 08               [12] 2916 	inc	r0
      000AA6 E2               [24] 2917 	movx	a,@r0
      000AA7 F5 83            [12] 2918 	mov	dph,a
      000AA9 08               [12] 2919 	inc	r0
      000AAA E2               [24] 2920 	movx	a,@r0
      000AAB F5 F0            [12] 2921 	mov	b,a
      000AAD 08               [12] 2922 	inc	r0
      000AAE E2               [24] 2923 	movx	a,@r0
      000AAF 12r00r00         [24] 2924 	lcall	__divulong
      000AB2 AC 82            [24] 2925 	mov	r4,dpl
      000AB4 90r01r05         [24] 2926 	mov	dptr,#_set_frequency_registers_band_1_247
      000AB7 EC               [12] 2927 	mov	a,r4
      000AB8 F0               [24] 2928 	movx	@dptr,a
                                   2929 ;	radio/radio.c:1120: frequency -= (uint32_t)band * 10000000UL;
      000AB9 90r00r00         [24] 2930 	mov	dptr,#__mullong_PARM_2
      000ABC EC               [12] 2931 	mov	a,r4
      000ABD F0               [24] 2932 	movx	@dptr,a
      000ABE E4               [12] 2933 	clr	a
      000ABF A3               [24] 2934 	inc	dptr
      000AC0 F0               [24] 2935 	movx	@dptr,a
      000AC1 A3               [24] 2936 	inc	dptr
      000AC2 F0               [24] 2937 	movx	@dptr,a
      000AC3 A3               [24] 2938 	inc	dptr
      000AC4 F0               [24] 2939 	movx	@dptr,a
      000AC5 90 96 80         [24] 2940 	mov	dptr,#0x9680
      000AC8 75 F0 98         [24] 2941 	mov	b,#0x98
      000ACB E4               [12] 2942 	clr	a
      000ACC 12r00r00         [24] 2943 	lcall	__mullong
      000ACF AC 82            [24] 2944 	mov	r4,dpl
      000AD1 AD 83            [24] 2945 	mov	r5,dph
      000AD3 AE F0            [24] 2946 	mov	r6,b
      000AD5 FF               [12] 2947 	mov	r7,a
      000AD6 78r25            [12] 2948 	mov	r0,#_set_frequency_registers_frequency_1_246
      000AD8 E2               [24] 2949 	movx	a,@r0
      000AD9 C3               [12] 2950 	clr	c
      000ADA 9C               [12] 2951 	subb	a,r4
      000ADB F2               [24] 2952 	movx	@r0,a
      000ADC 08               [12] 2953 	inc	r0
      000ADD E2               [24] 2954 	movx	a,@r0
      000ADE 9D               [12] 2955 	subb	a,r5
      000ADF F2               [24] 2956 	movx	@r0,a
      000AE0 08               [12] 2957 	inc	r0
      000AE1 E2               [24] 2958 	movx	a,@r0
      000AE2 9E               [12] 2959 	subb	a,r6
      000AE3 F2               [24] 2960 	movx	@r0,a
      000AE4 08               [12] 2961 	inc	r0
      000AE5 E2               [24] 2962 	movx	a,@r0
      000AE6 9F               [12] 2963 	subb	a,r7
      000AE7 F2               [24] 2964 	movx	@r0,a
                                   2965 ;	radio/radio.c:1121: frequency  = scale_uint32(frequency, 625);
      000AE8 78r1D            [12] 2966 	mov	r0,#_scale_uint32_PARM_2
      000AEA 74 71            [12] 2967 	mov	a,#0x71
      000AEC F2               [24] 2968 	movx	@r0,a
      000AED 08               [12] 2969 	inc	r0
      000AEE 74 02            [12] 2970 	mov	a,#0x02
      000AF0 F2               [24] 2971 	movx	@r0,a
      000AF1 08               [12] 2972 	inc	r0
      000AF2 E4               [12] 2973 	clr	a
      000AF3 F2               [24] 2974 	movx	@r0,a
      000AF4 08               [12] 2975 	inc	r0
      000AF5 F2               [24] 2976 	movx	@r0,a
      000AF6 78r25            [12] 2977 	mov	r0,#_set_frequency_registers_frequency_1_246
      000AF8 E2               [24] 2978 	movx	a,@r0
      000AF9 F5 82            [12] 2979 	mov	dpl,a
      000AFB 08               [12] 2980 	inc	r0
      000AFC E2               [24] 2981 	movx	a,@r0
      000AFD F5 83            [12] 2982 	mov	dph,a
      000AFF 08               [12] 2983 	inc	r0
      000B00 E2               [24] 2984 	movx	a,@r0
      000B01 F5 F0            [12] 2985 	mov	b,a
      000B03 08               [12] 2986 	inc	r0
      000B04 E2               [24] 2987 	movx	a,@r0
      000B05 12r08rCA         [24] 2988 	lcall	_scale_uint32
      000B08 78r25            [12] 2989 	mov	r0,#_set_frequency_registers_frequency_1_246
      000B0A C0 E0            [24] 2990 	push	acc
      000B0C E5 82            [12] 2991 	mov	a,dpl
      000B0E F2               [24] 2992 	movx	@r0,a
      000B0F 08               [12] 2993 	inc	r0
      000B10 E5 83            [12] 2994 	mov	a,dph
      000B12 F2               [24] 2995 	movx	@r0,a
      000B13 08               [12] 2996 	inc	r0
      000B14 E5 F0            [12] 2997 	mov	a,b
      000B16 F2               [24] 2998 	movx	@r0,a
      000B17 D0 E0            [24] 2999 	pop	acc
      000B19 08               [12] 3000 	inc	r0
      000B1A F2               [24] 3001 	movx	@r0,a
                                   3002 ;	radio/radio.c:1122: frequency <<= 2;
      000B1B 78r25            [12] 3003 	mov	r0,#_set_frequency_registers_frequency_1_246
      000B1D E2               [24] 3004 	movx	a,@r0
      000B1E 25 E0            [12] 3005 	add	a,acc
      000B20 F2               [24] 3006 	movx	@r0,a
      000B21 08               [12] 3007 	inc	r0
      000B22 E2               [24] 3008 	movx	a,@r0
      000B23 33               [12] 3009 	rlc	a
      000B24 F2               [24] 3010 	movx	@r0,a
      000B25 08               [12] 3011 	inc	r0
      000B26 E2               [24] 3012 	movx	a,@r0
      000B27 33               [12] 3013 	rlc	a
      000B28 F2               [24] 3014 	movx	@r0,a
      000B29 08               [12] 3015 	inc	r0
      000B2A E2               [24] 3016 	movx	a,@r0
      000B2B 33               [12] 3017 	rlc	a
      000B2C F2               [24] 3018 	movx	@r0,a
      000B2D 18               [12] 3019 	dec	r0
      000B2E 18               [12] 3020 	dec	r0
      000B2F 18               [12] 3021 	dec	r0
      000B30 E2               [24] 3022 	movx	a,@r0
      000B31 25 E0            [12] 3023 	add	a,acc
      000B33 F2               [24] 3024 	movx	@r0,a
      000B34 08               [12] 3025 	inc	r0
      000B35 E2               [24] 3026 	movx	a,@r0
      000B36 33               [12] 3027 	rlc	a
      000B37 F2               [24] 3028 	movx	@r0,a
      000B38 08               [12] 3029 	inc	r0
      000B39 E2               [24] 3030 	movx	a,@r0
      000B3A 33               [12] 3031 	rlc	a
      000B3B F2               [24] 3032 	movx	@r0,a
      000B3C 08               [12] 3033 	inc	r0
      000B3D E2               [24] 3034 	movx	a,@r0
      000B3E 33               [12] 3035 	rlc	a
      000B3F F2               [24] 3036 	movx	@r0,a
      000B40                       3037 00103$:
                                   3038 ;	radio/radio.c:1125: band |= EZRADIOPRO_SBSEL;
      000B40 90r01r05         [24] 3039 	mov	dptr,#_set_frequency_registers_band_1_247
      000B43 E0               [24] 3040 	movx	a,@dptr
      000B44 FF               [12] 3041 	mov	r7,a
      000B45 74 40            [12] 3042 	mov	a,#0x40
      000B47 4F               [12] 3043 	orl	a,r7
      000B48 F0               [24] 3044 	movx	@dptr,a
                                   3045 ;	radio/radio.c:1126: carrier = (uint16_t)frequency;
      000B49 78r25            [12] 3046 	mov	r0,#_set_frequency_registers_frequency_1_246
      000B4B E2               [24] 3047 	movx	a,@r0
      000B4C FC               [12] 3048 	mov	r4,a
      000B4D 08               [12] 3049 	inc	r0
      000B4E E2               [24] 3050 	movx	a,@r0
      000B4F FD               [12] 3051 	mov	r5,a
                                   3052 ;	radio/radio.c:1128: register_write(EZRADIOPRO_FREQUENCY_BAND_SELECT, band);
      000B50 C0 05            [24] 3053 	push	ar5
      000B52 C0 04            [24] 3054 	push	ar4
      000B54 E0               [24] 3055 	movx	a,@dptr
      000B55 C0 E0            [24] 3056 	push	acc
      000B57 75 82 75         [24] 3057 	mov	dpl,#0x75
      000B5A 12r08r14         [24] 3058 	lcall	_register_write
      000B5D 15 81            [12] 3059 	dec	sp
      000B5F D0 04            [24] 3060 	pop	ar4
      000B61 D0 05            [24] 3061 	pop	ar5
                                   3062 ;	radio/radio.c:1129: register_write(EZRADIOPRO_NOMINAL_CARRIER_FREQUENCY_1, carrier >> 8);
      000B63 8D 07            [24] 3063 	mov	ar7,r5
      000B65 C0 05            [24] 3064 	push	ar5
      000B67 C0 04            [24] 3065 	push	ar4
      000B69 C0 07            [24] 3066 	push	ar7
      000B6B 75 82 76         [24] 3067 	mov	dpl,#0x76
      000B6E 12r08r14         [24] 3068 	lcall	_register_write
      000B71 15 81            [12] 3069 	dec	sp
      000B73 D0 04            [24] 3070 	pop	ar4
      000B75 D0 05            [24] 3071 	pop	ar5
                                   3072 ;	radio/radio.c:1130: register_write(EZRADIOPRO_NOMINAL_CARRIER_FREQUENCY_0, carrier & 0xFF);
      000B77 C0 04            [24] 3073 	push	ar4
      000B79 75 82 77         [24] 3074 	mov	dpl,#0x77
      000B7C 12r08r14         [24] 3075 	lcall	_register_write
      000B7F 15 81            [12] 3076 	dec	sp
      000B81 22               [24] 3077 	ret
                                   3078 ;------------------------------------------------------------
                                   3079 ;Allocation info for local variables in function 'radio_temperature'
                                   3080 ;------------------------------------------------------------
                                   3081 ;temp_local                Allocated to registers r6 r7 
                                   3082 ;------------------------------------------------------------
                                   3083 ;	radio/radio.c:1139: radio_temperature(void)
                                   3084 ;	-----------------------------------------
                                   3085 ;	 function radio_temperature
                                   3086 ;	-----------------------------------------
      000B82                       3087 _radio_temperature:
                                   3088 ;	radio/radio.c:1156: AD0BUSY = 1;		// Start ADC conversion
      000B82 D2 EC            [12] 3089 	setb	_AD0BUSY
                                   3090 ;	radio/radio.c:1157: while (AD0BUSY) ;  	// Wait for completion of conversion
      000B84                       3091 00101$:
      000B84 20 EC FD         [24] 3092 	jb	_AD0BUSY,00101$
                                   3093 ;	radio/radio.c:1159: temp_local = (ADC0H << 8) | ADC0L;
      000B87 AF BE            [24] 3094 	mov	r7,_ADC0H
      000B89 7E 00            [12] 3095 	mov	r6,#0x00
      000B8B AC BD            [24] 3096 	mov	r4,_ADC0L
      000B8D 7D 00            [12] 3097 	mov	r5,#0x00
      000B8F EC               [12] 3098 	mov	a,r4
      000B90 42 06            [12] 3099 	orl	ar6,a
      000B92 ED               [12] 3100 	mov	a,r5
      000B93 42 07            [12] 3101 	orl	ar7,a
                                   3102 ;	radio/radio.c:1160: temp_local *= 1.64060;  // convert reading into mV ( (val/1024) * 1680 )  vref=1680mV
      000B95 8E 82            [24] 3103 	mov	dpl,r6
      000B97 8F 83            [24] 3104 	mov	dph,r7
      000B99 12r00r00         [24] 3105 	lcall	___sint2fs
      000B9C AA 82            [24] 3106 	mov	r2,dpl
      000B9E AB 83            [24] 3107 	mov	r3,dph
      000BA0 AC F0            [24] 3108 	mov	r4,b
      000BA2 FD               [12] 3109 	mov	r5,a
      000BA3 C0 02            [24] 3110 	push	ar2
      000BA5 C0 03            [24] 3111 	push	ar3
      000BA7 C0 04            [24] 3112 	push	ar4
      000BA9 C0 05            [24] 3113 	push	ar5
      000BAB 90 FF 2E         [24] 3114 	mov	dptr,#0xFF2E
      000BAE 75 F0 D1         [24] 3115 	mov	b,#0xD1
      000BB1 74 3F            [12] 3116 	mov	a,#0x3F
      000BB3 12r00r00         [24] 3117 	lcall	___fsmul
      000BB6 AA 82            [24] 3118 	mov	r2,dpl
      000BB8 AB 83            [24] 3119 	mov	r3,dph
      000BBA AC F0            [24] 3120 	mov	r4,b
      000BBC FD               [12] 3121 	mov	r5,a
      000BBD E5 81            [12] 3122 	mov	a,sp
      000BBF 24 FC            [12] 3123 	add	a,#0xfc
      000BC1 F5 81            [12] 3124 	mov	sp,a
      000BC3 8A 82            [24] 3125 	mov	dpl,r2
      000BC5 8B 83            [24] 3126 	mov	dph,r3
      000BC7 8C F0            [24] 3127 	mov	b,r4
      000BC9 ED               [12] 3128 	mov	a,r5
      000BCA 12r00r00         [24] 3129 	lcall	___fs2sint
      000BCD AE 82            [24] 3130 	mov	r6,dpl
      000BCF AF 83            [24] 3131 	mov	r7,dph
                                   3132 ;	radio/radio.c:1161: temp_local = 25.0 + (temp_local - 1025) / 3.4; // convert mV reading into degC.
      000BD1 EE               [12] 3133 	mov	a,r6
      000BD2 24 FF            [12] 3134 	add	a,#0xFF
      000BD4 FC               [12] 3135 	mov	r4,a
      000BD5 EF               [12] 3136 	mov	a,r7
      000BD6 34 FB            [12] 3137 	addc	a,#0xFB
      000BD8 FD               [12] 3138 	mov	r5,a
      000BD9 8C 82            [24] 3139 	mov	dpl,r4
      000BDB 8D 83            [24] 3140 	mov	dph,r5
      000BDD 12r00r00         [24] 3141 	lcall	___sint2fs
      000BE0 AA 82            [24] 3142 	mov	r2,dpl
      000BE2 AB 83            [24] 3143 	mov	r3,dph
      000BE4 AC F0            [24] 3144 	mov	r4,b
      000BE6 FD               [12] 3145 	mov	r5,a
      000BE7 74 9A            [12] 3146 	mov	a,#0x9A
      000BE9 C0 E0            [24] 3147 	push	acc
      000BEB 14               [12] 3148 	dec	a
      000BEC C0 E0            [24] 3149 	push	acc
      000BEE 74 59            [12] 3150 	mov	a,#0x59
      000BF0 C0 E0            [24] 3151 	push	acc
      000BF2 74 40            [12] 3152 	mov	a,#0x40
      000BF4 C0 E0            [24] 3153 	push	acc
      000BF6 8A 82            [24] 3154 	mov	dpl,r2
      000BF8 8B 83            [24] 3155 	mov	dph,r3
      000BFA 8C F0            [24] 3156 	mov	b,r4
      000BFC ED               [12] 3157 	mov	a,r5
      000BFD 12r00r00         [24] 3158 	lcall	___fsdiv
      000C00 AA 82            [24] 3159 	mov	r2,dpl
      000C02 AB 83            [24] 3160 	mov	r3,dph
      000C04 AC F0            [24] 3161 	mov	r4,b
      000C06 FD               [12] 3162 	mov	r5,a
      000C07 E5 81            [12] 3163 	mov	a,sp
      000C09 24 FC            [12] 3164 	add	a,#0xfc
      000C0B F5 81            [12] 3165 	mov	sp,a
      000C0D E4               [12] 3166 	clr	a
      000C0E C0 E0            [24] 3167 	push	acc
      000C10 C0 E0            [24] 3168 	push	acc
      000C12 74 C8            [12] 3169 	mov	a,#0xC8
      000C14 C0 E0            [24] 3170 	push	acc
      000C16 74 41            [12] 3171 	mov	a,#0x41
      000C18 C0 E0            [24] 3172 	push	acc
      000C1A 8A 82            [24] 3173 	mov	dpl,r2
      000C1C 8B 83            [24] 3174 	mov	dph,r3
      000C1E 8C F0            [24] 3175 	mov	b,r4
      000C20 ED               [12] 3176 	mov	a,r5
      000C21 12r00r00         [24] 3177 	lcall	___fsadd
      000C24 AA 82            [24] 3178 	mov	r2,dpl
      000C26 AB 83            [24] 3179 	mov	r3,dph
      000C28 AC F0            [24] 3180 	mov	r4,b
      000C2A FD               [12] 3181 	mov	r5,a
      000C2B E5 81            [12] 3182 	mov	a,sp
      000C2D 24 FC            [12] 3183 	add	a,#0xfc
      000C2F F5 81            [12] 3184 	mov	sp,a
      000C31 8A 82            [24] 3185 	mov	dpl,r2
      000C33 8B 83            [24] 3186 	mov	dph,r3
      000C35 8C F0            [24] 3187 	mov	b,r4
      000C37 ED               [12] 3188 	mov	a,r5
                                   3189 ;	radio/radio.c:1163: return temp_local;
      000C38 02r00r00         [24] 3190 	ljmp	___fs2sint
                                   3191 ;------------------------------------------------------------
                                   3192 ;Allocation info for local variables in function 'radio_set_diversity'
                                   3193 ;------------------------------------------------------------
                                   3194 ;state                     Allocated with name '_radio_set_diversity_state_1_252'
                                   3195 ;------------------------------------------------------------
                                   3196 ;	radio/radio.c:1169: radio_set_diversity(enum DIVERSITY_Enum state)
                                   3197 ;	-----------------------------------------
                                   3198 ;	 function radio_set_diversity
                                   3199 ;	-----------------------------------------
      000C3B                       3200 _radio_set_diversity:
      000C3B E5 82            [12] 3201 	mov	a,dpl
      000C3D 90r01r06         [24] 3202 	mov	dptr,#_radio_set_diversity_state_1_252
      000C40 F0               [24] 3203 	movx	@dptr,a
                                   3204 ;	radio/radio.c:1171: switch (state) {
      000C41 E0               [24] 3205 	movx	a,@dptr
      000C42 FF               [12] 3206 	mov  r7,a
      000C43 24 FC            [12] 3207 	add	a,#0xff - 0x03
      000C45 40 68            [24] 3208 	jc	00105$
      000C47 EF               [12] 3209 	mov	a,r7
      000C48 2F               [12] 3210 	add	a,r7
      000C49 2F               [12] 3211 	add	a,r7
      000C4A 90r0Cr4E         [24] 3212 	mov	dptr,#00113$
      000C4D 73               [24] 3213 	jmp	@a+dptr
      000C4E                       3214 00113$:
      000C4E 02r0Cr5A         [24] 3215 	ljmp	00101$
      000C51 02r0CrAF         [24] 3216 	ljmp	00103$
      000C54 02r0CrAF         [24] 3217 	ljmp	00104$
      000C57 02r0Cr7F         [24] 3218 	ljmp	00102$
                                   3219 ;	radio/radio.c:1172: case DIVERSITY_ENABLED:
      000C5A                       3220 00101$:
                                   3221 ;	radio/radio.c:1173: register_write(EZRADIOPRO_GPIO2_CONFIGURATION, 0x18);
      000C5A 74 18            [12] 3222 	mov	a,#0x18
      000C5C C0 E0            [24] 3223 	push	acc
      000C5E 75 82 0D         [24] 3224 	mov	dpl,#0x0D
      000C61 12r08r14         [24] 3225 	lcall	_register_write
      000C64 15 81            [12] 3226 	dec	sp
                                   3227 ;	radio/radio.c:1175: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, (register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2) & ~EZRADIOPRO_ANTDIV_MASK) | 0x80);
      000C66 75 82 08         [24] 3228 	mov	dpl,#0x08
      000C69 12r08r4A         [24] 3229 	lcall	_register_read
      000C6C AF 82            [24] 3230 	mov	r7,dpl
      000C6E 74 1F            [12] 3231 	mov	a,#0x1F
      000C70 5F               [12] 3232 	anl	a,r7
      000C71 44 80            [12] 3233 	orl	a,#0x80
      000C73 FF               [12] 3234 	mov	r7,a
      000C74 C0 07            [24] 3235 	push	ar7
      000C76 75 82 08         [24] 3236 	mov	dpl,#0x08
      000C79 12r08r14         [24] 3237 	lcall	_register_write
      000C7C 15 81            [12] 3238 	dec	sp
                                   3239 ;	radio/radio.c:1176: break;
                                   3240 ;	radio/radio.c:1178: case DIVERSITY_ANT2:
      000C7E 22               [24] 3241 	ret
      000C7F                       3242 00102$:
                                   3243 ;	radio/radio.c:1180: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, (register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2) & ~EZRADIOPRO_ANTDIV_MASK) | 0x20);
      000C7F 75 82 08         [24] 3244 	mov	dpl,#0x08
      000C82 12r08r4A         [24] 3245 	lcall	_register_read
      000C85 AF 82            [24] 3246 	mov	r7,dpl
      000C87 74 1F            [12] 3247 	mov	a,#0x1F
      000C89 5F               [12] 3248 	anl	a,r7
      000C8A 44 20            [12] 3249 	orl	a,#0x20
      000C8C FF               [12] 3250 	mov	r7,a
      000C8D C0 07            [24] 3251 	push	ar7
      000C8F 75 82 08         [24] 3252 	mov	dpl,#0x08
      000C92 12r08r14         [24] 3253 	lcall	_register_write
      000C95 15 81            [12] 3254 	dec	sp
                                   3255 ;	radio/radio.c:1182: register_write(EZRADIOPRO_GPIO2_CONFIGURATION, 0x0A);	// GPIO2 output set high fixed
      000C97 74 0A            [12] 3256 	mov	a,#0x0A
      000C99 C0 E0            [24] 3257 	push	acc
      000C9B 75 82 0D         [24] 3258 	mov	dpl,#0x0D
      000C9E 12r08r14         [24] 3259 	lcall	_register_write
      000CA1 15 81            [12] 3260 	dec	sp
                                   3261 ;	radio/radio.c:1183: register_write(EZRADIOPRO_IO_PORT_CONFIGURATION, 0x00);	// GPIO2 output set low (fixed on ant 2)
      000CA3 E4               [12] 3262 	clr	a
      000CA4 C0 E0            [24] 3263 	push	acc
      000CA6 75 82 0E         [24] 3264 	mov	dpl,#0x0E
      000CA9 12r08r14         [24] 3265 	lcall	_register_write
      000CAC 15 81            [12] 3266 	dec	sp
                                   3267 ;	radio/radio.c:1184: break;
                                   3268 ;	radio/radio.c:1186: case DIVERSITY_DISABLED:
      000CAE 22               [24] 3269 	ret
      000CAF                       3270 00103$:
                                   3271 ;	radio/radio.c:1187: case DIVERSITY_ANT1:
      000CAF                       3272 00104$:
                                   3273 ;	radio/radio.c:1188: default:
      000CAF                       3274 00105$:
                                   3275 ;	radio/radio.c:1190: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, (register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2) & ~EZRADIOPRO_ANTDIV_MASK));
      000CAF 75 82 08         [24] 3276 	mov	dpl,#0x08
      000CB2 12r08r4A         [24] 3277 	lcall	_register_read
      000CB5 AF 82            [24] 3278 	mov	r7,dpl
      000CB7 53 07 1F         [24] 3279 	anl	ar7,#0x1F
      000CBA C0 07            [24] 3280 	push	ar7
      000CBC 75 82 08         [24] 3281 	mov	dpl,#0x08
      000CBF 12r08r14         [24] 3282 	lcall	_register_write
      000CC2 15 81            [12] 3283 	dec	sp
                                   3284 ;	radio/radio.c:1192: register_write(EZRADIOPRO_GPIO2_CONFIGURATION, 0x0A);	// GPIO2 output set high fixed
      000CC4 74 0A            [12] 3285 	mov	a,#0x0A
      000CC6 C0 E0            [24] 3286 	push	acc
      000CC8 75 82 0D         [24] 3287 	mov	dpl,#0x0D
      000CCB 12r08r14         [24] 3288 	lcall	_register_write
      000CCE 15 81            [12] 3289 	dec	sp
                                   3290 ;	radio/radio.c:1193: register_write(EZRADIOPRO_IO_PORT_CONFIGURATION, 0x04);	// GPIO2 output set high (fixed on ant 1)
      000CD0 74 04            [12] 3291 	mov	a,#0x04
      000CD2 C0 E0            [24] 3292 	push	acc
      000CD4 75 82 0E         [24] 3293 	mov	dpl,#0x0E
      000CD7 12r08r14         [24] 3294 	lcall	_register_write
      000CDA 15 81            [12] 3295 	dec	sp
                                   3296 ;	radio/radio.c:1195: }
      000CDC 22               [24] 3297 	ret
                                   3298 ;------------------------------------------------------------
                                   3299 ;Allocation info for local variables in function 'Receiver_ISR'
                                   3300 ;------------------------------------------------------------
                                   3301 ;status                    Allocated to registers r6 
                                   3302 ;status2                   Allocated to registers r7 
                                   3303 ;len                       Allocated to registers r7 
                                   3304 ;------------------------------------------------------------
                                   3305 ;	radio/radio.c:1206: INTERRUPT(Receiver_ISR, INTERRUPT_INT0)
                                   3306 ;	-----------------------------------------
                                   3307 ;	 function Receiver_ISR
                                   3308 ;	-----------------------------------------
      000CDD                       3309 _Receiver_ISR:
      000CDD C0*00            [24] 3310 	push	bits
      000CDF C0 E0            [24] 3311 	push	acc
      000CE1 C0 F0            [24] 3312 	push	b
      000CE3 C0 82            [24] 3313 	push	dpl
      000CE5 C0 83            [24] 3314 	push	dph
      000CE7 C0 07            [24] 3315 	push	(0+7)
      000CE9 C0 06            [24] 3316 	push	(0+6)
      000CEB C0 05            [24] 3317 	push	(0+5)
      000CED C0 04            [24] 3318 	push	(0+4)
      000CEF C0 03            [24] 3319 	push	(0+3)
      000CF1 C0 02            [24] 3320 	push	(0+2)
      000CF3 C0 01            [24] 3321 	push	(0+1)
      000CF5 C0 00            [24] 3322 	push	(0+0)
      000CF7 C0 D0            [24] 3323 	push	psw
      000CF9 75 D0 00         [24] 3324 	mov	psw,#0x00
                                   3325 ;	radio/radio.c:1214: status2 = register_read(EZRADIOPRO_INTERRUPT_STATUS_2);
      000CFC 75 82 04         [24] 3326 	mov	dpl,#0x04
      000CFF 12r08r4A         [24] 3327 	lcall	_register_read
      000D02 AF 82            [24] 3328 	mov	r7,dpl
                                   3329 ;	radio/radio.c:1215: status  = register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      000D04 75 82 03         [24] 3330 	mov	dpl,#0x03
      000D07 C0 07            [24] 3331 	push	ar7
      000D09 12r08r4A         [24] 3332 	lcall	_register_read
      000D0C AE 82            [24] 3333 	mov	r6,dpl
      000D0E D0 07            [24] 3334 	pop	ar7
                                   3335 ;	radio/radio.c:1217: if (status & EZRADIOPRO_IRXFFAFULL) {
      000D10 EE               [12] 3336 	mov	a,r6
      000D11 30 E4 49         [24] 3337 	jnb	acc.4,00104$
                                   3338 ;	radio/radio.c:1218: if (RX_FIFO_THRESHOLD_HIGH + (uint16_t)partial_packet_length > MAX_PACKET_LENGTH) {
      000D14 78r01            [12] 3339 	mov	r0,#_partial_packet_length
      000D16 E2               [24] 3340 	movx	a,@r0
      000D17 FC               [12] 3341 	mov	r4,a
      000D18 7D 00            [12] 3342 	mov	r5,#0x00
      000D1A 74 32            [12] 3343 	mov	a,#0x32
      000D1C 2C               [12] 3344 	add	a,r4
      000D1D FC               [12] 3345 	mov	r4,a
      000D1E E4               [12] 3346 	clr	a
      000D1F 3D               [12] 3347 	addc	a,r5
      000D20 FD               [12] 3348 	mov	r5,a
      000D21 C3               [12] 3349 	clr	c
      000D22 74 FC            [12] 3350 	mov	a,#0xFC
      000D24 9C               [12] 3351 	subb	a,r4
      000D25 E4               [12] 3352 	clr	a
      000D26 9D               [12] 3353 	subb	a,r5
      000D27 50 03            [24] 3354 	jnc	00150$
      000D29 02r0DrE8         [24] 3355 	ljmp	00117$
      000D2C                       3356 00150$:
                                   3357 ;	radio/radio.c:1222: read_receive_fifo(RX_FIFO_THRESHOLD_HIGH, &radio_buffer[partial_packet_length]);
      000D2C 78r01            [12] 3358 	mov	r0,#_partial_packet_length
      000D2E E2               [24] 3359 	movx	a,@r0
      000D2F 24r00            [12] 3360 	add	a,#_radio_buffer
      000D31 FC               [12] 3361 	mov	r4,a
      000D32 E4               [12] 3362 	clr	a
      000D33 34s00            [12] 3363 	addc	a,#(_radio_buffer >> 8)
      000D35 FD               [12] 3364 	mov	r5,a
      000D36 C0 07            [24] 3365 	push	ar7
      000D38 C0 06            [24] 3366 	push	ar6
      000D3A C0 04            [24] 3367 	push	ar4
      000D3C C0 05            [24] 3368 	push	ar5
      000D3E 75 82 32         [24] 3369 	mov	dpl,#0x32
      000D41 12r08r7E         [24] 3370 	lcall	_read_receive_fifo
      000D44 15 81            [12] 3371 	dec	sp
      000D46 15 81            [12] 3372 	dec	sp
                                   3373 ;	radio/radio.c:1223: partial_packet_length += RX_FIFO_THRESHOLD_HIGH;
      000D48 78r01            [12] 3374 	mov	r0,#_partial_packet_length
      000D4A E2               [24] 3375 	movx	a,@r0
      000D4B 24 32            [12] 3376 	add	a,#0x32
      000D4D F2               [24] 3377 	movx	@r0,a
                                   3378 ;	radio/radio.c:1224: last_rssi = register_read(EZRADIOPRO_RECEIVED_SIGNAL_STRENGTH_INDICATOR);
      000D4E 75 82 26         [24] 3379 	mov	dpl,#0x26
      000D51 12r08r4A         [24] 3380 	lcall	_register_read
      000D54 E5 82            [12] 3381 	mov	a,dpl
      000D56 D0 06            [24] 3382 	pop	ar6
      000D58 D0 07            [24] 3383 	pop	ar7
      000D5A 78r02            [12] 3384 	mov	r0,#_last_rssi
      000D5C F2               [24] 3385 	movx	@r0,a
      000D5D                       3386 00104$:
                                   3387 ;	radio/radio.c:1227: if (status2 & EZRADIOPRO_IPREAVAL) {
      000D5D EF               [12] 3388 	mov	a,r7
      000D5E 30 E6 11         [24] 3389 	jnb	acc.6,00106$
                                   3390 ;	radio/radio.c:1229: preamble_detected = true;
      000D61 D2*01            [12] 3391 	setb	_preamble_detected
                                   3392 ;	radio/radio.c:1232: last_rssi = register_read(EZRADIOPRO_RECEIVED_SIGNAL_STRENGTH_INDICATOR);
      000D63 75 82 26         [24] 3393 	mov	dpl,#0x26
      000D66 C0 06            [24] 3394 	push	ar6
      000D68 12r08r4A         [24] 3395 	lcall	_register_read
      000D6B E5 82            [12] 3396 	mov	a,dpl
      000D6D D0 06            [24] 3397 	pop	ar6
      000D6F 78r02            [12] 3398 	mov	r0,#_last_rssi
      000D71 F2               [24] 3399 	movx	@r0,a
      000D72                       3400 00106$:
                                   3401 ;	radio/radio.c:1235: if (feature_golay == false && (status & EZRADIOPRO_ICRCERROR)) {
      000D72 20*00 04         [24] 3402 	jb	_feature_golay,00108$
      000D75 EE               [12] 3403 	mov	a,r6
      000D76 20 E0 6F         [24] 3404 	jb	acc.0,00117$
                                   3405 ;	radio/radio.c:1236: goto rxfail;
      000D79                       3406 00108$:
                                   3407 ;	radio/radio.c:1239: if (status & EZRADIOPRO_IPKVALID) {
      000D79 EE               [12] 3408 	mov	a,r6
      000D7A 30 E1 69         [24] 3409 	jnb	acc.1,00116$
                                   3410 ;	radio/radio.c:1240: __data uint8_t len = register_read(EZRADIOPRO_RECEIVED_PACKET_LENGTH);
      000D7D 75 82 4B         [24] 3411 	mov	dpl,#0x4B
      000D80 12r08r4A         [24] 3412 	lcall	_register_read
                                   3413 ;	radio/radio.c:1241: if (len > MAX_PACKET_LENGTH || partial_packet_length > len) {
      000D83 E5 82            [12] 3414 	mov	a,dpl
      000D85 FF               [12] 3415 	mov	r7,a
      000D86 24 03            [12] 3416 	add	a,#0xff - 0xFC
      000D88 40 5E            [24] 3417 	jc	00117$
      000D8A 78r01            [12] 3418 	mov	r0,#_partial_packet_length
      000D8C C3               [12] 3419 	clr	c
      000D8D E2               [24] 3420 	movx	a,@r0
      000D8E F5 F0            [12] 3421 	mov	b,a
      000D90 EF               [12] 3422 	mov	a,r7
      000D91 95 F0            [12] 3423 	subb	a,b
      000D93 40 53            [24] 3424 	jc	00117$
                                   3425 ;	radio/radio.c:1245: if (partial_packet_length < len) {
      000D95 78r01            [12] 3426 	mov	r0,#_partial_packet_length
      000D97 C3               [12] 3427 	clr	c
      000D98 E2               [24] 3428 	movx	a,@r0
      000D99 9F               [12] 3429 	subb	a,r7
      000D9A 50 22            [24] 3430 	jnc	00114$
                                   3431 ;	radio/radio.c:1246: read_receive_fifo(len-partial_packet_length, &radio_buffer[partial_packet_length]);
      000D9C 78r01            [12] 3432 	mov	r0,#_partial_packet_length
      000D9E E2               [24] 3433 	movx	a,@r0
      000D9F 24r00            [12] 3434 	add	a,#_radio_buffer
      000DA1 FD               [12] 3435 	mov	r5,a
      000DA2 E4               [12] 3436 	clr	a
      000DA3 34s00            [12] 3437 	addc	a,#(_radio_buffer >> 8)
      000DA5 FE               [12] 3438 	mov	r6,a
      000DA6 78r01            [12] 3439 	mov	r0,#_partial_packet_length
      000DA8 D3               [12] 3440 	setb	c
      000DA9 E2               [24] 3441 	movx	a,@r0
      000DAA 9F               [12] 3442 	subb	a,r7
      000DAB F4               [12] 3443 	cpl	a
      000DAC FC               [12] 3444 	mov	r4,a
      000DAD C0 07            [24] 3445 	push	ar7
      000DAF C0 05            [24] 3446 	push	ar5
      000DB1 C0 06            [24] 3447 	push	ar6
      000DB3 8C 82            [24] 3448 	mov	dpl,r4
      000DB5 12r08r7E         [24] 3449 	lcall	_read_receive_fifo
      000DB8 15 81            [12] 3450 	dec	sp
      000DBA 15 81            [12] 3451 	dec	sp
      000DBC D0 07            [24] 3452 	pop	ar7
      000DBE                       3453 00114$:
                                   3454 ;	radio/radio.c:1248: receive_packet_length = len;
      000DBE 78r00            [12] 3455 	mov	r0,#_receive_packet_length
      000DC0 EF               [12] 3456 	mov	a,r7
      000DC1 F2               [24] 3457 	movx	@r0,a
                                   3458 ;	radio/radio.c:1251: packet_received = true;
      000DC2 D2*00            [12] 3459 	setb	_packet_received
                                   3460 ;	radio/radio.c:1254: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      000DC4 E4               [12] 3461 	clr	a
      000DC5 C0 E0            [24] 3462 	push	acc
      000DC7 75 82 05         [24] 3463 	mov	dpl,#0x05
      000DCA 12r08r14         [24] 3464 	lcall	_register_write
      000DCD 15 81            [12] 3465 	dec	sp
                                   3466 ;	radio/radio.c:1255: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0);
      000DCF E4               [12] 3467 	clr	a
      000DD0 C0 E0            [24] 3468 	push	acc
      000DD2 75 82 06         [24] 3469 	mov	dpl,#0x06
      000DD5 12r08r14         [24] 3470 	lcall	_register_write
      000DD8 15 81            [12] 3471 	dec	sp
                                   3472 ;	radio/radio.c:1258: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, EZRADIOPRO_PLLON);
      000DDA 74 02            [12] 3473 	mov	a,#0x02
      000DDC C0 E0            [24] 3474 	push	acc
      000DDE 75 82 07         [24] 3475 	mov	dpl,#0x07
      000DE1 12r08r14         [24] 3476 	lcall	_register_write
      000DE4 15 81            [12] 3477 	dec	sp
      000DE6                       3478 00116$:
                                   3479 ;	radio/radio.c:1263: return;
                                   3480 ;	radio/radio.c:1265: rxfail:
      000DE6 80 1E            [24] 3481 	sjmp	00120$
      000DE8                       3482 00117$:
                                   3483 ;	radio/radio.c:1266: if (errors.rx_errors != 0xFFFF) {
      000DE8 78r00            [12] 3484 	mov	r0,#_errors
      000DEA E2               [24] 3485 	movx	a,@r0
      000DEB FE               [12] 3486 	mov	r6,a
      000DEC 08               [12] 3487 	inc	r0
      000DED E2               [24] 3488 	movx	a,@r0
      000DEE FF               [12] 3489 	mov	r7,a
      000DEF BE FF 05         [24] 3490 	cjne	r6,#0xFF,00158$
      000DF2 BF FF 02         [24] 3491 	cjne	r7,#0xFF,00158$
      000DF5 80 0C            [24] 3492 	sjmp	00119$
      000DF7                       3493 00158$:
                                   3494 ;	radio/radio.c:1267: errors.rx_errors++;
      000DF7 0E               [12] 3495 	inc	r6
      000DF8 BE 00 01         [24] 3496 	cjne	r6,#0x00,00159$
      000DFB 0F               [12] 3497 	inc	r7
      000DFC                       3498 00159$:
      000DFC 78r00            [12] 3499 	mov	r0,#_errors
      000DFE EE               [12] 3500 	mov	a,r6
      000DFF F2               [24] 3501 	movx	@r0,a
      000E00 08               [12] 3502 	inc	r0
      000E01 EF               [12] 3503 	mov	a,r7
      000E02 F2               [24] 3504 	movx	@r0,a
      000E03                       3505 00119$:
                                   3506 ;	radio/radio.c:1269: radio_receiver_on();
      000E03 12r03r75         [24] 3507 	lcall	_radio_receiver_on
      000E06                       3508 00120$:
      000E06 D0 D0            [24] 3509 	pop	psw
      000E08 D0 00            [24] 3510 	pop	(0+0)
      000E0A D0 01            [24] 3511 	pop	(0+1)
      000E0C D0 02            [24] 3512 	pop	(0+2)
      000E0E D0 03            [24] 3513 	pop	(0+3)
      000E10 D0 04            [24] 3514 	pop	(0+4)
      000E12 D0 05            [24] 3515 	pop	(0+5)
      000E14 D0 06            [24] 3516 	pop	(0+6)
      000E16 D0 07            [24] 3517 	pop	(0+7)
      000E18 D0 83            [24] 3518 	pop	dph
      000E1A D0 82            [24] 3519 	pop	dpl
      000E1C D0 F0            [24] 3520 	pop	b
      000E1E D0 E0            [24] 3521 	pop	acc
      000E20 D0*00            [24] 3522 	pop	bits
      000E22 32               [24] 3523 	reti
                                   3524 	.area CSEG    (CODE)
                                   3525 	.area CONST   (CODE)
      000000                       3526 ___str_0:
      000000 6F 76 65 72 73 69 7A  3527 	.ascii "oversized packet"
             65 64 20 70 61 63 6B
             65 74
      000010 00                    3528 	.db 0x00
      000011                       3529 _reg_index:
      000011 1C                    3530 	.db #0x1C	; 28
      000012 1F                    3531 	.db #0x1F	; 31
      000013 20                    3532 	.db #0x20	; 32
      000014 21                    3533 	.db #0x21	; 33
      000015 22                    3534 	.db #0x22	; 34
      000016 23                    3535 	.db #0x23	; 35
      000017 24                    3536 	.db #0x24	; 36
      000018 25                    3537 	.db #0x25	; 37
      000019 2A                    3538 	.db #0x2A	; 42
      00001A 6E                    3539 	.db #0x6E	; 110	'n'
      00001B 6F                    3540 	.db #0x6F	; 111	'o'
      00001C 72                    3541 	.db #0x72	; 114	'r'
      00001D                       3542 _air_data_rates:
      00001D 02                    3543 	.db #0x02	; 2
      00001E 04                    3544 	.db #0x04	; 4
      00001F 08                    3545 	.db #0x08	; 8
      000020 10                    3546 	.db #0x10	; 16
      000021 13                    3547 	.db #0x13	; 19
      000022 18                    3548 	.db #0x18	; 24
      000023 20                    3549 	.db #0x20	; 32
      000024 30                    3550 	.db #0x30	; 48	'0'
      000025 40                    3551 	.db #0x40	; 64
      000026 60                    3552 	.db #0x60	; 96
      000027 80                    3553 	.db #0x80	; 128
      000028 C0                    3554 	.db #0xC0	; 192
      000029 FA                    3555 	.db #0xFA	; 250
      00002A                       3556 _reg_table_433:
      00002A 27                    3557 	.db #0x27	; 39
      00002B 27                    3558 	.db #0x27	; 39
      00002C 27                    3559 	.db #0x27	; 39
      00002D 2E                    3560 	.db #0x2E	; 46
      00002E 16                    3561 	.db #0x16	; 22
      00002F 01                    3562 	.db #0x01	; 1
      000030 05                    3563 	.db #0x05	; 5
      000031 0B                    3564 	.db #0x0B	; 11
      000032 9A                    3565 	.db #0x9A	; 154
      000033 88                    3566 	.db #0x88	; 136
      000034 8A                    3567 	.db #0x8A	; 138
      000035 8C                    3568 	.db #0x8C	; 140
      000036 8D                    3569 	.db #0x8D	; 141
      000037 03                    3570 	.db #0x03	; 3
      000038 03                    3571 	.db #0x03	; 3
      000039 03                    3572 	.db #0x03	; 3
      00003A 03                    3573 	.db #0x03	; 3
      00003B 03                    3574 	.db #0x03	; 3
      00003C 03                    3575 	.db #0x03	; 3
      00003D 03                    3576 	.db #0x03	; 3
      00003E 03                    3577 	.db #0x03	; 3
      00003F 03                    3578 	.db #0x03	; 3
      000040 03                    3579 	.db #0x03	; 3
      000041 03                    3580 	.db #0x03	; 3
      000042 03                    3581 	.db #0x03	; 3
      000043 03                    3582 	.db #0x03	; 3
      000044 F4                    3583 	.db #0xF4	; 244
      000045 FA                    3584 	.db #0xFA	; 250
      000046 7D                    3585 	.db #0x7D	; 125
      000047 3F                    3586 	.db #0x3F	; 63
      000048 69                    3587 	.db #0x69	; 105	'i'
      000049 A7                    3588 	.db #0xA7	; 167
      00004A 7D                    3589 	.db #0x7D	; 125
      00004B 53                    3590 	.db #0x53	; 83	'S'
      00004C 5E                    3591 	.db #0x5E	; 94
      00004D 7D                    3592 	.db #0x7D	; 125
      00004E 5E                    3593 	.db #0x5E	; 94
      00004F 3F                    3594 	.db #0x3F	; 63
      000050 30                    3595 	.db #0x30	; 48	'0'
      000051 20                    3596 	.db #0x20	; 32
      000052 00                    3597 	.db #0x00	; 0
      000053 01                    3598 	.db #0x01	; 1
      000054 02                    3599 	.db #0x02	; 2
      000055 01                    3600 	.db #0x01	; 1
      000056 00                    3601 	.db #0x00	; 0
      000057 01                    3602 	.db #0x01	; 1
      000058 01                    3603 	.db #0x01	; 1
      000059 01                    3604 	.db #0x01	; 1
      00005A 01                    3605 	.db #0x01	; 1
      00005B 01                    3606 	.db #0x01	; 1
      00005C 02                    3607 	.db #0x02	; 2
      00005D 02                    3608 	.db #0x02	; 2
      00005E 41                    3609 	.db #0x41	; 65	'A'
      00005F 83                    3610 	.db #0x83	; 131
      000060 06                    3611 	.db #0x06	; 6
      000061 0C                    3612 	.db #0x0C	; 12
      000062 37                    3613 	.db #0x37	; 55	'7'
      000063 C4                    3614 	.db #0xC4	; 196
      000064 06                    3615 	.db #0x06	; 6
      000065 89                    3616 	.db #0x89	; 137
      000066 5D                    3617 	.db #0x5D	; 93
      000067 06                    3618 	.db #0x06	; 6
      000068 5D                    3619 	.db #0x5D	; 93
      000069 0C                    3620 	.db #0x0C	; 12
      00006A AA                    3621 	.db #0xAA	; 170
      00006B 89                    3622 	.db #0x89	; 137
      00006C 12                    3623 	.db #0x12	; 18
      00006D 25                    3624 	.db #0x25	; 37
      00006E 4A                    3625 	.db #0x4A	; 74	'J'
      00006F 4C                    3626 	.db #0x4C	; 76	'L'
      000070 9C                    3627 	.db #0x9C	; 156
      000071 25                    3628 	.db #0x25	; 37
      000072 37                    3629 	.db #0x37	; 55	'7'
      000073 86                    3630 	.db #0x86	; 134
      000074 25                    3631 	.db #0x25	; 37
      000075 86                    3632 	.db #0x86	; 134
      000076 4A                    3633 	.db #0x4A	; 74	'J'
      000077 AB                    3634 	.db #0xAB	; 171
      000078 00                    3635 	.db #0x00	; 0
      000079 01                    3636 	.db #0x01	; 1
      00007A 02                    3637 	.db #0x02	; 2
      00007B 04                    3638 	.db #0x04	; 4
      00007C 02                    3639 	.db #0x02	; 2
      00007D 01                    3640 	.db #0x01	; 1
      00007E 02                    3641 	.db #0x02	; 2
      00007F 03                    3642 	.db #0x03	; 3
      000080 02                    3643 	.db #0x02	; 2
      000081 02                    3644 	.db #0x02	; 2
      000082 02                    3645 	.db #0x02	; 2
      000083 04                    3646 	.db #0x04	; 4
      000084 07                    3647 	.db #0x07	; 7
      000085 85                    3648 	.db #0x85	; 133
      000086 08                    3649 	.db #0x08	; 8
      000087 0E                    3650 	.db #0x0E	; 14
      000088 12                    3651 	.db #0x12	; 18
      000089 72                    3652 	.db #0x72	; 114	'r'
      00008A 8A                    3653 	.db #0x8A	; 138
      00008B 0E                    3654 	.db #0x0E	; 14
      00008C 18                    3655 	.db #0x18	; 24
      00008D BB                    3656 	.db #0xBB	; 187
      00008E 0E                    3657 	.db #0x0E	; 14
      00008F BB                    3658 	.db #0xBB	; 187
      000090 EA                    3659 	.db #0xEA	; 234
      000091 FF                    3660 	.db #0xFF	; 255
      000092 1D                    3661 	.db #0x1D	; 29
      000093 1D                    3662 	.db #0x1D	; 29
      000094 1D                    3663 	.db #0x1D	; 29
      000095 1E                    3664 	.db #0x1E	; 30
      000096 1E                    3665 	.db #0x1E	; 30
      000097 1E                    3666 	.db #0x1E	; 30
      000098 20                    3667 	.db #0x20	; 32
      000099 30                    3668 	.db #0x30	; 48	'0'
      00009A 41                    3669 	.db #0x41	; 65	'A'
      00009B 50                    3670 	.db #0x50	; 80	'P'
      00009C 50                    3671 	.db #0x50	; 80	'P'
      00009D 50                    3672 	.db #0x50	; 80	'P'
      00009E 50                    3673 	.db #0x50	; 80	'P'
      00009F 10                    3674 	.db #0x10	; 16
      0000A0 20                    3675 	.db #0x20	; 32
      0000A1 41                    3676 	.db #0x41	; 65	'A'
      0000A2 83                    3677 	.db #0x83	; 131
      0000A3 9B                    3678 	.db #0x9B	; 155
      0000A4 C4                    3679 	.db #0xC4	; 196
      0000A5 08                    3680 	.db #0x08	; 8
      0000A6 0C                    3681 	.db #0x0C	; 12
      0000A7 10                    3682 	.db #0x10	; 16
      0000A8 18                    3683 	.db #0x18	; 24
      0000A9 20                    3684 	.db #0x20	; 32
      0000AA 31                    3685 	.db #0x31	; 49	'1'
      0000AB 40                    3686 	.db #0x40	; 64
      0000AC 62                    3687 	.db #0x62	; 98	'b'
      0000AD C5                    3688 	.db #0xC5	; 197
      0000AE 89                    3689 	.db #0x89	; 137
      0000AF 12                    3690 	.db #0x12	; 18
      0000B0 A6                    3691 	.db #0xA6	; 166
      0000B1 9C                    3692 	.db #0x9C	; 156
      0000B2 31                    3693 	.db #0x31	; 49	'1'
      0000B3 4A                    3694 	.db #0x4A	; 74	'J'
      0000B4 62                    3695 	.db #0x62	; 98	'b'
      0000B5 93                    3696 	.db #0x93	; 147
      0000B6 C5                    3697 	.db #0xC5	; 197
      0000B7 27                    3698 	.db #0x27	; 39
      0000B8 00                    3699 	.db #0x00	; 0
      0000B9 03                    3700 	.db #0x03	; 3
      0000BA 06                    3701 	.db #0x06	; 6
      0000BB 0D                    3702 	.db #0x0D	; 13
      0000BC 1A                    3703 	.db #0x1A	; 26
      0000BD 1E                    3704 	.db #0x1E	; 30
      0000BE 26                    3705 	.db #0x26	; 38
      0000BF 33                    3706 	.db #0x33	; 51	'3'
      0000C0 4D                    3707 	.db #0x4D	; 77	'M'
      0000C1 66                    3708 	.db #0x66	; 102	'f'
      0000C2 9A                    3709 	.db #0x9A	; 154
      0000C3 CD                    3710 	.db #0xCD	; 205
      0000C4 FE                    3711 	.db #0xFE	; 254
      0000C5 FE                    3712 	.db #0xFE	; 254
      0000C6                       3713 _reg_table_470:
      0000C6 2B                    3714 	.db #0x2B	; 43
      0000C7 2B                    3715 	.db #0x2B	; 43
      0000C8 2B                    3716 	.db #0x2B	; 43
      0000C9 2E                    3717 	.db #0x2E	; 46
      0000CA 16                    3718 	.db #0x16	; 22
      0000CB 01                    3719 	.db #0x01	; 1
      0000CC 05                    3720 	.db #0x05	; 5
      0000CD 0B                    3721 	.db #0x0B	; 11
      0000CE 9A                    3722 	.db #0x9A	; 154
      0000CF 88                    3723 	.db #0x88	; 136
      0000D0 8A                    3724 	.db #0x8A	; 138
      0000D1 8C                    3725 	.db #0x8C	; 140
      0000D2 8D                    3726 	.db #0x8D	; 141
      0000D3 03                    3727 	.db #0x03	; 3
      0000D4 03                    3728 	.db #0x03	; 3
      0000D5 03                    3729 	.db #0x03	; 3
      0000D6 03                    3730 	.db #0x03	; 3
      0000D7 03                    3731 	.db #0x03	; 3
      0000D8 03                    3732 	.db #0x03	; 3
      0000D9 03                    3733 	.db #0x03	; 3
      0000DA 03                    3734 	.db #0x03	; 3
      0000DB 03                    3735 	.db #0x03	; 3
      0000DC 03                    3736 	.db #0x03	; 3
      0000DD 03                    3737 	.db #0x03	; 3
      0000DE 03                    3738 	.db #0x03	; 3
      0000DF 03                    3739 	.db #0x03	; 3
      0000E0 F4                    3740 	.db #0xF4	; 244
      0000E1 FA                    3741 	.db #0xFA	; 250
      0000E2 7D                    3742 	.db #0x7D	; 125
      0000E3 3F                    3743 	.db #0x3F	; 63
      0000E4 69                    3744 	.db #0x69	; 105	'i'
      0000E5 A7                    3745 	.db #0xA7	; 167
      0000E6 7D                    3746 	.db #0x7D	; 125
      0000E7 53                    3747 	.db #0x53	; 83	'S'
      0000E8 5E                    3748 	.db #0x5E	; 94
      0000E9 7D                    3749 	.db #0x7D	; 125
      0000EA 5E                    3750 	.db #0x5E	; 94
      0000EB 3F                    3751 	.db #0x3F	; 63
      0000EC 30                    3752 	.db #0x30	; 48	'0'
      0000ED 20                    3753 	.db #0x20	; 32
      0000EE 00                    3754 	.db #0x00	; 0
      0000EF 01                    3755 	.db #0x01	; 1
      0000F0 02                    3756 	.db #0x02	; 2
      0000F1 01                    3757 	.db #0x01	; 1
      0000F2 00                    3758 	.db #0x00	; 0
      0000F3 01                    3759 	.db #0x01	; 1
      0000F4 01                    3760 	.db #0x01	; 1
      0000F5 01                    3761 	.db #0x01	; 1
      0000F6 01                    3762 	.db #0x01	; 1
      0000F7 01                    3763 	.db #0x01	; 1
      0000F8 02                    3764 	.db #0x02	; 2
      0000F9 02                    3765 	.db #0x02	; 2
      0000FA 41                    3766 	.db #0x41	; 65	'A'
      0000FB 83                    3767 	.db #0x83	; 131
      0000FC 06                    3768 	.db #0x06	; 6
      0000FD 0C                    3769 	.db #0x0C	; 12
      0000FE 37                    3770 	.db #0x37	; 55	'7'
      0000FF C4                    3771 	.db #0xC4	; 196
      000100 06                    3772 	.db #0x06	; 6
      000101 89                    3773 	.db #0x89	; 137
      000102 5D                    3774 	.db #0x5D	; 93
      000103 06                    3775 	.db #0x06	; 6
      000104 5D                    3776 	.db #0x5D	; 93
      000105 0C                    3777 	.db #0x0C	; 12
      000106 AA                    3778 	.db #0xAA	; 170
      000107 89                    3779 	.db #0x89	; 137
      000108 12                    3780 	.db #0x12	; 18
      000109 25                    3781 	.db #0x25	; 37
      00010A 4A                    3782 	.db #0x4A	; 74	'J'
      00010B 4C                    3783 	.db #0x4C	; 76	'L'
      00010C 9C                    3784 	.db #0x9C	; 156
      00010D 25                    3785 	.db #0x25	; 37
      00010E 37                    3786 	.db #0x37	; 55	'7'
      00010F 86                    3787 	.db #0x86	; 134
      000110 25                    3788 	.db #0x25	; 37
      000111 86                    3789 	.db #0x86	; 134
      000112 4A                    3790 	.db #0x4A	; 74	'J'
      000113 AB                    3791 	.db #0xAB	; 171
      000114 00                    3792 	.db #0x00	; 0
      000115 01                    3793 	.db #0x01	; 1
      000116 02                    3794 	.db #0x02	; 2
      000117 04                    3795 	.db #0x04	; 4
      000118 02                    3796 	.db #0x02	; 2
      000119 01                    3797 	.db #0x01	; 1
      00011A 02                    3798 	.db #0x02	; 2
      00011B 03                    3799 	.db #0x03	; 3
      00011C 02                    3800 	.db #0x02	; 2
      00011D 02                    3801 	.db #0x02	; 2
      00011E 02                    3802 	.db #0x02	; 2
      00011F 04                    3803 	.db #0x04	; 4
      000120 07                    3804 	.db #0x07	; 7
      000121 85                    3805 	.db #0x85	; 133
      000122 08                    3806 	.db #0x08	; 8
      000123 0E                    3807 	.db #0x0E	; 14
      000124 12                    3808 	.db #0x12	; 18
      000125 72                    3809 	.db #0x72	; 114	'r'
      000126 8A                    3810 	.db #0x8A	; 138
      000127 0E                    3811 	.db #0x0E	; 14
      000128 18                    3812 	.db #0x18	; 24
      000129 BB                    3813 	.db #0xBB	; 187
      00012A 0E                    3814 	.db #0x0E	; 14
      00012B BB                    3815 	.db #0xBB	; 187
      00012C EA                    3816 	.db #0xEA	; 234
      00012D FF                    3817 	.db #0xFF	; 255
      00012E 1E                    3818 	.db #0x1E	; 30
      00012F 1E                    3819 	.db #0x1E	; 30
      000130 1E                    3820 	.db #0x1E	; 30
      000131 21                    3821 	.db #0x21	; 33
      000132 21                    3822 	.db #0x21	; 33
      000133 21                    3823 	.db #0x21	; 33
      000134 21                    3824 	.db #0x21	; 33
      000135 30                    3825 	.db #0x30	; 48	'0'
      000136 41                    3826 	.db #0x41	; 65	'A'
      000137 50                    3827 	.db #0x50	; 80	'P'
      000138 50                    3828 	.db #0x50	; 80	'P'
      000139 50                    3829 	.db #0x50	; 80	'P'
      00013A 50                    3830 	.db #0x50	; 80	'P'
      00013B 10                    3831 	.db #0x10	; 16
      00013C 20                    3832 	.db #0x20	; 32
      00013D 41                    3833 	.db #0x41	; 65	'A'
      00013E 83                    3834 	.db #0x83	; 131
      00013F 9B                    3835 	.db #0x9B	; 155
      000140 C4                    3836 	.db #0xC4	; 196
      000141 08                    3837 	.db #0x08	; 8
      000142 0C                    3838 	.db #0x0C	; 12
      000143 10                    3839 	.db #0x10	; 16
      000144 18                    3840 	.db #0x18	; 24
      000145 20                    3841 	.db #0x20	; 32
      000146 31                    3842 	.db #0x31	; 49	'1'
      000147 40                    3843 	.db #0x40	; 64
      000148 62                    3844 	.db #0x62	; 98	'b'
      000149 C5                    3845 	.db #0xC5	; 197
      00014A 89                    3846 	.db #0x89	; 137
      00014B 12                    3847 	.db #0x12	; 18
      00014C A6                    3848 	.db #0xA6	; 166
      00014D 9C                    3849 	.db #0x9C	; 156
      00014E 31                    3850 	.db #0x31	; 49	'1'
      00014F 4A                    3851 	.db #0x4A	; 74	'J'
      000150 62                    3852 	.db #0x62	; 98	'b'
      000151 93                    3853 	.db #0x93	; 147
      000152 C5                    3854 	.db #0xC5	; 197
      000153 27                    3855 	.db #0x27	; 39
      000154 00                    3856 	.db #0x00	; 0
      000155 03                    3857 	.db #0x03	; 3
      000156 06                    3858 	.db #0x06	; 6
      000157 0D                    3859 	.db #0x0D	; 13
      000158 1A                    3860 	.db #0x1A	; 26
      000159 1E                    3861 	.db #0x1E	; 30
      00015A 26                    3862 	.db #0x26	; 38
      00015B 33                    3863 	.db #0x33	; 51	'3'
      00015C 4D                    3864 	.db #0x4D	; 77	'M'
      00015D 66                    3865 	.db #0x66	; 102	'f'
      00015E 9A                    3866 	.db #0x9A	; 154
      00015F CD                    3867 	.db #0xCD	; 205
      000160 FE                    3868 	.db #0xFE	; 254
      000161 FE                    3869 	.db #0xFE	; 254
      000162                       3870 _reg_table_868:
      000162 01                    3871 	.db #0x01	; 1
      000163 01                    3872 	.db #0x01	; 1
      000164 01                    3873 	.db #0x01	; 1
      000165 01                    3874 	.db #0x01	; 1
      000166 01                    3875 	.db #0x01	; 1
      000167 01                    3876 	.db #0x01	; 1
      000168 05                    3877 	.db #0x05	; 5
      000169 0B                    3878 	.db #0x0B	; 11
      00016A 9A                    3879 	.db #0x9A	; 154
      00016B 88                    3880 	.db #0x88	; 136
      00016C 8A                    3881 	.db #0x8A	; 138
      00016D 8C                    3882 	.db #0x8C	; 140
      00016E 8D                    3883 	.db #0x8D	; 141
      00016F 03                    3884 	.db #0x03	; 3
      000170 03                    3885 	.db #0x03	; 3
      000171 03                    3886 	.db #0x03	; 3
      000172 03                    3887 	.db #0x03	; 3
      000173 03                    3888 	.db #0x03	; 3
      000174 03                    3889 	.db #0x03	; 3
      000175 03                    3890 	.db #0x03	; 3
      000176 03                    3891 	.db #0x03	; 3
      000177 03                    3892 	.db #0x03	; 3
      000178 03                    3893 	.db #0x03	; 3
      000179 03                    3894 	.db #0x03	; 3
      00017A 03                    3895 	.db #0x03	; 3
      00017B 03                    3896 	.db #0x03	; 3
      00017C D0                    3897 	.db #0xD0	; 208
      00017D E8                    3898 	.db #0xE8	; 232
      00017E F4                    3899 	.db #0xF4	; 244
      00017F FA                    3900 	.db #0xFA	; 250
      000180 D3                    3901 	.db #0xD3	; 211
      000181 A7                    3902 	.db #0xA7	; 167
      000182 7D                    3903 	.db #0x7D	; 125
      000183 53                    3904 	.db #0x53	; 83	'S'
      000184 5E                    3905 	.db #0x5E	; 94
      000185 7D                    3906 	.db #0x7D	; 125
      000186 5E                    3907 	.db #0x5E	; 94
      000187 3F                    3908 	.db #0x3F	; 63
      000188 30                    3909 	.db #0x30	; 48	'0'
      000189 E0                    3910 	.db #0xE0	; 224
      00018A 60                    3911 	.db #0x60	; 96
      00018B 20                    3912 	.db #0x20	; 32
      00018C 00                    3913 	.db #0x00	; 0
      00018D 00                    3914 	.db #0x00	; 0
      00018E 00                    3915 	.db #0x00	; 0
      00018F 01                    3916 	.db #0x01	; 1
      000190 01                    3917 	.db #0x01	; 1
      000191 01                    3918 	.db #0x01	; 1
      000192 01                    3919 	.db #0x01	; 1
      000193 01                    3920 	.db #0x01	; 1
      000194 02                    3921 	.db #0x02	; 2
      000195 02                    3922 	.db #0x02	; 2
      000196 10                    3923 	.db #0x10	; 16
      000197 20                    3924 	.db #0x20	; 32
      000198 41                    3925 	.db #0x41	; 65	'A'
      000199 83                    3926 	.db #0x83	; 131
      00019A 9B                    3927 	.db #0x9B	; 155
      00019B C4                    3928 	.db #0xC4	; 196
      00019C 06                    3929 	.db #0x06	; 6
      00019D 89                    3930 	.db #0x89	; 137
      00019E 5D                    3931 	.db #0x5D	; 93
      00019F 06                    3932 	.db #0x06	; 6
      0001A0 5D                    3933 	.db #0x5D	; 93
      0001A1 0C                    3934 	.db #0x0C	; 12
      0001A2 AA                    3935 	.db #0xAA	; 170
      0001A3 62                    3936 	.db #0x62	; 98	'b'
      0001A4 C5                    3937 	.db #0xC5	; 197
      0001A5 89                    3938 	.db #0x89	; 137
      0001A6 12                    3939 	.db #0x12	; 18
      0001A7 A6                    3940 	.db #0xA6	; 166
      0001A8 9C                    3941 	.db #0x9C	; 156
      0001A9 25                    3942 	.db #0x25	; 37
      0001AA 37                    3943 	.db #0x37	; 55	'7'
      0001AB 86                    3944 	.db #0x86	; 134
      0001AC 25                    3945 	.db #0x25	; 37
      0001AD 86                    3946 	.db #0x86	; 134
      0001AE 4A                    3947 	.db #0x4A	; 74	'J'
      0001AF AB                    3948 	.db #0xAB	; 171
      0001B0 00                    3949 	.db #0x00	; 0
      0001B1 00                    3950 	.db #0x00	; 0
      0001B2 00                    3951 	.db #0x00	; 0
      0001B3 01                    3952 	.db #0x01	; 1
      0001B4 01                    3953 	.db #0x01	; 1
      0001B5 01                    3954 	.db #0x01	; 1
      0001B6 02                    3955 	.db #0x02	; 2
      0001B7 03                    3956 	.db #0x03	; 3
      0001B8 02                    3957 	.db #0x02	; 2
      0001B9 02                    3958 	.db #0x02	; 2
      0001BA 02                    3959 	.db #0x02	; 2
      0001BB 04                    3960 	.db #0x04	; 4
      0001BC 07                    3961 	.db #0x07	; 7
      0001BD 23                    3962 	.db #0x23	; 35
      0001BE 44                    3963 	.db #0x44	; 68	'D'
      0001BF 85                    3964 	.db #0x85	; 133
      0001C0 08                    3965 	.db #0x08	; 8
      0001C1 39                    3966 	.db #0x39	; 57	'9'
      0001C2 8A                    3967 	.db #0x8A	; 138
      0001C3 0E                    3968 	.db #0x0E	; 14
      0001C4 18                    3969 	.db #0x18	; 24
      0001C5 BB                    3970 	.db #0xBB	; 187
      0001C6 0E                    3971 	.db #0x0E	; 14
      0001C7 BB                    3972 	.db #0xBB	; 187
      0001C8 EA                    3973 	.db #0xEA	; 234
      0001C9 FF                    3974 	.db #0xFF	; 255
      0001CA 1C                    3975 	.db #0x1C	; 28
      0001CB 1C                    3976 	.db #0x1C	; 28
      0001CC 1C                    3977 	.db #0x1C	; 28
      0001CD 1C                    3978 	.db #0x1C	; 28
      0001CE 1C                    3979 	.db #0x1C	; 28
      0001CF 1E                    3980 	.db #0x1E	; 30
      0001D0 20                    3981 	.db #0x20	; 32
      0001D1 30                    3982 	.db #0x30	; 48	'0'
      0001D2 41                    3983 	.db #0x41	; 65	'A'
      0001D3 50                    3984 	.db #0x50	; 80	'P'
      0001D4 50                    3985 	.db #0x50	; 80	'P'
      0001D5 50                    3986 	.db #0x50	; 80	'P'
      0001D6 50                    3987 	.db #0x50	; 80	'P'
      0001D7 10                    3988 	.db #0x10	; 16
      0001D8 20                    3989 	.db #0x20	; 32
      0001D9 41                    3990 	.db #0x41	; 65	'A'
      0001DA 83                    3991 	.db #0x83	; 131
      0001DB 9B                    3992 	.db #0x9B	; 155
      0001DC C4                    3993 	.db #0xC4	; 196
      0001DD 08                    3994 	.db #0x08	; 8
      0001DE 0C                    3995 	.db #0x0C	; 12
      0001DF 10                    3996 	.db #0x10	; 16
      0001E0 18                    3997 	.db #0x18	; 24
      0001E1 20                    3998 	.db #0x20	; 32
      0001E2 31                    3999 	.db #0x31	; 49	'1'
      0001E3 40                    4000 	.db #0x40	; 64
      0001E4 62                    4001 	.db #0x62	; 98	'b'
      0001E5 C5                    4002 	.db #0xC5	; 197
      0001E6 89                    4003 	.db #0x89	; 137
      0001E7 12                    4004 	.db #0x12	; 18
      0001E8 A6                    4005 	.db #0xA6	; 166
      0001E9 9C                    4006 	.db #0x9C	; 156
      0001EA 31                    4007 	.db #0x31	; 49	'1'
      0001EB 4A                    4008 	.db #0x4A	; 74	'J'
      0001EC 62                    4009 	.db #0x62	; 98	'b'
      0001ED 93                    4010 	.db #0x93	; 147
      0001EE C5                    4011 	.db #0xC5	; 197
      0001EF 27                    4012 	.db #0x27	; 39
      0001F0 00                    4013 	.db #0x00	; 0
      0001F1 03                    4014 	.db #0x03	; 3
      0001F2 06                    4015 	.db #0x06	; 6
      0001F3 0D                    4016 	.db #0x0D	; 13
      0001F4 1A                    4017 	.db #0x1A	; 26
      0001F5 1E                    4018 	.db #0x1E	; 30
      0001F6 26                    4019 	.db #0x26	; 38
      0001F7 33                    4020 	.db #0x33	; 51	'3'
      0001F8 4D                    4021 	.db #0x4D	; 77	'M'
      0001F9 66                    4022 	.db #0x66	; 102	'f'
      0001FA 9A                    4023 	.db #0x9A	; 154
      0001FB CD                    4024 	.db #0xCD	; 205
      0001FC FE                    4025 	.db #0xFE	; 254
      0001FD FE                    4026 	.db #0xFE	; 254
      0001FE                       4027 _reg_table_915:
      0001FE 01                    4028 	.db #0x01	; 1
      0001FF 01                    4029 	.db #0x01	; 1
      000200 01                    4030 	.db #0x01	; 1
      000201 01                    4031 	.db #0x01	; 1
      000202 01                    4032 	.db #0x01	; 1
      000203 01                    4033 	.db #0x01	; 1
      000204 05                    4034 	.db #0x05	; 5
      000205 0B                    4035 	.db #0x0B	; 11
      000206 9A                    4036 	.db #0x9A	; 154
      000207 88                    4037 	.db #0x88	; 136
      000208 8A                    4038 	.db #0x8A	; 138
      000209 8C                    4039 	.db #0x8C	; 140
      00020A 8D                    4040 	.db #0x8D	; 141
      00020B 03                    4041 	.db #0x03	; 3
      00020C 03                    4042 	.db #0x03	; 3
      00020D 03                    4043 	.db #0x03	; 3
      00020E 03                    4044 	.db #0x03	; 3
      00020F 03                    4045 	.db #0x03	; 3
      000210 03                    4046 	.db #0x03	; 3
      000211 03                    4047 	.db #0x03	; 3
      000212 03                    4048 	.db #0x03	; 3
      000213 03                    4049 	.db #0x03	; 3
      000214 03                    4050 	.db #0x03	; 3
      000215 03                    4051 	.db #0x03	; 3
      000216 03                    4052 	.db #0x03	; 3
      000217 03                    4053 	.db #0x03	; 3
      000218 D0                    4054 	.db #0xD0	; 208
      000219 E8                    4055 	.db #0xE8	; 232
      00021A F4                    4056 	.db #0xF4	; 244
      00021B FA                    4057 	.db #0xFA	; 250
      00021C D3                    4058 	.db #0xD3	; 211
      00021D A7                    4059 	.db #0xA7	; 167
      00021E 7D                    4060 	.db #0x7D	; 125
      00021F 53                    4061 	.db #0x53	; 83	'S'
      000220 5E                    4062 	.db #0x5E	; 94
      000221 7D                    4063 	.db #0x7D	; 125
      000222 5E                    4064 	.db #0x5E	; 94
      000223 3F                    4065 	.db #0x3F	; 63
      000224 30                    4066 	.db #0x30	; 48	'0'
      000225 E0                    4067 	.db #0xE0	; 224
      000226 60                    4068 	.db #0x60	; 96
      000227 20                    4069 	.db #0x20	; 32
      000228 00                    4070 	.db #0x00	; 0
      000229 00                    4071 	.db #0x00	; 0
      00022A 00                    4072 	.db #0x00	; 0
      00022B 01                    4073 	.db #0x01	; 1
      00022C 01                    4074 	.db #0x01	; 1
      00022D 01                    4075 	.db #0x01	; 1
      00022E 01                    4076 	.db #0x01	; 1
      00022F 01                    4077 	.db #0x01	; 1
      000230 02                    4078 	.db #0x02	; 2
      000231 02                    4079 	.db #0x02	; 2
      000232 10                    4080 	.db #0x10	; 16
      000233 20                    4081 	.db #0x20	; 32
      000234 41                    4082 	.db #0x41	; 65	'A'
      000235 83                    4083 	.db #0x83	; 131
      000236 9B                    4084 	.db #0x9B	; 155
      000237 C4                    4085 	.db #0xC4	; 196
      000238 06                    4086 	.db #0x06	; 6
      000239 89                    4087 	.db #0x89	; 137
      00023A 5D                    4088 	.db #0x5D	; 93
      00023B 06                    4089 	.db #0x06	; 6
      00023C 5D                    4090 	.db #0x5D	; 93
      00023D 0C                    4091 	.db #0x0C	; 12
      00023E AA                    4092 	.db #0xAA	; 170
      00023F 62                    4093 	.db #0x62	; 98	'b'
      000240 C5                    4094 	.db #0xC5	; 197
      000241 89                    4095 	.db #0x89	; 137
      000242 12                    4096 	.db #0x12	; 18
      000243 A6                    4097 	.db #0xA6	; 166
      000244 9C                    4098 	.db #0x9C	; 156
      000245 25                    4099 	.db #0x25	; 37
      000246 37                    4100 	.db #0x37	; 55	'7'
      000247 86                    4101 	.db #0x86	; 134
      000248 25                    4102 	.db #0x25	; 37
      000249 86                    4103 	.db #0x86	; 134
      00024A 4A                    4104 	.db #0x4A	; 74	'J'
      00024B AB                    4105 	.db #0xAB	; 171
      00024C 00                    4106 	.db #0x00	; 0
      00024D 00                    4107 	.db #0x00	; 0
      00024E 00                    4108 	.db #0x00	; 0
      00024F 01                    4109 	.db #0x01	; 1
      000250 01                    4110 	.db #0x01	; 1
      000251 01                    4111 	.db #0x01	; 1
      000252 02                    4112 	.db #0x02	; 2
      000253 03                    4113 	.db #0x03	; 3
      000254 02                    4114 	.db #0x02	; 2
      000255 02                    4115 	.db #0x02	; 2
      000256 02                    4116 	.db #0x02	; 2
      000257 04                    4117 	.db #0x04	; 4
      000258 07                    4118 	.db #0x07	; 7
      000259 23                    4119 	.db #0x23	; 35
      00025A 44                    4120 	.db #0x44	; 68	'D'
      00025B 85                    4121 	.db #0x85	; 133
      00025C 08                    4122 	.db #0x08	; 8
      00025D 39                    4123 	.db #0x39	; 57	'9'
      00025E 8A                    4124 	.db #0x8A	; 138
      00025F 0E                    4125 	.db #0x0E	; 14
      000260 18                    4126 	.db #0x18	; 24
      000261 BB                    4127 	.db #0xBB	; 187
      000262 0E                    4128 	.db #0x0E	; 14
      000263 BB                    4129 	.db #0xBB	; 187
      000264 EA                    4130 	.db #0xEA	; 234
      000265 FF                    4131 	.db #0xFF	; 255
      000266 1E                    4132 	.db #0x1E	; 30
      000267 1E                    4133 	.db #0x1E	; 30
      000268 1E                    4134 	.db #0x1E	; 30
      000269 1E                    4135 	.db #0x1E	; 30
      00026A 1E                    4136 	.db #0x1E	; 30
      00026B 1E                    4137 	.db #0x1E	; 30
      00026C 20                    4138 	.db #0x20	; 32
      00026D 30                    4139 	.db #0x30	; 48	'0'
      00026E 41                    4140 	.db #0x41	; 65	'A'
      00026F 50                    4141 	.db #0x50	; 80	'P'
      000270 50                    4142 	.db #0x50	; 80	'P'
      000271 50                    4143 	.db #0x50	; 80	'P'
      000272 50                    4144 	.db #0x50	; 80	'P'
      000273 10                    4145 	.db #0x10	; 16
      000274 20                    4146 	.db #0x20	; 32
      000275 41                    4147 	.db #0x41	; 65	'A'
      000276 83                    4148 	.db #0x83	; 131
      000277 9B                    4149 	.db #0x9B	; 155
      000278 C4                    4150 	.db #0xC4	; 196
      000279 08                    4151 	.db #0x08	; 8
      00027A 0C                    4152 	.db #0x0C	; 12
      00027B 10                    4153 	.db #0x10	; 16
      00027C 18                    4154 	.db #0x18	; 24
      00027D 20                    4155 	.db #0x20	; 32
      00027E 31                    4156 	.db #0x31	; 49	'1'
      00027F 40                    4157 	.db #0x40	; 64
      000280 62                    4158 	.db #0x62	; 98	'b'
      000281 C5                    4159 	.db #0xC5	; 197
      000282 89                    4160 	.db #0x89	; 137
      000283 12                    4161 	.db #0x12	; 18
      000284 A6                    4162 	.db #0xA6	; 166
      000285 9C                    4163 	.db #0x9C	; 156
      000286 31                    4164 	.db #0x31	; 49	'1'
      000287 4A                    4165 	.db #0x4A	; 74	'J'
      000288 62                    4166 	.db #0x62	; 98	'b'
      000289 93                    4167 	.db #0x93	; 147
      00028A C5                    4168 	.db #0xC5	; 197
      00028B 27                    4169 	.db #0x27	; 39
      00028C 00                    4170 	.db #0x00	; 0
      00028D 03                    4171 	.db #0x03	; 3
      00028E 06                    4172 	.db #0x06	; 6
      00028F 0D                    4173 	.db #0x0D	; 13
      000290 1A                    4174 	.db #0x1A	; 26
      000291 1E                    4175 	.db #0x1E	; 30
      000292 26                    4176 	.db #0x26	; 38
      000293 33                    4177 	.db #0x33	; 51	'3'
      000294 4D                    4178 	.db #0x4D	; 77	'M'
      000295 66                    4179 	.db #0x66	; 102	'f'
      000296 9A                    4180 	.db #0x9A	; 154
      000297 CD                    4181 	.db #0xCD	; 205
      000298 FE                    4182 	.db #0xFE	; 254
      000299 FE                    4183 	.db #0xFE	; 254
      00029A                       4184 _power_levels:
      00029A 11                    4185 	.db #0x11	; 17
      00029B 14                    4186 	.db #0x14	; 20
      00029C 1B                    4187 	.db #0x1B	; 27
      00029D 1D                    4188 	.db #0x1D	; 29
      00029E 1E                    4189 	.db #0x1E	; 30
                                   4190 	.area XINIT   (CODE)
                                   4191 	.area CABS    (ABS,CODE)
