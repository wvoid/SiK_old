                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Sep  7 2022) (Linux)
                                      4 ; This file was generated Wed Sep  7 10:05:07 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module parameters
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _parameter_info
                                     13 	.globl _param_set_default_encryption_key
                                     14 	.globl _convert_to_hex
                                     15 	.globl _read_hex_nibble
                                     16 	.globl _write_params
                                     17 	.globl _read_params
                                     18 	.globl _crc16
                                     19 	.globl _radio_get_transmit_power
                                     20 	.globl _radio_set_transmit_power
                                     21 	.globl _printfl
                                     22 	.globl _flash_write_scratch
                                     23 	.globl _flash_read_scratch
                                     24 	.globl _flash_erase_scratch
                                     25 	.globl _serial_device_valid_speed
                                     26 	.globl _strlen
                                     27 	.globl _strcmp
                                     28 	.globl _memcpy
                                     29 	.globl _NSS1
                                     30 	.globl _IRQ
                                     31 	.globl _PIN_ENABLE
                                     32 	.globl _PIN_CONFIG
                                     33 	.globl _LED_GREEN
                                     34 	.globl _LED_RED
                                     35 	.globl _SPI1EN
                                     36 	.globl _TXBMT1
                                     37 	.globl _NSS1MD0
                                     38 	.globl _NSS1MD1
                                     39 	.globl _RXOVRN1
                                     40 	.globl _MODF1
                                     41 	.globl _WCOL1
                                     42 	.globl _SPIF1
                                     43 	.globl _SPI0EN
                                     44 	.globl _TXBMT0
                                     45 	.globl _NSS0MD0
                                     46 	.globl _NSS0MD1
                                     47 	.globl _RXOVRN0
                                     48 	.globl _MODF0
                                     49 	.globl _WCOL0
                                     50 	.globl _SPIF0
                                     51 	.globl _AD0CM0
                                     52 	.globl _AD0CM1
                                     53 	.globl _AD0CM2
                                     54 	.globl _AD0WINT
                                     55 	.globl _AD0BUSY
                                     56 	.globl _AD0INT
                                     57 	.globl _BURSTEN
                                     58 	.globl _AD0EN
                                     59 	.globl _CCF0
                                     60 	.globl _CCF1
                                     61 	.globl _CCF2
                                     62 	.globl _CCF3
                                     63 	.globl _CCF4
                                     64 	.globl _CCF5
                                     65 	.globl _CR
                                     66 	.globl _CF
                                     67 	.globl _P
                                     68 	.globl _F1
                                     69 	.globl _OV
                                     70 	.globl _RS0
                                     71 	.globl _RS1
                                     72 	.globl _F0
                                     73 	.globl _AC
                                     74 	.globl _CY
                                     75 	.globl _T2XCLK
                                     76 	.globl _T2RCLK
                                     77 	.globl _TR2
                                     78 	.globl _T2SPLIT
                                     79 	.globl _TF2CEN
                                     80 	.globl _TF2LEN
                                     81 	.globl _TF2L
                                     82 	.globl _TF2H
                                     83 	.globl _SI
                                     84 	.globl _ACK
                                     85 	.globl _ARBLOST
                                     86 	.globl _ACKRQ
                                     87 	.globl _STO
                                     88 	.globl _STA
                                     89 	.globl _TXMODE
                                     90 	.globl _MASTER
                                     91 	.globl _PX0
                                     92 	.globl _PT0
                                     93 	.globl _PX1
                                     94 	.globl _PT1
                                     95 	.globl _PS0
                                     96 	.globl _PT2
                                     97 	.globl _PSPI0
                                     98 	.globl _EX0
                                     99 	.globl _ET0
                                    100 	.globl _EX1
                                    101 	.globl _ET1
                                    102 	.globl _ES0
                                    103 	.globl _ET2
                                    104 	.globl _ESPI0
                                    105 	.globl _EA
                                    106 	.globl _RI0
                                    107 	.globl _TI0
                                    108 	.globl _RB80
                                    109 	.globl _TB80
                                    110 	.globl _REN0
                                    111 	.globl _MCE0
                                    112 	.globl _S0MODE
                                    113 	.globl _IT0
                                    114 	.globl _IE0
                                    115 	.globl _IT1
                                    116 	.globl _IE1
                                    117 	.globl _TR0
                                    118 	.globl _TF0
                                    119 	.globl _TR1
                                    120 	.globl _TF1
                                    121 	.globl __XPAGE
                                    122 	.globl _PCA0CP4
                                    123 	.globl _PCA0CP0
                                    124 	.globl _PCA0
                                    125 	.globl _PCA0CP3
                                    126 	.globl _PCA0CP2
                                    127 	.globl _PCA0CP1
                                    128 	.globl _PCA0CP5
                                    129 	.globl _TMR2
                                    130 	.globl _TMR2RL
                                    131 	.globl _ADC0LT
                                    132 	.globl _ADC0GT
                                    133 	.globl _ADC0
                                    134 	.globl _TMR3
                                    135 	.globl _TMR3RL
                                    136 	.globl _TOFF
                                    137 	.globl _DP
                                    138 	.globl _PCLKEN
                                    139 	.globl _CLKMODE
                                    140 	.globl _P7MDOUT
                                    141 	.globl _P6MDOUT
                                    142 	.globl _P5MDOUT
                                    143 	.globl _P4MDOUT
                                    144 	.globl _PCLKACT
                                    145 	.globl _P6MDIN
                                    146 	.globl _P5MDIN
                                    147 	.globl _P4MDIN
                                    148 	.globl _P3MDIN
                                    149 	.globl _DEVICEID
                                    150 	.globl _REVID
                                    151 	.globl _HWID
                                    152 	.globl _P7
                                    153 	.globl _P6
                                    154 	.globl _P5
                                    155 	.globl _P4
                                    156 	.globl _TOFFH
                                    157 	.globl _TOFFL
                                    158 	.globl _ADC0TK
                                    159 	.globl _ADC0PWR
                                    160 	.globl _IREF0CF
                                    161 	.globl _FLSCL
                                    162 	.globl _OSCICL
                                    163 	.globl _OSCIFL
                                    164 	.globl _P3MDOUT
                                    165 	.globl _LCD0BUFCF
                                    166 	.globl _P7DRV
                                    167 	.globl _P6DRV
                                    168 	.globl _P2DRV
                                    169 	.globl _P1DRV
                                    170 	.globl _P0DRV
                                    171 	.globl _P5DRV
                                    172 	.globl _P4DRV
                                    173 	.globl _P3DRV
                                    174 	.globl _LCD0BUFCN
                                    175 	.globl _CRC0CNT
                                    176 	.globl _CRC0AUTO
                                    177 	.globl _CRC0FLIP
                                    178 	.globl _CRC0IN
                                    179 	.globl _CRC0CN
                                    180 	.globl _CRC0DAT
                                    181 	.globl _SFRPGCN
                                    182 	.globl _DC0RDY
                                    183 	.globl _PC0INT1
                                    184 	.globl _PC0INT0
                                    185 	.globl _PC0DCH
                                    186 	.globl _PC0DCL
                                    187 	.globl _SPI1CN
                                    188 	.globl _AES0YOUT
                                    189 	.globl _PC0HIST
                                    190 	.globl _PC0CMP1H
                                    191 	.globl _PC0CMP1M
                                    192 	.globl _PC0CMP1L
                                    193 	.globl _AES0KBA
                                    194 	.globl _AES0DBA
                                    195 	.globl _AES0KIN
                                    196 	.globl _AES0XIN
                                    197 	.globl _AES0BIN
                                    198 	.globl _AES0DCFG
                                    199 	.globl _AES0BCFG
                                    200 	.globl _PC0TH
                                    201 	.globl _PC0CMP0H
                                    202 	.globl _PC0CMP0M
                                    203 	.globl _PC0CMP0L
                                    204 	.globl _PC0CTR1H
                                    205 	.globl _PC0CTR1M
                                    206 	.globl _PC0CTR1L
                                    207 	.globl _PC0CTR0H
                                    208 	.globl _PC0CTR0M
                                    209 	.globl _PC0CTR0L
                                    210 	.globl _PC0MD
                                    211 	.globl _PC0PCF
                                    212 	.globl _DMA0NMD
                                    213 	.globl _DMA0BUSY
                                    214 	.globl _DMA0MINT
                                    215 	.globl _DMA0INT
                                    216 	.globl _DMA0EN
                                    217 	.globl _DMA0SEL
                                    218 	.globl _DMA0NSZH
                                    219 	.globl _DMA0NSZL
                                    220 	.globl _DMA0NAOH
                                    221 	.globl _DMA0NAOL
                                    222 	.globl _DMA0NBAH
                                    223 	.globl _DMA0NBAL
                                    224 	.globl _DMA0NCF
                                    225 	.globl _VREGINSDH
                                    226 	.globl _VREGINSDL
                                    227 	.globl _ENC0CN
                                    228 	.globl _ENC0H
                                    229 	.globl _ENC0M
                                    230 	.globl _ENC0L
                                    231 	.globl _PC0STAT
                                    232 	.globl _CRC1CN
                                    233 	.globl _CRC1POLH
                                    234 	.globl _CRC1POLL
                                    235 	.globl _CRC1OUTH
                                    236 	.globl _CRC1OUTL
                                    237 	.globl _CRC1IN
                                    238 	.globl _LCD0BUFMD
                                    239 	.globl _LCD0CHPCN
                                    240 	.globl _DC0MD
                                    241 	.globl _DC0CF
                                    242 	.globl _DC0CN
                                    243 	.globl _LCD0VBMCF
                                    244 	.globl _LCD0CHPMD
                                    245 	.globl _LCD0CHPCF
                                    246 	.globl _LCD0MSCF
                                    247 	.globl _LCD0MSCN
                                    248 	.globl _LCD0CLKDIVH
                                    249 	.globl _LCD0CLKDIVL
                                    250 	.globl _LCD0VBMCN
                                    251 	.globl _LCD0CF
                                    252 	.globl _LCD0PWR
                                    253 	.globl _SPI1DAT
                                    254 	.globl _SPI1CKR
                                    255 	.globl _SPI1CFG
                                    256 	.globl _LCD0TOGR
                                    257 	.globl _LCD0BLINK
                                    258 	.globl _LCD0CN
                                    259 	.globl _LCD0CNTRST
                                    260 	.globl _LCD0DF
                                    261 	.globl _LCD0DE
                                    262 	.globl _LCD0DD
                                    263 	.globl _LCD0DC
                                    264 	.globl _LCD0DB
                                    265 	.globl _LCD0DA
                                    266 	.globl _LCD0D9
                                    267 	.globl _LCD0D8
                                    268 	.globl _LCD0D7
                                    269 	.globl _LCD0D6
                                    270 	.globl _LCD0D5
                                    271 	.globl _LCD0D4
                                    272 	.globl _LCD0D3
                                    273 	.globl _LCD0D2
                                    274 	.globl _LCD0D1
                                    275 	.globl _LCD0D0
                                    276 	.globl _VDM0CN
                                    277 	.globl _PCA0CPH4
                                    278 	.globl _PCA0CPL4
                                    279 	.globl _PCA0CPH0
                                    280 	.globl _PCA0CPL0
                                    281 	.globl _PCA0H
                                    282 	.globl _PCA0L
                                    283 	.globl _SPI0CN
                                    284 	.globl _EIP2
                                    285 	.globl _EIP1
                                    286 	.globl _SMB0ADM
                                    287 	.globl _SMB0ADR
                                    288 	.globl _P2MDIN
                                    289 	.globl _P1MDIN
                                    290 	.globl _P0MDIN
                                    291 	.globl _B
                                    292 	.globl _RSTSRC
                                    293 	.globl _PCA0CPH3
                                    294 	.globl _PCA0CPL3
                                    295 	.globl _PCA0CPH2
                                    296 	.globl _PCA0CPL2
                                    297 	.globl _PCA0CPH1
                                    298 	.globl _PCA0CPL1
                                    299 	.globl _ADC0CN
                                    300 	.globl _EIE2
                                    301 	.globl _EIE1
                                    302 	.globl _FLWR
                                    303 	.globl _IT01CF
                                    304 	.globl _XBR2
                                    305 	.globl _XBR1
                                    306 	.globl _XBR0
                                    307 	.globl _ACC
                                    308 	.globl _PCA0PWM
                                    309 	.globl _PCA0CPM4
                                    310 	.globl _PCA0CPM3
                                    311 	.globl _PCA0CPM2
                                    312 	.globl _PCA0CPM1
                                    313 	.globl _PCA0CPM0
                                    314 	.globl _PCA0MD
                                    315 	.globl _PCA0CN
                                    316 	.globl _P0MAT
                                    317 	.globl _P2SKIP
                                    318 	.globl _P1SKIP
                                    319 	.globl _P0SKIP
                                    320 	.globl _PCA0CPH5
                                    321 	.globl _PCA0CPL5
                                    322 	.globl _REF0CN
                                    323 	.globl _PSW
                                    324 	.globl _P1MAT
                                    325 	.globl _PCA0CPM5
                                    326 	.globl _TMR2H
                                    327 	.globl _TMR2L
                                    328 	.globl _TMR2RLH
                                    329 	.globl _TMR2RLL
                                    330 	.globl _REG0CN
                                    331 	.globl _TMR2CN
                                    332 	.globl _P0MASK
                                    333 	.globl _ADC0LTH
                                    334 	.globl _ADC0LTL
                                    335 	.globl _ADC0GTH
                                    336 	.globl _ADC0GTL
                                    337 	.globl _SMB0DAT
                                    338 	.globl _SMB0CF
                                    339 	.globl _SMB0CN
                                    340 	.globl _P1MASK
                                    341 	.globl _ADC0H
                                    342 	.globl _ADC0L
                                    343 	.globl _ADC0CF
                                    344 	.globl _ADC0MX
                                    345 	.globl _ADC0AC
                                    346 	.globl _IREF0CN
                                    347 	.globl _IP
                                    348 	.globl _FLKEY
                                    349 	.globl _PMU0FL
                                    350 	.globl _PMU0CF
                                    351 	.globl _PMU0MD
                                    352 	.globl _OSCICN
                                    353 	.globl _OSCXCN
                                    354 	.globl _P3
                                    355 	.globl _EMI0TC
                                    356 	.globl _RTC0KEY
                                    357 	.globl _RTC0DAT
                                    358 	.globl _RTC0ADR
                                    359 	.globl _EMI0CF
                                    360 	.globl _EMI0CN
                                    361 	.globl _CLKSEL
                                    362 	.globl _IE
                                    363 	.globl _SFRPAGE
                                    364 	.globl _P2MDOUT
                                    365 	.globl _P1MDOUT
                                    366 	.globl _P0MDOUT
                                    367 	.globl _SPI0DAT
                                    368 	.globl _SPI0CKR
                                    369 	.globl _SPI0CFG
                                    370 	.globl _P2
                                    371 	.globl _CPT0MX
                                    372 	.globl _CPT1MX
                                    373 	.globl _CPT0MD
                                    374 	.globl _CPT1MD
                                    375 	.globl _CPT0CN
                                    376 	.globl _CPT1CN
                                    377 	.globl _SBUF0
                                    378 	.globl _SCON0
                                    379 	.globl _TMR3H
                                    380 	.globl _TMR3L
                                    381 	.globl _TMR3RLH
                                    382 	.globl _TMR3RLL
                                    383 	.globl _TMR3CN
                                    384 	.globl _P1
                                    385 	.globl _PSCTL
                                    386 	.globl _CKCON
                                    387 	.globl _TH1
                                    388 	.globl _TH0
                                    389 	.globl _TL1
                                    390 	.globl _TL0
                                    391 	.globl _TMOD
                                    392 	.globl _TCON
                                    393 	.globl _PCON
                                    394 	.globl _SFRLAST
                                    395 	.globl _SFRNEXT
                                    396 	.globl _PSBANK
                                    397 	.globl _DPH
                                    398 	.globl _DPL
                                    399 	.globl _SP
                                    400 	.globl _P0
                                    401 	.globl _convert_to_hex_PARM_2
                                    402 	.globl _write_params_PARM_3
                                    403 	.globl _write_params_PARM_2
                                    404 	.globl _read_params_PARM_3
                                    405 	.globl _read_params_PARM_2
                                    406 	.globl _encryption_key
                                    407 	.globl _parameter_values
                                    408 	.globl _convert_to_hex_PARM_3
                                    409 	.globl _constrain_PARM_3
                                    410 	.globl _constrain_PARM_2
                                    411 	.globl _param_set_PARM_2
                                    412 	.globl _param_set
                                    413 	.globl _param_get
                                    414 	.globl _param_load
                                    415 	.globl _param_save
                                    416 	.globl _param_default
                                    417 	.globl _param_id
                                    418 	.globl _param_name
                                    419 	.globl _constrain
                                    420 	.globl _param_set_encryption_key
                                    421 	.globl _print_encryption_key
                                    422 	.globl _param_get_encryption_key
                                    423 ;--------------------------------------------------------
                                    424 ; special function registers
                                    425 ;--------------------------------------------------------
                                    426 	.area RSEG    (ABS,DATA)
      000000                        427 	.org 0x0000
                           000080   428 _P0	=	0x0080
                           000081   429 _SP	=	0x0081
                           000082   430 _DPL	=	0x0082
                           000083   431 _DPH	=	0x0083
                           000084   432 _PSBANK	=	0x0084
                           000085   433 _SFRNEXT	=	0x0085
                           000086   434 _SFRLAST	=	0x0086
                           000087   435 _PCON	=	0x0087
                           000088   436 _TCON	=	0x0088
                           000089   437 _TMOD	=	0x0089
                           00008A   438 _TL0	=	0x008a
                           00008B   439 _TL1	=	0x008b
                           00008C   440 _TH0	=	0x008c
                           00008D   441 _TH1	=	0x008d
                           00008E   442 _CKCON	=	0x008e
                           00008F   443 _PSCTL	=	0x008f
                           000090   444 _P1	=	0x0090
                           000091   445 _TMR3CN	=	0x0091
                           000092   446 _TMR3RLL	=	0x0092
                           000093   447 _TMR3RLH	=	0x0093
                           000094   448 _TMR3L	=	0x0094
                           000095   449 _TMR3H	=	0x0095
                           000098   450 _SCON0	=	0x0098
                           000099   451 _SBUF0	=	0x0099
                           00009A   452 _CPT1CN	=	0x009a
                           00009B   453 _CPT0CN	=	0x009b
                           00009C   454 _CPT1MD	=	0x009c
                           00009D   455 _CPT0MD	=	0x009d
                           00009E   456 _CPT1MX	=	0x009e
                           00009F   457 _CPT0MX	=	0x009f
                           0000A0   458 _P2	=	0x00a0
                           0000A1   459 _SPI0CFG	=	0x00a1
                           0000A2   460 _SPI0CKR	=	0x00a2
                           0000A3   461 _SPI0DAT	=	0x00a3
                           0000A4   462 _P0MDOUT	=	0x00a4
                           0000A5   463 _P1MDOUT	=	0x00a5
                           0000A6   464 _P2MDOUT	=	0x00a6
                           0000A7   465 _SFRPAGE	=	0x00a7
                           0000A8   466 _IE	=	0x00a8
                           0000A9   467 _CLKSEL	=	0x00a9
                           0000AA   468 _EMI0CN	=	0x00aa
                           0000AB   469 _EMI0CF	=	0x00ab
                           0000AC   470 _RTC0ADR	=	0x00ac
                           0000AD   471 _RTC0DAT	=	0x00ad
                           0000AE   472 _RTC0KEY	=	0x00ae
                           0000AF   473 _EMI0TC	=	0x00af
                           0000B0   474 _P3	=	0x00b0
                           0000B1   475 _OSCXCN	=	0x00b1
                           0000B2   476 _OSCICN	=	0x00b2
                           0000B3   477 _PMU0MD	=	0x00b3
                           0000B5   478 _PMU0CF	=	0x00b5
                           0000B6   479 _PMU0FL	=	0x00b6
                           0000B7   480 _FLKEY	=	0x00b7
                           0000B8   481 _IP	=	0x00b8
                           0000B9   482 _IREF0CN	=	0x00b9
                           0000BA   483 _ADC0AC	=	0x00ba
                           0000BB   484 _ADC0MX	=	0x00bb
                           0000BC   485 _ADC0CF	=	0x00bc
                           0000BD   486 _ADC0L	=	0x00bd
                           0000BE   487 _ADC0H	=	0x00be
                           0000BF   488 _P1MASK	=	0x00bf
                           0000C0   489 _SMB0CN	=	0x00c0
                           0000C1   490 _SMB0CF	=	0x00c1
                           0000C2   491 _SMB0DAT	=	0x00c2
                           0000C3   492 _ADC0GTL	=	0x00c3
                           0000C4   493 _ADC0GTH	=	0x00c4
                           0000C5   494 _ADC0LTL	=	0x00c5
                           0000C6   495 _ADC0LTH	=	0x00c6
                           0000C7   496 _P0MASK	=	0x00c7
                           0000C8   497 _TMR2CN	=	0x00c8
                           0000C9   498 _REG0CN	=	0x00c9
                           0000CA   499 _TMR2RLL	=	0x00ca
                           0000CB   500 _TMR2RLH	=	0x00cb
                           0000CC   501 _TMR2L	=	0x00cc
                           0000CD   502 _TMR2H	=	0x00cd
                           0000CE   503 _PCA0CPM5	=	0x00ce
                           0000CF   504 _P1MAT	=	0x00cf
                           0000D0   505 _PSW	=	0x00d0
                           0000D1   506 _REF0CN	=	0x00d1
                           0000D2   507 _PCA0CPL5	=	0x00d2
                           0000D3   508 _PCA0CPH5	=	0x00d3
                           0000D4   509 _P0SKIP	=	0x00d4
                           0000D5   510 _P1SKIP	=	0x00d5
                           0000D6   511 _P2SKIP	=	0x00d6
                           0000D7   512 _P0MAT	=	0x00d7
                           0000D8   513 _PCA0CN	=	0x00d8
                           0000D9   514 _PCA0MD	=	0x00d9
                           0000DA   515 _PCA0CPM0	=	0x00da
                           0000DB   516 _PCA0CPM1	=	0x00db
                           0000DC   517 _PCA0CPM2	=	0x00dc
                           0000DD   518 _PCA0CPM3	=	0x00dd
                           0000DE   519 _PCA0CPM4	=	0x00de
                           0000DF   520 _PCA0PWM	=	0x00df
                           0000E0   521 _ACC	=	0x00e0
                           0000E1   522 _XBR0	=	0x00e1
                           0000E2   523 _XBR1	=	0x00e2
                           0000E3   524 _XBR2	=	0x00e3
                           0000E4   525 _IT01CF	=	0x00e4
                           0000E5   526 _FLWR	=	0x00e5
                           0000E6   527 _EIE1	=	0x00e6
                           0000E7   528 _EIE2	=	0x00e7
                           0000E8   529 _ADC0CN	=	0x00e8
                           0000E9   530 _PCA0CPL1	=	0x00e9
                           0000EA   531 _PCA0CPH1	=	0x00ea
                           0000EB   532 _PCA0CPL2	=	0x00eb
                           0000EC   533 _PCA0CPH2	=	0x00ec
                           0000ED   534 _PCA0CPL3	=	0x00ed
                           0000EE   535 _PCA0CPH3	=	0x00ee
                           0000EF   536 _RSTSRC	=	0x00ef
                           0000F0   537 _B	=	0x00f0
                           0000F1   538 _P0MDIN	=	0x00f1
                           0000F2   539 _P1MDIN	=	0x00f2
                           0000F3   540 _P2MDIN	=	0x00f3
                           0000F4   541 _SMB0ADR	=	0x00f4
                           0000F5   542 _SMB0ADM	=	0x00f5
                           0000F6   543 _EIP1	=	0x00f6
                           0000F7   544 _EIP2	=	0x00f7
                           0000F8   545 _SPI0CN	=	0x00f8
                           0000F9   546 _PCA0L	=	0x00f9
                           0000FA   547 _PCA0H	=	0x00fa
                           0000FB   548 _PCA0CPL0	=	0x00fb
                           0000FC   549 _PCA0CPH0	=	0x00fc
                           0000FD   550 _PCA0CPL4	=	0x00fd
                           0000FE   551 _PCA0CPH4	=	0x00fe
                           0000FF   552 _VDM0CN	=	0x00ff
                           000089   553 _LCD0D0	=	0x0089
                           00008A   554 _LCD0D1	=	0x008a
                           00008B   555 _LCD0D2	=	0x008b
                           00008C   556 _LCD0D3	=	0x008c
                           00008D   557 _LCD0D4	=	0x008d
                           00008E   558 _LCD0D5	=	0x008e
                           000091   559 _LCD0D6	=	0x0091
                           000092   560 _LCD0D7	=	0x0092
                           000093   561 _LCD0D8	=	0x0093
                           000094   562 _LCD0D9	=	0x0094
                           000095   563 _LCD0DA	=	0x0095
                           000096   564 _LCD0DB	=	0x0096
                           000097   565 _LCD0DC	=	0x0097
                           000099   566 _LCD0DD	=	0x0099
                           00009A   567 _LCD0DE	=	0x009a
                           00009B   568 _LCD0DF	=	0x009b
                           00009C   569 _LCD0CNTRST	=	0x009c
                           00009D   570 _LCD0CN	=	0x009d
                           00009E   571 _LCD0BLINK	=	0x009e
                           00009F   572 _LCD0TOGR	=	0x009f
                           0000A1   573 _SPI1CFG	=	0x00a1
                           0000A2   574 _SPI1CKR	=	0x00a2
                           0000A3   575 _SPI1DAT	=	0x00a3
                           0000A4   576 _LCD0PWR	=	0x00a4
                           0000A5   577 _LCD0CF	=	0x00a5
                           0000A6   578 _LCD0VBMCN	=	0x00a6
                           0000A9   579 _LCD0CLKDIVL	=	0x00a9
                           0000AA   580 _LCD0CLKDIVH	=	0x00aa
                           0000AB   581 _LCD0MSCN	=	0x00ab
                           0000AC   582 _LCD0MSCF	=	0x00ac
                           0000AD   583 _LCD0CHPCF	=	0x00ad
                           0000AE   584 _LCD0CHPMD	=	0x00ae
                           0000AF   585 _LCD0VBMCF	=	0x00af
                           0000B1   586 _DC0CN	=	0x00b1
                           0000B2   587 _DC0CF	=	0x00b2
                           0000B3   588 _DC0MD	=	0x00b3
                           0000B5   589 _LCD0CHPCN	=	0x00b5
                           0000B6   590 _LCD0BUFMD	=	0x00b6
                           0000B9   591 _CRC1IN	=	0x00b9
                           0000BA   592 _CRC1OUTL	=	0x00ba
                           0000BB   593 _CRC1OUTH	=	0x00bb
                           0000BC   594 _CRC1POLL	=	0x00bc
                           0000BD   595 _CRC1POLH	=	0x00bd
                           0000BE   596 _CRC1CN	=	0x00be
                           0000C1   597 _PC0STAT	=	0x00c1
                           0000C2   598 _ENC0L	=	0x00c2
                           0000C3   599 _ENC0M	=	0x00c3
                           0000C4   600 _ENC0H	=	0x00c4
                           0000C5   601 _ENC0CN	=	0x00c5
                           0000C6   602 _VREGINSDL	=	0x00c6
                           0000C7   603 _VREGINSDH	=	0x00c7
                           0000C9   604 _DMA0NCF	=	0x00c9
                           0000CA   605 _DMA0NBAL	=	0x00ca
                           0000CB   606 _DMA0NBAH	=	0x00cb
                           0000CC   607 _DMA0NAOL	=	0x00cc
                           0000CD   608 _DMA0NAOH	=	0x00cd
                           0000CE   609 _DMA0NSZL	=	0x00ce
                           0000CF   610 _DMA0NSZH	=	0x00cf
                           0000D1   611 _DMA0SEL	=	0x00d1
                           0000D2   612 _DMA0EN	=	0x00d2
                           0000D3   613 _DMA0INT	=	0x00d3
                           0000D4   614 _DMA0MINT	=	0x00d4
                           0000D5   615 _DMA0BUSY	=	0x00d5
                           0000D6   616 _DMA0NMD	=	0x00d6
                           0000D7   617 _PC0PCF	=	0x00d7
                           0000D9   618 _PC0MD	=	0x00d9
                           0000DA   619 _PC0CTR0L	=	0x00da
                           0000DB   620 _PC0CTR0M	=	0x00db
                           0000DC   621 _PC0CTR0H	=	0x00dc
                           0000DD   622 _PC0CTR1L	=	0x00dd
                           0000DE   623 _PC0CTR1M	=	0x00de
                           0000DF   624 _PC0CTR1H	=	0x00df
                           0000E1   625 _PC0CMP0L	=	0x00e1
                           0000E2   626 _PC0CMP0M	=	0x00e2
                           0000E3   627 _PC0CMP0H	=	0x00e3
                           0000E4   628 _PC0TH	=	0x00e4
                           0000E9   629 _AES0BCFG	=	0x00e9
                           0000EA   630 _AES0DCFG	=	0x00ea
                           0000EB   631 _AES0BIN	=	0x00eb
                           0000EC   632 _AES0XIN	=	0x00ec
                           0000ED   633 _AES0KIN	=	0x00ed
                           0000EE   634 _AES0DBA	=	0x00ee
                           0000EF   635 _AES0KBA	=	0x00ef
                           0000F1   636 _PC0CMP1L	=	0x00f1
                           0000F2   637 _PC0CMP1M	=	0x00f2
                           0000F3   638 _PC0CMP1H	=	0x00f3
                           0000F4   639 _PC0HIST	=	0x00f4
                           0000F5   640 _AES0YOUT	=	0x00f5
                           0000F8   641 _SPI1CN	=	0x00f8
                           0000F9   642 _PC0DCL	=	0x00f9
                           0000FA   643 _PC0DCH	=	0x00fa
                           0000FB   644 _PC0INT0	=	0x00fb
                           0000FC   645 _PC0INT1	=	0x00fc
                           0000FD   646 _DC0RDY	=	0x00fd
                           00008E   647 _SFRPGCN	=	0x008e
                           000091   648 _CRC0DAT	=	0x0091
                           000092   649 _CRC0CN	=	0x0092
                           000093   650 _CRC0IN	=	0x0093
                           000094   651 _CRC0FLIP	=	0x0094
                           000096   652 _CRC0AUTO	=	0x0096
                           000097   653 _CRC0CNT	=	0x0097
                           00009C   654 _LCD0BUFCN	=	0x009c
                           0000A1   655 _P3DRV	=	0x00a1
                           0000A2   656 _P4DRV	=	0x00a2
                           0000A3   657 _P5DRV	=	0x00a3
                           0000A4   658 _P0DRV	=	0x00a4
                           0000A5   659 _P1DRV	=	0x00a5
                           0000A6   660 _P2DRV	=	0x00a6
                           0000AA   661 _P6DRV	=	0x00aa
                           0000AB   662 _P7DRV	=	0x00ab
                           0000AC   663 _LCD0BUFCF	=	0x00ac
                           0000B1   664 _P3MDOUT	=	0x00b1
                           0000B2   665 _OSCIFL	=	0x00b2
                           0000B3   666 _OSCICL	=	0x00b3
                           0000B6   667 _FLSCL	=	0x00b6
                           0000B9   668 _IREF0CF	=	0x00b9
                           0000BB   669 _ADC0PWR	=	0x00bb
                           0000BC   670 _ADC0TK	=	0x00bc
                           0000BD   671 _TOFFL	=	0x00bd
                           0000BE   672 _TOFFH	=	0x00be
                           0000D9   673 _P4	=	0x00d9
                           0000DA   674 _P5	=	0x00da
                           0000DB   675 _P6	=	0x00db
                           0000DC   676 _P7	=	0x00dc
                           0000E9   677 _HWID	=	0x00e9
                           0000EA   678 _REVID	=	0x00ea
                           0000EB   679 _DEVICEID	=	0x00eb
                           0000F1   680 _P3MDIN	=	0x00f1
                           0000F2   681 _P4MDIN	=	0x00f2
                           0000F3   682 _P5MDIN	=	0x00f3
                           0000F4   683 _P6MDIN	=	0x00f4
                           0000F5   684 _PCLKACT	=	0x00f5
                           0000F9   685 _P4MDOUT	=	0x00f9
                           0000FA   686 _P5MDOUT	=	0x00fa
                           0000FB   687 _P6MDOUT	=	0x00fb
                           0000FC   688 _P7MDOUT	=	0x00fc
                           0000FD   689 _CLKMODE	=	0x00fd
                           0000FE   690 _PCLKEN	=	0x00fe
                           008382   691 _DP	=	0x8382
                           008685   692 _TOFF	=	0x8685
                           009392   693 _TMR3RL	=	0x9392
                           009594   694 _TMR3	=	0x9594
                           00BEBD   695 _ADC0	=	0xbebd
                           00C4C3   696 _ADC0GT	=	0xc4c3
                           00C6C5   697 _ADC0LT	=	0xc6c5
                           00CBCA   698 _TMR2RL	=	0xcbca
                           00CDCC   699 _TMR2	=	0xcdcc
                           00D3D2   700 _PCA0CP5	=	0xd3d2
                           00EAE9   701 _PCA0CP1	=	0xeae9
                           00ECEB   702 _PCA0CP2	=	0xeceb
                           00EEED   703 _PCA0CP3	=	0xeeed
                           00FAF9   704 _PCA0	=	0xfaf9
                           00FCFB   705 _PCA0CP0	=	0xfcfb
                           00FEFD   706 _PCA0CP4	=	0xfefd
                           0000AA   707 __XPAGE	=	0x00aa
                                    708 ;--------------------------------------------------------
                                    709 ; special function bits
                                    710 ;--------------------------------------------------------
                                    711 	.area RSEG    (ABS,DATA)
      000000                        712 	.org 0x0000
                           00008F   713 _TF1	=	0x008f
                           00008E   714 _TR1	=	0x008e
                           00008D   715 _TF0	=	0x008d
                           00008C   716 _TR0	=	0x008c
                           00008B   717 _IE1	=	0x008b
                           00008A   718 _IT1	=	0x008a
                           000089   719 _IE0	=	0x0089
                           000088   720 _IT0	=	0x0088
                           00009F   721 _S0MODE	=	0x009f
                           00009D   722 _MCE0	=	0x009d
                           00009C   723 _REN0	=	0x009c
                           00009B   724 _TB80	=	0x009b
                           00009A   725 _RB80	=	0x009a
                           000099   726 _TI0	=	0x0099
                           000098   727 _RI0	=	0x0098
                           0000AF   728 _EA	=	0x00af
                           0000AE   729 _ESPI0	=	0x00ae
                           0000AD   730 _ET2	=	0x00ad
                           0000AC   731 _ES0	=	0x00ac
                           0000AB   732 _ET1	=	0x00ab
                           0000AA   733 _EX1	=	0x00aa
                           0000A9   734 _ET0	=	0x00a9
                           0000A8   735 _EX0	=	0x00a8
                           0000BE   736 _PSPI0	=	0x00be
                           0000BD   737 _PT2	=	0x00bd
                           0000BC   738 _PS0	=	0x00bc
                           0000BB   739 _PT1	=	0x00bb
                           0000BA   740 _PX1	=	0x00ba
                           0000B9   741 _PT0	=	0x00b9
                           0000B8   742 _PX0	=	0x00b8
                           0000C7   743 _MASTER	=	0x00c7
                           0000C6   744 _TXMODE	=	0x00c6
                           0000C5   745 _STA	=	0x00c5
                           0000C4   746 _STO	=	0x00c4
                           0000C3   747 _ACKRQ	=	0x00c3
                           0000C2   748 _ARBLOST	=	0x00c2
                           0000C1   749 _ACK	=	0x00c1
                           0000C0   750 _SI	=	0x00c0
                           0000CF   751 _TF2H	=	0x00cf
                           0000CE   752 _TF2L	=	0x00ce
                           0000CD   753 _TF2LEN	=	0x00cd
                           0000CC   754 _TF2CEN	=	0x00cc
                           0000CB   755 _T2SPLIT	=	0x00cb
                           0000CA   756 _TR2	=	0x00ca
                           0000C9   757 _T2RCLK	=	0x00c9
                           0000C8   758 _T2XCLK	=	0x00c8
                           0000D7   759 _CY	=	0x00d7
                           0000D6   760 _AC	=	0x00d6
                           0000D5   761 _F0	=	0x00d5
                           0000D4   762 _RS1	=	0x00d4
                           0000D3   763 _RS0	=	0x00d3
                           0000D2   764 _OV	=	0x00d2
                           0000D1   765 _F1	=	0x00d1
                           0000D0   766 _P	=	0x00d0
                           0000DF   767 _CF	=	0x00df
                           0000DE   768 _CR	=	0x00de
                           0000DD   769 _CCF5	=	0x00dd
                           0000DC   770 _CCF4	=	0x00dc
                           0000DB   771 _CCF3	=	0x00db
                           0000DA   772 _CCF2	=	0x00da
                           0000D9   773 _CCF1	=	0x00d9
                           0000D8   774 _CCF0	=	0x00d8
                           0000EF   775 _AD0EN	=	0x00ef
                           0000EE   776 _BURSTEN	=	0x00ee
                           0000ED   777 _AD0INT	=	0x00ed
                           0000EC   778 _AD0BUSY	=	0x00ec
                           0000EB   779 _AD0WINT	=	0x00eb
                           0000EA   780 _AD0CM2	=	0x00ea
                           0000E9   781 _AD0CM1	=	0x00e9
                           0000E8   782 _AD0CM0	=	0x00e8
                           0000FF   783 _SPIF0	=	0x00ff
                           0000FE   784 _WCOL0	=	0x00fe
                           0000FD   785 _MODF0	=	0x00fd
                           0000FC   786 _RXOVRN0	=	0x00fc
                           0000FB   787 _NSS0MD1	=	0x00fb
                           0000FA   788 _NSS0MD0	=	0x00fa
                           0000F9   789 _TXBMT0	=	0x00f9
                           0000F8   790 _SPI0EN	=	0x00f8
                           0000FF   791 _SPIF1	=	0x00ff
                           0000FE   792 _WCOL1	=	0x00fe
                           0000FD   793 _MODF1	=	0x00fd
                           0000FC   794 _RXOVRN1	=	0x00fc
                           0000FB   795 _NSS1MD1	=	0x00fb
                           0000FA   796 _NSS1MD0	=	0x00fa
                           0000F9   797 _TXBMT1	=	0x00f9
                           0000F8   798 _SPI1EN	=	0x00f8
                           0000B6   799 _LED_RED	=	0x00b6
                           0000B7   800 _LED_GREEN	=	0x00b7
                           000082   801 _PIN_CONFIG	=	0x0082
                           000083   802 _PIN_ENABLE	=	0x0083
                           000081   803 _IRQ	=	0x0081
                           0000A3   804 _NSS1	=	0x00a3
                                    805 ;--------------------------------------------------------
                                    806 ; overlayable register banks
                                    807 ;--------------------------------------------------------
                                    808 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        809 	.ds 8
                                    810 ;--------------------------------------------------------
                                    811 ; internal ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area DSEG    (DATA)
      000000                        814 _param_check_PARM_2:
      000000                        815 	.ds 4
      000004                        816 _read_params_input_1_146:
      000004                        817 	.ds 2
      000006                        818 _write_params_input_1_148:
      000006                        819 	.ds 2
      000008                        820 _write_params_sloc0_1_0:
      000008                        821 	.ds 2
      00000A                        822 _convert_to_hex_sloc0_1_0:
      00000A                        823 	.ds 2
      00000C                        824 _param_set_encryption_key_sloc0_1_0:
      00000C                        825 	.ds 2
                                    826 ;--------------------------------------------------------
                                    827 ; overlayable items in internal ram 
                                    828 ;--------------------------------------------------------
                                    829 	.area	OSEG    (OVR,DATA)
                                    830 	.area	OSEG    (OVR,DATA)
                                    831 ;--------------------------------------------------------
                                    832 ; indirectly addressable internal ram data
                                    833 ;--------------------------------------------------------
                                    834 	.area ISEG    (DATA)
                                    835 ;--------------------------------------------------------
                                    836 ; absolute internal ram data
                                    837 ;--------------------------------------------------------
                                    838 	.area IABS    (ABS,DATA)
                                    839 	.area IABS    (ABS,DATA)
                                    840 ;--------------------------------------------------------
                                    841 ; bit data
                                    842 ;--------------------------------------------------------
                                    843 	.area BSEG    (BIT)
      000000                        844 _param_check_sloc0_1_0:
      000000                        845 	.ds 1
                                    846 ;--------------------------------------------------------
                                    847 ; paged external ram data
                                    848 ;--------------------------------------------------------
                                    849 	.area PSEG    (PAG,XDATA)
      000000                        850 _param_set_PARM_2:
      000000                        851 	.ds 4
      000004                        852 _constrain_PARM_2:
      000004                        853 	.ds 4
      000008                        854 _constrain_PARM_3:
      000008                        855 	.ds 4
      00000C                        856 _convert_to_hex_PARM_3:
      00000C                        857 	.ds 1
      00000D                        858 _convert_to_hex_i_1_175:
      00000D                        859 	.ds 1
                                    860 ;--------------------------------------------------------
                                    861 ; external ram data
                                    862 ;--------------------------------------------------------
                                    863 	.area XSEG    (XDATA)
      000000                        864 _parameter_values::
      000000                        865 	.ds 68
      000044                        866 _encryption_key::
      000044                        867 	.ds 32
      000064                        868 _read_params_PARM_2:
      000064                        869 	.ds 2
      000066                        870 _read_params_PARM_3:
      000066                        871 	.ds 1
      000067                        872 _write_params_PARM_2:
      000067                        873 	.ds 2
      000069                        874 _write_params_PARM_3:
      000069                        875 	.ds 1
      00006A                        876 _convert_to_hex_PARM_2:
      00006A                        877 	.ds 2
      00006C                        878 _convert_to_hex_str_in_1_174:
      00006C                        879 	.ds 2
      00006E                        880 _param_set_default_encryption_key_b_1_178:
      00006E                        881 	.ds 1
      00006F                        882 _param_set_encryption_key_key_1_180:
      00006F                        883 	.ds 2
                                    884 ;--------------------------------------------------------
                                    885 ; absolute external ram data
                                    886 ;--------------------------------------------------------
                                    887 	.area XABS    (ABS,XDATA)
                                    888 ;--------------------------------------------------------
                                    889 ; external initialized ram data
                                    890 ;--------------------------------------------------------
                                    891 	.area XISEG   (XDATA)
                                    892 	.area HOME    (CODE)
                                    893 	.area GSINIT0 (CODE)
                                    894 	.area GSINIT1 (CODE)
                                    895 	.area GSINIT2 (CODE)
                                    896 	.area GSINIT3 (CODE)
                                    897 	.area GSINIT4 (CODE)
                                    898 	.area GSINIT5 (CODE)
                                    899 	.area GSINIT  (CODE)
                                    900 	.area GSFINAL (CODE)
                                    901 	.area CSEG    (CODE)
                                    902 ;--------------------------------------------------------
                                    903 ; global & static initialisations
                                    904 ;--------------------------------------------------------
                                    905 	.area HOME    (CODE)
                                    906 	.area GSINIT  (CODE)
                                    907 	.area GSFINAL (CODE)
                                    908 	.area GSINIT  (CODE)
                                    909 ;--------------------------------------------------------
                                    910 ; Home
                                    911 ;--------------------------------------------------------
                                    912 	.area HOME    (CODE)
                                    913 	.area HOME    (CODE)
                                    914 ;--------------------------------------------------------
                                    915 ; code
                                    916 ;--------------------------------------------------------
                                    917 	.area CSEG    (CODE)
                                    918 ;------------------------------------------------------------
                                    919 ;Allocation info for local variables in function 'param_check'
                                    920 ;------------------------------------------------------------
                                    921 ;val                       Allocated with name '_param_check_PARM_2'
                                    922 ;------------------------------------------------------------
                                    923 ;	radio/parameters.c:123: param_check(__pdata enum ParamID id, __data uint32_t val)
                                    924 ;	-----------------------------------------
                                    925 ;	 function param_check
                                    926 ;	-----------------------------------------
      000000                        927 _param_check:
                           000007   928 	ar7 = 0x07
                           000006   929 	ar6 = 0x06
                           000005   930 	ar5 = 0x05
                           000004   931 	ar4 = 0x04
                           000003   932 	ar3 = 0x03
                           000002   933 	ar2 = 0x02
                           000001   934 	ar1 = 0x01
                           000000   935 	ar0 = 0x00
      000000 AF 82            [24]  936 	mov	r7,dpl
                                    937 ;	radio/parameters.c:126: if (id >= PARAM_MAX)
      000002 BF 11 00         [24]  938 	cjne	r7,#0x11,00147$
      000005                        939 00147$:
                                    940 ;	radio/parameters.c:127: return false;
      000005 40 01            [24]  941 	jc	00102$
      000007 22               [24]  942 	ret
      000008                        943 00102$:
                                    944 ;	radio/parameters.c:129: switch (id) {
      000008 EF               [12]  945 	mov	a,r7
      000009 24 F0            [12]  946 	add	a,#0xff - 0x0F
      00000B 50 03            [24]  947 	jnc	00149$
      00000D 02r00rAF         [24]  948 	ljmp	00123$
      000010                        949 00149$:
      000010 EF               [12]  950 	mov	a,r7
      000011 2F               [12]  951 	add	a,r7
      000012 2F               [12]  952 	add	a,r7
      000013 90r00r17         [24]  953 	mov	dptr,#00150$
      000016 73               [24]  954 	jmp	@a+dptr
      000017                        955 00150$:
      000017 02r00r47         [24]  956 	ljmp	00103$
      00001A 02r00r49         [24]  957 	ljmp	00104$
      00001D 02r00r53         [24]  958 	ljmp	00105$
      000020 02r00r65         [24]  959 	ljmp	00108$
      000023 02r00r67         [24]  960 	ljmp	00109$
      000026 02r00r79         [24]  961 	ljmp	00112$
      000029 02r00r8B         [24]  962 	ljmp	00116$
      00002C 02r00r79         [24]  963 	ljmp	00113$
      00002F 02r00rAF         [24]  964 	ljmp	00122$
      000032 02r00rAF         [24]  965 	ljmp	00122$
      000035 02r00rAF         [24]  966 	ljmp	00122$
      000038 02r00rAF         [24]  967 	ljmp	00122$
      00003B 02r00rAF         [24]  968 	ljmp	00122$
      00003E 02r00rAF         [24]  969 	ljmp	00122$
      000041 02r00rAF         [24]  970 	ljmp	00122$
      000044 02r00r9D         [24]  971 	ljmp	00119$
                                    972 ;	radio/parameters.c:130: case PARAM_FORMAT:
      000047                        973 00103$:
                                    974 ;	radio/parameters.c:131: return false;
      000047 C3               [12]  975 	clr	c
      000048 22               [24]  976 	ret
                                    977 ;	radio/parameters.c:133: case PARAM_SERIAL_SPEED:
      000049                        978 00104$:
                                    979 ;	radio/parameters.c:134: return serial_device_valid_speed(val);
      000049 AF*00            [24]  980 	mov	r7,_param_check_PARM_2
      00004B 8F 82            [24]  981 	mov	dpl,r7
      00004D 12r00r00         [24]  982 	lcall	_serial_device_valid_speed
      000050 92*00            [24]  983 	mov  _param_check_sloc0_1_0,c
                                    984 ;	radio/parameters.c:136: case PARAM_AIR_SPEED:
      000052 22               [24]  985 	ret
      000053                        986 00105$:
                                    987 ;	radio/parameters.c:137: if (val > 256)
      000053 C3               [12]  988 	clr	c
      000054 E4               [12]  989 	clr	a
      000055 95*00            [12]  990 	subb	a,_param_check_PARM_2
      000057 74 01            [12]  991 	mov	a,#0x01
      000059 95*01            [12]  992 	subb	a,(_param_check_PARM_2 + 1)
      00005B E4               [12]  993 	clr	a
      00005C 95*02            [12]  994 	subb	a,(_param_check_PARM_2 + 2)
      00005E E4               [12]  995 	clr	a
      00005F 95*03            [12]  996 	subb	a,(_param_check_PARM_2 + 3)
      000061 50 4C            [24]  997 	jnc	00123$
                                    998 ;	radio/parameters.c:138: return false;
      000063 C3               [12]  999 	clr	c
                                   1000 ;	radio/parameters.c:141: case PARAM_NETID:
      000064 22               [24] 1001 	ret
      000065                       1002 00108$:
                                   1003 ;	radio/parameters.c:143: return true;
      000065 D3               [12] 1004 	setb	c
                                   1005 ;	radio/parameters.c:145: case PARAM_TXPOWER:
      000066 22               [24] 1006 	ret
      000067                       1007 00109$:
                                   1008 ;	radio/parameters.c:146: if (val > BOARD_MAXTXPOWER)
      000067 C3               [12] 1009 	clr	c
      000068 74 14            [12] 1010 	mov	a,#0x14
      00006A 95*00            [12] 1011 	subb	a,_param_check_PARM_2
      00006C E4               [12] 1012 	clr	a
      00006D 95*01            [12] 1013 	subb	a,(_param_check_PARM_2 + 1)
      00006F E4               [12] 1014 	clr	a
      000070 95*02            [12] 1015 	subb	a,(_param_check_PARM_2 + 2)
      000072 E4               [12] 1016 	clr	a
      000073 95*03            [12] 1017 	subb	a,(_param_check_PARM_2 + 3)
      000075 50 38            [24] 1018 	jnc	00123$
                                   1019 ;	radio/parameters.c:147: return false;
      000077 C3               [12] 1020 	clr	c
                                   1021 ;	radio/parameters.c:150: case PARAM_ECC:
      000078 22               [24] 1022 	ret
      000079                       1023 00112$:
                                   1024 ;	radio/parameters.c:151: case PARAM_OPPRESEND:
      000079                       1025 00113$:
                                   1026 ;	radio/parameters.c:153: if (val > 1)
      000079 C3               [12] 1027 	clr	c
      00007A 74 01            [12] 1028 	mov	a,#0x01
      00007C 95*00            [12] 1029 	subb	a,_param_check_PARM_2
      00007E E4               [12] 1030 	clr	a
      00007F 95*01            [12] 1031 	subb	a,(_param_check_PARM_2 + 1)
      000081 E4               [12] 1032 	clr	a
      000082 95*02            [12] 1033 	subb	a,(_param_check_PARM_2 + 2)
      000084 E4               [12] 1034 	clr	a
      000085 95*03            [12] 1035 	subb	a,(_param_check_PARM_2 + 3)
      000087 50 26            [24] 1036 	jnc	00123$
                                   1037 ;	radio/parameters.c:154: return false;
      000089 C3               [12] 1038 	clr	c
                                   1039 ;	radio/parameters.c:157: case PARAM_MAVLINK:
      00008A 22               [24] 1040 	ret
      00008B                       1041 00116$:
                                   1042 ;	radio/parameters.c:158: if (val > 2)
      00008B C3               [12] 1043 	clr	c
      00008C 74 02            [12] 1044 	mov	a,#0x02
      00008E 95*00            [12] 1045 	subb	a,_param_check_PARM_2
      000090 E4               [12] 1046 	clr	a
      000091 95*01            [12] 1047 	subb	a,(_param_check_PARM_2 + 1)
      000093 E4               [12] 1048 	clr	a
      000094 95*02            [12] 1049 	subb	a,(_param_check_PARM_2 + 2)
      000096 E4               [12] 1050 	clr	a
      000097 95*03            [12] 1051 	subb	a,(_param_check_PARM_2 + 3)
      000099 50 14            [24] 1052 	jnc	00123$
                                   1053 ;	radio/parameters.c:159: return false;
      00009B C3               [12] 1054 	clr	c
                                   1055 ;	radio/parameters.c:162: case PARAM_MAX_WINDOW:
      00009C 22               [24] 1056 	ret
      00009D                       1057 00119$:
                                   1058 ;	radio/parameters.c:166: if (val > 131)
      00009D C3               [12] 1059 	clr	c
      00009E 74 83            [12] 1060 	mov	a,#0x83
      0000A0 95*00            [12] 1061 	subb	a,_param_check_PARM_2
      0000A2 E4               [12] 1062 	clr	a
      0000A3 95*01            [12] 1063 	subb	a,(_param_check_PARM_2 + 1)
      0000A5 E4               [12] 1064 	clr	a
      0000A6 95*02            [12] 1065 	subb	a,(_param_check_PARM_2 + 2)
      0000A8 E4               [12] 1066 	clr	a
      0000A9 95*03            [12] 1067 	subb	a,(_param_check_PARM_2 + 3)
      0000AB 50 02            [24] 1068 	jnc	00123$
                                   1069 ;	radio/parameters.c:167: return false;
      0000AD C3               [12] 1070 	clr	c
                                   1071 ;	radio/parameters.c:170: default:
      0000AE 22               [24] 1072 	ret
      0000AF                       1073 00122$:
                                   1074 ;	radio/parameters.c:173: }
      0000AF                       1075 00123$:
                                   1076 ;	radio/parameters.c:174: return true;
      0000AF D3               [12] 1077 	setb	c
      0000B0 22               [24] 1078 	ret
                                   1079 ;------------------------------------------------------------
                                   1080 ;Allocation info for local variables in function 'param_set'
                                   1081 ;------------------------------------------------------------
                                   1082 ;param                     Allocated to registers r7 
                                   1083 ;------------------------------------------------------------
                                   1084 ;	radio/parameters.c:178: param_set(__data enum ParamID param, __pdata param_t value)
                                   1085 ;	-----------------------------------------
                                   1086 ;	 function param_set
                                   1087 ;	-----------------------------------------
      0000B1                       1088 _param_set:
      0000B1 AF 82            [24] 1089 	mov	r7,dpl
                                   1090 ;	radio/parameters.c:181: if (!param_check(param, value))
      0000B3 78r00            [12] 1091 	mov	r0,#_param_set_PARM_2
      0000B5 E2               [24] 1092 	movx	a,@r0
      0000B6 F5*00            [12] 1093 	mov	_param_check_PARM_2,a
      0000B8 08               [12] 1094 	inc	r0
      0000B9 E2               [24] 1095 	movx	a,@r0
      0000BA F5*01            [12] 1096 	mov	(_param_check_PARM_2 + 1),a
      0000BC 08               [12] 1097 	inc	r0
      0000BD E2               [24] 1098 	movx	a,@r0
      0000BE F5*02            [12] 1099 	mov	(_param_check_PARM_2 + 2),a
      0000C0 08               [12] 1100 	inc	r0
      0000C1 E2               [24] 1101 	movx	a,@r0
      0000C2 F5*03            [12] 1102 	mov	(_param_check_PARM_2 + 3),a
      0000C4 8F 82            [24] 1103 	mov	dpl,r7
      0000C6 C0 07            [24] 1104 	push	ar7
      0000C8 12r00r00         [24] 1105 	lcall	_param_check
      0000CB D0 07            [24] 1106 	pop	ar7
                                   1107 ;	radio/parameters.c:182: return false;
      0000CD 40 01            [24] 1108 	jc	00102$
      0000CF 22               [24] 1109 	ret
      0000D0                       1110 00102$:
                                   1111 ;	radio/parameters.c:185: switch (param) {
      0000D0 BF 04 02         [24] 1112 	cjne	r7,#0x04,00145$
      0000D3 80 1F            [24] 1113 	sjmp	00103$
      0000D5                       1114 00145$:
      0000D5 BF 06 03         [24] 1115 	cjne	r7,#0x06,00146$
      0000D8 02r01rB7         [24] 1116 	ljmp	00108$
      0000DB                       1117 00146$:
      0000DB BF 07 03         [24] 1118 	cjne	r7,#0x07,00147$
      0000DE 02r01rF4         [24] 1119 	ljmp	00112$
      0000E1                       1120 00147$:
      0000E1 BF 0B 02         [24] 1121 	cjne	r7,#0x0B,00148$
      0000E4 80 2D            [24] 1122 	sjmp	00104$
      0000E6                       1123 00148$:
      0000E6 BF 0C 02         [24] 1124 	cjne	r7,#0x0C,00149$
      0000E9 80 6F            [24] 1125 	sjmp	00105$
      0000EB                       1126 00149$:
      0000EB BF 0E 03         [24] 1127 	cjne	r7,#0x0E,00150$
      0000EE 02r01rCC         [24] 1128 	ljmp	00110$
      0000F1                       1129 00150$:
      0000F1 02r01rF4         [24] 1130 	ljmp	00112$
                                   1131 ;	radio/parameters.c:186: case PARAM_TXPOWER:
      0000F4                       1132 00103$:
                                   1133 ;	radio/parameters.c:189: radio_set_transmit_power(value);
      0000F4 78r00            [12] 1134 	mov	r0,#_param_set_PARM_2
      0000F6 E2               [24] 1135 	movx	a,@r0
      0000F7 F5 82            [12] 1136 	mov	dpl,a
      0000F9 C0 07            [24] 1137 	push	ar7
      0000FB 12r00r00         [24] 1138 	lcall	_radio_set_transmit_power
                                   1139 ;	radio/parameters.c:190: value = radio_get_transmit_power();
      0000FE 12r00r00         [24] 1140 	lcall	_radio_get_transmit_power
      000101 AE 82            [24] 1141 	mov	r6,dpl
      000103 D0 07            [24] 1142 	pop	ar7
      000105 78r00            [12] 1143 	mov	r0,#_param_set_PARM_2
      000107 EE               [12] 1144 	mov	a,r6
      000108 F2               [24] 1145 	movx	@r0,a
      000109 08               [12] 1146 	inc	r0
      00010A E4               [12] 1147 	clr	a
      00010B F2               [24] 1148 	movx	@r0,a
      00010C 08               [12] 1149 	inc	r0
      00010D F2               [24] 1150 	movx	@r0,a
      00010E 08               [12] 1151 	inc	r0
      00010F F2               [24] 1152 	movx	@r0,a
                                   1153 ;	radio/parameters.c:191: break;
      000110 02r01rF4         [24] 1154 	ljmp	00112$
                                   1155 ;	radio/parameters.c:193: case PARAM_DUTY_CYCLE:
      000113                       1156 00104$:
                                   1157 ;	radio/parameters.c:195: value = constrain(value, 0, 100);
      000113 78r04            [12] 1158 	mov	r0,#_constrain_PARM_2
      000115 E4               [12] 1159 	clr	a
      000116 F2               [24] 1160 	movx	@r0,a
      000117 08               [12] 1161 	inc	r0
      000118 F2               [24] 1162 	movx	@r0,a
      000119 08               [12] 1163 	inc	r0
      00011A F2               [24] 1164 	movx	@r0,a
      00011B 08               [12] 1165 	inc	r0
      00011C F2               [24] 1166 	movx	@r0,a
      00011D 78r08            [12] 1167 	mov	r0,#_constrain_PARM_3
      00011F 74 64            [12] 1168 	mov	a,#0x64
      000121 F2               [24] 1169 	movx	@r0,a
      000122 08               [12] 1170 	inc	r0
      000123 E4               [12] 1171 	clr	a
      000124 F2               [24] 1172 	movx	@r0,a
      000125 08               [12] 1173 	inc	r0
      000126 F2               [24] 1174 	movx	@r0,a
      000127 08               [12] 1175 	inc	r0
      000128 F2               [24] 1176 	movx	@r0,a
      000129 78r00            [12] 1177 	mov	r0,#_param_set_PARM_2
      00012B E2               [24] 1178 	movx	a,@r0
      00012C F5 82            [12] 1179 	mov	dpl,a
      00012E 08               [12] 1180 	inc	r0
      00012F E2               [24] 1181 	movx	a,@r0
      000130 F5 83            [12] 1182 	mov	dph,a
      000132 08               [12] 1183 	inc	r0
      000133 E2               [24] 1184 	movx	a,@r0
      000134 F5 F0            [12] 1185 	mov	b,a
      000136 08               [12] 1186 	inc	r0
      000137 E2               [24] 1187 	movx	a,@r0
      000138 C0 07            [24] 1188 	push	ar7
      00013A 12r05rB5         [24] 1189 	lcall	_constrain
      00013D AB 82            [24] 1190 	mov	r3,dpl
      00013F AC 83            [24] 1191 	mov	r4,dph
      000141 AD F0            [24] 1192 	mov	r5,b
      000143 FE               [12] 1193 	mov	r6,a
      000144 D0 07            [24] 1194 	pop	ar7
      000146 78r00            [12] 1195 	mov	r0,#_param_set_PARM_2
      000148 EB               [12] 1196 	mov	a,r3
      000149 F2               [24] 1197 	movx	@r0,a
      00014A 08               [12] 1198 	inc	r0
      00014B EC               [12] 1199 	mov	a,r4
      00014C F2               [24] 1200 	movx	@r0,a
      00014D 08               [12] 1201 	inc	r0
      00014E ED               [12] 1202 	mov	a,r5
      00014F F2               [24] 1203 	movx	@r0,a
      000150 08               [12] 1204 	inc	r0
      000151 EE               [12] 1205 	mov	a,r6
      000152 F2               [24] 1206 	movx	@r0,a
                                   1207 ;	radio/parameters.c:196: duty_cycle = value;
      000153 78r00            [12] 1208 	mov	r0,#_duty_cycle
      000155 EB               [12] 1209 	mov	a,r3
      000156 F2               [24] 1210 	movx	@r0,a
                                   1211 ;	radio/parameters.c:197: break;
      000157 02r01rF4         [24] 1212 	ljmp	00112$
                                   1213 ;	radio/parameters.c:199: case PARAM_LBT_RSSI:
      00015A                       1214 00105$:
                                   1215 ;	radio/parameters.c:201: if (value != 0) {
      00015A 78r00            [12] 1216 	mov	r0,#_param_set_PARM_2
      00015C E2               [24] 1217 	movx	a,@r0
      00015D F5 F0            [12] 1218 	mov	b,a
      00015F 08               [12] 1219 	inc	r0
      000160 E2               [24] 1220 	movx	a,@r0
      000161 42 F0            [12] 1221 	orl	b,a
      000163 08               [12] 1222 	inc	r0
      000164 E2               [24] 1223 	movx	a,@r0
      000165 42 F0            [12] 1224 	orl	b,a
      000167 08               [12] 1225 	inc	r0
      000168 E2               [24] 1226 	movx	a,@r0
      000169 45 F0            [12] 1227 	orl	a,b
      00016B 60 42            [24] 1228 	jz	00107$
                                   1229 ;	radio/parameters.c:202: value = constrain(value, 25, 220);
      00016D 78r04            [12] 1230 	mov	r0,#_constrain_PARM_2
      00016F 74 19            [12] 1231 	mov	a,#0x19
      000171 F2               [24] 1232 	movx	@r0,a
      000172 08               [12] 1233 	inc	r0
      000173 E4               [12] 1234 	clr	a
      000174 F2               [24] 1235 	movx	@r0,a
      000175 08               [12] 1236 	inc	r0
      000176 F2               [24] 1237 	movx	@r0,a
      000177 08               [12] 1238 	inc	r0
      000178 F2               [24] 1239 	movx	@r0,a
      000179 78r08            [12] 1240 	mov	r0,#_constrain_PARM_3
      00017B 74 DC            [12] 1241 	mov	a,#0xDC
      00017D F2               [24] 1242 	movx	@r0,a
      00017E 08               [12] 1243 	inc	r0
      00017F E4               [12] 1244 	clr	a
      000180 F2               [24] 1245 	movx	@r0,a
      000181 08               [12] 1246 	inc	r0
      000182 F2               [24] 1247 	movx	@r0,a
      000183 08               [12] 1248 	inc	r0
      000184 F2               [24] 1249 	movx	@r0,a
      000185 78r00            [12] 1250 	mov	r0,#_param_set_PARM_2
      000187 E2               [24] 1251 	movx	a,@r0
      000188 F5 82            [12] 1252 	mov	dpl,a
      00018A 08               [12] 1253 	inc	r0
      00018B E2               [24] 1254 	movx	a,@r0
      00018C F5 83            [12] 1255 	mov	dph,a
      00018E 08               [12] 1256 	inc	r0
      00018F E2               [24] 1257 	movx	a,@r0
      000190 F5 F0            [12] 1258 	mov	b,a
      000192 08               [12] 1259 	inc	r0
      000193 E2               [24] 1260 	movx	a,@r0
      000194 C0 07            [24] 1261 	push	ar7
      000196 12r05rB5         [24] 1262 	lcall	_constrain
      000199 AB 82            [24] 1263 	mov	r3,dpl
      00019B AC 83            [24] 1264 	mov	r4,dph
      00019D AD F0            [24] 1265 	mov	r5,b
      00019F FE               [12] 1266 	mov	r6,a
      0001A0 D0 07            [24] 1267 	pop	ar7
      0001A2 78r00            [12] 1268 	mov	r0,#_param_set_PARM_2
      0001A4 EB               [12] 1269 	mov	a,r3
      0001A5 F2               [24] 1270 	movx	@r0,a
      0001A6 08               [12] 1271 	inc	r0
      0001A7 EC               [12] 1272 	mov	a,r4
      0001A8 F2               [24] 1273 	movx	@r0,a
      0001A9 08               [12] 1274 	inc	r0
      0001AA ED               [12] 1275 	mov	a,r5
      0001AB F2               [24] 1276 	movx	@r0,a
      0001AC 08               [12] 1277 	inc	r0
      0001AD EE               [12] 1278 	mov	a,r6
      0001AE F2               [24] 1279 	movx	@r0,a
      0001AF                       1280 00107$:
                                   1281 ;	radio/parameters.c:204: lbt_rssi = value;
      0001AF 78r00            [12] 1282 	mov	r0,#_param_set_PARM_2
      0001B1 79r00            [12] 1283 	mov	r1,#_lbt_rssi
      0001B3 E2               [24] 1284 	movx	a,@r0
      0001B4 F3               [24] 1285 	movx	@r1,a
                                   1286 ;	radio/parameters.c:205: break;
                                   1287 ;	radio/parameters.c:207: case PARAM_MAVLINK:
      0001B5 80 3D            [24] 1288 	sjmp	00112$
      0001B7                       1289 00108$:
                                   1290 ;	radio/parameters.c:208: feature_mavlink_framing = (uint8_t) value;
      0001B7 78r00            [12] 1291 	mov	r0,#_param_set_PARM_2
      0001B9 E2               [24] 1292 	movx	a,@r0
      0001BA FE               [12] 1293 	mov	r6,a
      0001BB 90r00r00         [24] 1294 	mov	dptr,#_feature_mavlink_framing
      0001BE F0               [24] 1295 	movx	@dptr,a
                                   1296 ;	radio/parameters.c:209: value = feature_mavlink_framing;
      0001BF 78r00            [12] 1297 	mov	r0,#_param_set_PARM_2
      0001C1 EE               [12] 1298 	mov	a,r6
      0001C2 F2               [24] 1299 	movx	@r0,a
      0001C3 08               [12] 1300 	inc	r0
      0001C4 E4               [12] 1301 	clr	a
      0001C5 F2               [24] 1302 	movx	@r0,a
      0001C6 08               [12] 1303 	inc	r0
      0001C7 F2               [24] 1304 	movx	@r0,a
      0001C8 08               [12] 1305 	inc	r0
      0001C9 F2               [24] 1306 	movx	@r0,a
                                   1307 ;	radio/parameters.c:210: break;
                                   1308 ;	radio/parameters.c:215: case PARAM_RTSCTS:
      0001CA 80 28            [24] 1309 	sjmp	00112$
      0001CC                       1310 00110$:
                                   1311 ;	radio/parameters.c:216: feature_rtscts = value?true:false;
      0001CC 78r00            [12] 1312 	mov	r0,#_param_set_PARM_2
      0001CE E2               [24] 1313 	movx	a,@r0
      0001CF F5 F0            [12] 1314 	mov	b,a
      0001D1 08               [12] 1315 	inc	r0
      0001D2 E2               [24] 1316 	movx	a,@r0
      0001D3 42 F0            [12] 1317 	orl	b,a
      0001D5 08               [12] 1318 	inc	r0
      0001D6 E2               [24] 1319 	movx	a,@r0
      0001D7 42 F0            [12] 1320 	orl	b,a
      0001D9 08               [12] 1321 	inc	r0
      0001DA E2               [24] 1322 	movx	a,@r0
      0001DB 45 F0            [12] 1323 	orl	a,b
      0001DD 24 FF            [12] 1324 	add	a,#0xff
                                   1325 ;	radio/parameters.c:217: value = feature_rtscts?1:0;
      0001DF 92*00            [24] 1326 	mov	_feature_rtscts,c
      0001E1 50 04            [24] 1327 	jnc	00115$
      0001E3 7E 01            [12] 1328 	mov	r6,#0x01
      0001E5 80 02            [24] 1329 	sjmp	00116$
      0001E7                       1330 00115$:
      0001E7 7E 00            [12] 1331 	mov	r6,#0x00
      0001E9                       1332 00116$:
      0001E9 78r00            [12] 1333 	mov	r0,#_param_set_PARM_2
      0001EB EE               [12] 1334 	mov	a,r6
      0001EC F2               [24] 1335 	movx	@r0,a
      0001ED 08               [12] 1336 	inc	r0
      0001EE E4               [12] 1337 	clr	a
      0001EF F2               [24] 1338 	movx	@r0,a
      0001F0 08               [12] 1339 	inc	r0
      0001F1 F2               [24] 1340 	movx	@r0,a
      0001F2 08               [12] 1341 	inc	r0
      0001F3 F2               [24] 1342 	movx	@r0,a
                                   1343 ;	radio/parameters.c:222: }
      0001F4                       1344 00112$:
                                   1345 ;	radio/parameters.c:224: parameter_values[param] = value;
      0001F4 EF               [12] 1346 	mov	a,r7
      0001F5 75 F0 04         [24] 1347 	mov	b,#0x04
      0001F8 A4               [48] 1348 	mul	ab
      0001F9 24r00            [12] 1349 	add	a,#_parameter_values
      0001FB F5 82            [12] 1350 	mov	dpl,a
      0001FD 74s00            [12] 1351 	mov	a,#(_parameter_values >> 8)
      0001FF 35 F0            [12] 1352 	addc	a,b
      000201 F5 83            [12] 1353 	mov	dph,a
      000203 78r00            [12] 1354 	mov	r0,#_param_set_PARM_2
      000205 E2               [24] 1355 	movx	a,@r0
      000206 F0               [24] 1356 	movx	@dptr,a
      000207 08               [12] 1357 	inc	r0
      000208 E2               [24] 1358 	movx	a,@r0
      000209 A3               [24] 1359 	inc	dptr
      00020A F0               [24] 1360 	movx	@dptr,a
      00020B 08               [12] 1361 	inc	r0
      00020C E2               [24] 1362 	movx	a,@r0
      00020D A3               [24] 1363 	inc	dptr
      00020E F0               [24] 1364 	movx	@dptr,a
      00020F 08               [12] 1365 	inc	r0
      000210 E2               [24] 1366 	movx	a,@r0
      000211 A3               [24] 1367 	inc	dptr
      000212 F0               [24] 1368 	movx	@dptr,a
                                   1369 ;	radio/parameters.c:226: return true;
      000213 D3               [12] 1370 	setb	c
      000214 22               [24] 1371 	ret
                                   1372 ;------------------------------------------------------------
                                   1373 ;Allocation info for local variables in function 'param_get'
                                   1374 ;------------------------------------------------------------
                                   1375 ;param                     Allocated to registers r7 
                                   1376 ;------------------------------------------------------------
                                   1377 ;	radio/parameters.c:230: param_get(__data enum ParamID param)
                                   1378 ;	-----------------------------------------
                                   1379 ;	 function param_get
                                   1380 ;	-----------------------------------------
      000215                       1381 _param_get:
      000215 AF 82            [24] 1382 	mov	r7,dpl
                                   1383 ;	radio/parameters.c:232: if (param >= PARAM_MAX)
      000217 BF 11 00         [24] 1384 	cjne	r7,#0x11,00108$
      00021A                       1385 00108$:
      00021A 40 07            [24] 1386 	jc	00102$
                                   1387 ;	radio/parameters.c:233: return 0;
      00021C 90 00 00         [24] 1388 	mov	dptr,#(0x00&0x00ff)
      00021F E4               [12] 1389 	clr	a
      000220 F5 F0            [12] 1390 	mov	b,a
      000222 22               [24] 1391 	ret
      000223                       1392 00102$:
                                   1393 ;	radio/parameters.c:234: return parameter_values[param];
      000223 EF               [12] 1394 	mov	a,r7
      000224 75 F0 04         [24] 1395 	mov	b,#0x04
      000227 A4               [48] 1396 	mul	ab
      000228 24r00            [12] 1397 	add	a,#_parameter_values
      00022A F5 82            [12] 1398 	mov	dpl,a
      00022C 74s00            [12] 1399 	mov	a,#(_parameter_values >> 8)
      00022E 35 F0            [12] 1400 	addc	a,b
      000230 F5 83            [12] 1401 	mov	dph,a
      000232 E0               [24] 1402 	movx	a,@dptr
      000233 FC               [12] 1403 	mov	r4,a
      000234 A3               [24] 1404 	inc	dptr
      000235 E0               [24] 1405 	movx	a,@dptr
      000236 FD               [12] 1406 	mov	r5,a
      000237 A3               [24] 1407 	inc	dptr
      000238 E0               [24] 1408 	movx	a,@dptr
      000239 FE               [12] 1409 	mov	r6,a
      00023A A3               [24] 1410 	inc	dptr
      00023B E0               [24] 1411 	movx	a,@dptr
      00023C 8C 82            [24] 1412 	mov	dpl,r4
      00023E 8D 83            [24] 1413 	mov	dph,r5
      000240 8E F0            [24] 1414 	mov	b,r6
      000242 22               [24] 1415 	ret
                                   1416 ;------------------------------------------------------------
                                   1417 ;Allocation info for local variables in function 'read_params'
                                   1418 ;------------------------------------------------------------
                                   1419 ;input                     Allocated with name '_read_params_input_1_146'
                                   1420 ;start                     Allocated with name '_read_params_PARM_2'
                                   1421 ;size                      Allocated with name '_read_params_PARM_3'
                                   1422 ;i                         Allocated with name '_read_params_i_1_147'
                                   1423 ;------------------------------------------------------------
                                   1424 ;	radio/parameters.c:237: bool read_params(__xdata uint8_t * __data input, uint16_t start, uint8_t size)
                                   1425 ;	-----------------------------------------
                                   1426 ;	 function read_params
                                   1427 ;	-----------------------------------------
      000243                       1428 _read_params:
      000243 85 82*04         [24] 1429 	mov	_read_params_input_1_146,dpl
      000246 85 83*05         [24] 1430 	mov	(_read_params_input_1_146 + 1),dph
                                   1431 ;	radio/parameters.c:241: for (i = start; i < start+size; i ++)
      000249 90r00r64         [24] 1432 	mov	dptr,#_read_params_PARM_2
      00024C E0               [24] 1433 	movx	a,@dptr
      00024D FC               [12] 1434 	mov	r4,a
      00024E A3               [24] 1435 	inc	dptr
      00024F E0               [24] 1436 	movx	a,@dptr
      000250 FD               [12] 1437 	mov	r5,a
      000251 90r00r66         [24] 1438 	mov	dptr,#_read_params_PARM_3
      000254 E0               [24] 1439 	movx	a,@dptr
      000255 FB               [12] 1440 	mov	r3,a
      000256 8C 01            [24] 1441 	mov	ar1,r4
      000258 8D 02            [24] 1442 	mov	ar2,r5
      00025A                       1443 00105$:
      00025A 8B 00            [24] 1444 	mov	ar0,r3
      00025C 7F 00            [12] 1445 	mov	r7,#0x00
      00025E E8               [12] 1446 	mov	a,r0
      00025F 2C               [12] 1447 	add	a,r4
      000260 F8               [12] 1448 	mov	r0,a
      000261 EF               [12] 1449 	mov	a,r7
      000262 3D               [12] 1450 	addc	a,r5
      000263 FF               [12] 1451 	mov	r7,a
      000264 C3               [12] 1452 	clr	c
      000265 E9               [12] 1453 	mov	a,r1
      000266 98               [12] 1454 	subb	a,r0
      000267 EA               [12] 1455 	mov	a,r2
      000268 9F               [12] 1456 	subb	a,r7
      000269 50 41            [24] 1457 	jnc	00101$
                                   1458 ;	radio/parameters.c:242: input[i-start] = flash_read_scratch(i);
      00026B E9               [12] 1459 	mov	a,r1
      00026C C3               [12] 1460 	clr	c
      00026D 9C               [12] 1461 	subb	a,r4
      00026E FE               [12] 1462 	mov	r6,a
      00026F EA               [12] 1463 	mov	a,r2
      000270 9D               [12] 1464 	subb	a,r5
      000271 FF               [12] 1465 	mov	r7,a
      000272 EE               [12] 1466 	mov	a,r6
      000273 25*04            [12] 1467 	add	a,_read_params_input_1_146
      000275 FE               [12] 1468 	mov	r6,a
      000276 EF               [12] 1469 	mov	a,r7
      000277 35*05            [12] 1470 	addc	a,(_read_params_input_1_146 + 1)
      000279 FF               [12] 1471 	mov	r7,a
      00027A 89 82            [24] 1472 	mov	dpl,r1
      00027C 8A 83            [24] 1473 	mov	dph,r2
      00027E C0 07            [24] 1474 	push	ar7
      000280 C0 06            [24] 1475 	push	ar6
      000282 C0 05            [24] 1476 	push	ar5
      000284 C0 04            [24] 1477 	push	ar4
      000286 C0 03            [24] 1478 	push	ar3
      000288 C0 02            [24] 1479 	push	ar2
      00028A C0 01            [24] 1480 	push	ar1
      00028C 12r00r00         [24] 1481 	lcall	_flash_read_scratch
      00028F A8 82            [24] 1482 	mov	r0,dpl
      000291 D0 01            [24] 1483 	pop	ar1
      000293 D0 02            [24] 1484 	pop	ar2
      000295 D0 03            [24] 1485 	pop	ar3
      000297 D0 04            [24] 1486 	pop	ar4
      000299 D0 05            [24] 1487 	pop	ar5
      00029B D0 06            [24] 1488 	pop	ar6
      00029D D0 07            [24] 1489 	pop	ar7
      00029F 8E 82            [24] 1490 	mov	dpl,r6
      0002A1 8F 83            [24] 1491 	mov	dph,r7
      0002A3 E8               [12] 1492 	mov	a,r0
      0002A4 F0               [24] 1493 	movx	@dptr,a
                                   1494 ;	radio/parameters.c:241: for (i = start; i < start+size; i ++)
      0002A5 09               [12] 1495 	inc	r1
      0002A6 B9 00 B1         [24] 1496 	cjne	r1,#0x00,00105$
      0002A9 0A               [12] 1497 	inc	r2
      0002AA 80 AE            [24] 1498 	sjmp	00105$
      0002AC                       1499 00101$:
                                   1500 ;	radio/parameters.c:245: if (crc16(size, input) != ((uint16_t) flash_read_scratch(i+1)<<8 | flash_read_scratch(i)))
      0002AC 85*04*00         [24] 1501 	mov	_crc16_PARM_2,_read_params_input_1_146
      0002AF 85*05*01         [24] 1502 	mov	(_crc16_PARM_2 + 1),(_read_params_input_1_146 + 1)
      0002B2 8B 82            [24] 1503 	mov	dpl,r3
      0002B4 C0 02            [24] 1504 	push	ar2
      0002B6 C0 01            [24] 1505 	push	ar1
      0002B8 12r00r00         [24] 1506 	lcall	_crc16
      0002BB AE 82            [24] 1507 	mov	r6,dpl
      0002BD AF 83            [24] 1508 	mov	r7,dph
      0002BF D0 01            [24] 1509 	pop	ar1
      0002C1 D0 02            [24] 1510 	pop	ar2
      0002C3 74 01            [12] 1511 	mov	a,#0x01
      0002C5 29               [12] 1512 	add	a,r1
      0002C6 FC               [12] 1513 	mov	r4,a
      0002C7 E4               [12] 1514 	clr	a
      0002C8 3A               [12] 1515 	addc	a,r2
      0002C9 FD               [12] 1516 	mov	r5,a
      0002CA 8C 82            [24] 1517 	mov	dpl,r4
      0002CC 8D 83            [24] 1518 	mov	dph,r5
      0002CE C0 07            [24] 1519 	push	ar7
      0002D0 C0 06            [24] 1520 	push	ar6
      0002D2 C0 02            [24] 1521 	push	ar2
      0002D4 C0 01            [24] 1522 	push	ar1
      0002D6 12r00r00         [24] 1523 	lcall	_flash_read_scratch
      0002D9 AD 82            [24] 1524 	mov	r5,dpl
      0002DB D0 01            [24] 1525 	pop	ar1
      0002DD D0 02            [24] 1526 	pop	ar2
      0002DF 8D 04            [24] 1527 	mov	ar4,r5
      0002E1 7D 00            [12] 1528 	mov	r5,#0x00
      0002E3 89 82            [24] 1529 	mov	dpl,r1
      0002E5 8A 83            [24] 1530 	mov	dph,r2
      0002E7 C0 05            [24] 1531 	push	ar5
      0002E9 C0 04            [24] 1532 	push	ar4
      0002EB 12r00r00         [24] 1533 	lcall	_flash_read_scratch
      0002EE AB 82            [24] 1534 	mov	r3,dpl
      0002F0 D0 04            [24] 1535 	pop	ar4
      0002F2 D0 05            [24] 1536 	pop	ar5
      0002F4 D0 06            [24] 1537 	pop	ar6
      0002F6 D0 07            [24] 1538 	pop	ar7
      0002F8 7A 00            [12] 1539 	mov	r2,#0x00
      0002FA EB               [12] 1540 	mov	a,r3
      0002FB 42 05            [12] 1541 	orl	ar5,a
      0002FD EA               [12] 1542 	mov	a,r2
      0002FE 42 04            [12] 1543 	orl	ar4,a
      000300 EE               [12] 1544 	mov	a,r6
      000301 B5 05 06         [24] 1545 	cjne	a,ar5,00121$
      000304 EF               [12] 1546 	mov	a,r7
      000305 B5 04 02         [24] 1547 	cjne	a,ar4,00121$
      000308 80 02            [24] 1548 	sjmp	00103$
      00030A                       1549 00121$:
                                   1550 ;	radio/parameters.c:246: return false;
      00030A C3               [12] 1551 	clr	c
      00030B 22               [24] 1552 	ret
      00030C                       1553 00103$:
                                   1554 ;	radio/parameters.c:247: return true;
      00030C D3               [12] 1555 	setb	c
      00030D 22               [24] 1556 	ret
                                   1557 ;------------------------------------------------------------
                                   1558 ;Allocation info for local variables in function 'write_params'
                                   1559 ;------------------------------------------------------------
                                   1560 ;input                     Allocated with name '_write_params_input_1_148'
                                   1561 ;sloc0                     Allocated with name '_write_params_sloc0_1_0'
                                   1562 ;start                     Allocated with name '_write_params_PARM_2'
                                   1563 ;size                      Allocated with name '_write_params_PARM_3'
                                   1564 ;i                         Allocated with name '_write_params_i_1_149'
                                   1565 ;checksum                  Allocated with name '_write_params_checksum_1_149'
                                   1566 ;------------------------------------------------------------
                                   1567 ;	radio/parameters.c:250: void write_params(__xdata uint8_t * __data input, uint16_t start, uint8_t size)
                                   1568 ;	-----------------------------------------
                                   1569 ;	 function write_params
                                   1570 ;	-----------------------------------------
      00030E                       1571 _write_params:
      00030E 85 82*06         [24] 1572 	mov	_write_params_input_1_148,dpl
      000311 85 83*07         [24] 1573 	mov	(_write_params_input_1_148 + 1),dph
                                   1574 ;	radio/parameters.c:255: for (i = start; i < start+size; i ++)
      000314 90r00r67         [24] 1575 	mov	dptr,#_write_params_PARM_2
      000317 E0               [24] 1576 	movx	a,@dptr
      000318 FC               [12] 1577 	mov	r4,a
      000319 A3               [24] 1578 	inc	dptr
      00031A E0               [24] 1579 	movx	a,@dptr
      00031B FD               [12] 1580 	mov	r5,a
      00031C 90r00r69         [24] 1581 	mov	dptr,#_write_params_PARM_3
      00031F E0               [24] 1582 	movx	a,@dptr
      000320 FB               [12] 1583 	mov	r3,a
      000321 8C*08            [24] 1584 	mov	_write_params_sloc0_1_0,r4
      000323 8D*09            [24] 1585 	mov	(_write_params_sloc0_1_0 + 1),r5
      000325                       1586 00103$:
      000325 8B 02            [24] 1587 	mov	ar2,r3
      000327 7F 00            [12] 1588 	mov	r7,#0x00
      000329 EA               [12] 1589 	mov	a,r2
      00032A 2C               [12] 1590 	add	a,r4
      00032B FA               [12] 1591 	mov	r2,a
      00032C EF               [12] 1592 	mov	a,r7
      00032D 3D               [12] 1593 	addc	a,r5
      00032E FF               [12] 1594 	mov	r7,a
      00032F C3               [12] 1595 	clr	c
      000330 E5*08            [12] 1596 	mov	a,_write_params_sloc0_1_0
      000332 9A               [12] 1597 	subb	a,r2
      000333 E5*09            [12] 1598 	mov	a,(_write_params_sloc0_1_0 + 1)
      000335 9F               [12] 1599 	subb	a,r7
      000336 50 36            [24] 1600 	jnc	00101$
                                   1601 ;	radio/parameters.c:256: flash_write_scratch(i, input[i-start]);
      000338 E5*08            [12] 1602 	mov	a,_write_params_sloc0_1_0
      00033A C3               [12] 1603 	clr	c
      00033B 9C               [12] 1604 	subb	a,r4
      00033C FE               [12] 1605 	mov	r6,a
      00033D E5*09            [12] 1606 	mov	a,(_write_params_sloc0_1_0 + 1)
      00033F 9D               [12] 1607 	subb	a,r5
      000340 FF               [12] 1608 	mov	r7,a
      000341 EE               [12] 1609 	mov	a,r6
      000342 25*06            [12] 1610 	add	a,_write_params_input_1_148
      000344 F5 82            [12] 1611 	mov	dpl,a
      000346 EF               [12] 1612 	mov	a,r7
      000347 35*07            [12] 1613 	addc	a,(_write_params_input_1_148 + 1)
      000349 F5 83            [12] 1614 	mov	dph,a
      00034B 78r00            [12] 1615 	mov	r0,#_flash_write_scratch_PARM_2
      00034D E0               [24] 1616 	movx	a,@dptr
      00034E F2               [24] 1617 	movx	@r0,a
      00034F 85*08 82         [24] 1618 	mov	dpl,_write_params_sloc0_1_0
      000352 85*09 83         [24] 1619 	mov	dph,(_write_params_sloc0_1_0 + 1)
      000355 C0 05            [24] 1620 	push	ar5
      000357 C0 04            [24] 1621 	push	ar4
      000359 C0 03            [24] 1622 	push	ar3
      00035B 12r00r00         [24] 1623 	lcall	_flash_write_scratch
      00035E D0 03            [24] 1624 	pop	ar3
      000360 D0 04            [24] 1625 	pop	ar4
      000362 D0 05            [24] 1626 	pop	ar5
                                   1627 ;	radio/parameters.c:255: for (i = start; i < start+size; i ++)
      000364 05*08            [12] 1628 	inc	_write_params_sloc0_1_0
      000366 E4               [12] 1629 	clr	a
      000367 B5*08 BB         [24] 1630 	cjne	a,_write_params_sloc0_1_0,00103$
      00036A 05*09            [12] 1631 	inc	(_write_params_sloc0_1_0 + 1)
      00036C 80 B7            [24] 1632 	sjmp	00103$
      00036E                       1633 00101$:
                                   1634 ;	radio/parameters.c:259: checksum = crc16(size, input);
      00036E 85*06*00         [24] 1635 	mov	_crc16_PARM_2,_write_params_input_1_148
      000371 85*07*01         [24] 1636 	mov	(_crc16_PARM_2 + 1),(_write_params_input_1_148 + 1)
      000374 8B 82            [24] 1637 	mov	dpl,r3
      000376 12r00r00         [24] 1638 	lcall	_crc16
      000379 AE 82            [24] 1639 	mov	r6,dpl
      00037B AF 83            [24] 1640 	mov	r7,dph
                                   1641 ;	radio/parameters.c:260: flash_write_scratch(i, checksum&0xFF);
      00037D 8E 04            [24] 1642 	mov	ar4,r6
      00037F 78r00            [12] 1643 	mov	r0,#_flash_write_scratch_PARM_2
      000381 EC               [12] 1644 	mov	a,r4
      000382 F2               [24] 1645 	movx	@r0,a
      000383 85*08 82         [24] 1646 	mov	dpl,_write_params_sloc0_1_0
      000386 85*09 83         [24] 1647 	mov	dph,(_write_params_sloc0_1_0 + 1)
      000389 C0 07            [24] 1648 	push	ar7
      00038B C0 06            [24] 1649 	push	ar6
      00038D 12r00r00         [24] 1650 	lcall	_flash_write_scratch
      000390 D0 06            [24] 1651 	pop	ar6
      000392 D0 07            [24] 1652 	pop	ar7
                                   1653 ;	radio/parameters.c:261: flash_write_scratch(i+1, checksum>>8);
      000394 74 01            [12] 1654 	mov	a,#0x01
      000396 25*08            [12] 1655 	add	a,_write_params_sloc0_1_0
      000398 FC               [12] 1656 	mov	r4,a
      000399 E4               [12] 1657 	clr	a
      00039A 35*09            [12] 1658 	addc	a,(_write_params_sloc0_1_0 + 1)
      00039C FD               [12] 1659 	mov	r5,a
      00039D 78r00            [12] 1660 	mov	r0,#_flash_write_scratch_PARM_2
      00039F EF               [12] 1661 	mov	a,r7
      0003A0 F2               [24] 1662 	movx	@r0,a
      0003A1 8C 82            [24] 1663 	mov	dpl,r4
      0003A3 8D 83            [24] 1664 	mov	dph,r5
      0003A5 02r00r00         [24] 1665 	ljmp	_flash_write_scratch
                                   1666 ;------------------------------------------------------------
                                   1667 ;Allocation info for local variables in function 'param_load'
                                   1668 ;------------------------------------------------------------
                                   1669 ;	radio/parameters.c:265: param_load(void)
                                   1670 ;	-----------------------------------------
                                   1671 ;	 function param_load
                                   1672 ;	-----------------------------------------
      0003A8                       1673 _param_load:
      0003A8 D3               [12] 1674 	setb	c
      0003A9 10 AF 01         [24] 1675 	jbc	ea,00139$
      0003AC C3               [12] 1676 	clr	c
      0003AD                       1677 00139$:
      0003AD C0 D0            [24] 1678 	push	psw
                                   1679 ;	radio/parameters.c:270: param_default();
      0003AF 12r04rEC         [24] 1680 	lcall	_param_default
                                   1681 ;	radio/parameters.c:273: expected = flash_read_scratch(PARAM_FLASH_START);
      0003B2 90 00 00         [24] 1682 	mov	dptr,#0x0000
      0003B5 12r00r00         [24] 1683 	lcall	_flash_read_scratch
                                   1684 ;	radio/parameters.c:274: if (expected > sizeof(parameter_values) || expected < 12*sizeof(param_t))
      0003B8 E5 82            [12] 1685 	mov	a,dpl
      0003BA FF               [12] 1686 	mov	r7,a
      0003BB 24 BB            [12] 1687 	add	a,#0xff - 0x44
      0003BD 40 05            [24] 1688 	jc	00101$
      0003BF BF 30 00         [24] 1689 	cjne	r7,#0x30,00141$
      0003C2                       1690 00141$:
      0003C2 50 04            [24] 1691 	jnc	00102$
      0003C4                       1692 00101$:
                                   1693 ;	radio/parameters.c:275: return false;
      0003C4 C3               [12] 1694 	clr	c
      0003C5 02r04r88         [24] 1695 	ljmp	00115$
      0003C8                       1696 00102$:
                                   1697 ;	radio/parameters.c:278: if(!read_params((__xdata uint8_t *)parameter_values, PARAM_FLASH_START+1, expected))
      0003C8 90r00r64         [24] 1698 	mov	dptr,#_read_params_PARM_2
      0003CB 74 01            [12] 1699 	mov	a,#0x01
      0003CD F0               [24] 1700 	movx	@dptr,a
      0003CE E4               [12] 1701 	clr	a
      0003CF A3               [24] 1702 	inc	dptr
      0003D0 F0               [24] 1703 	movx	@dptr,a
      0003D1 90r00r66         [24] 1704 	mov	dptr,#_read_params_PARM_3
      0003D4 EF               [12] 1705 	mov	a,r7
      0003D5 F0               [24] 1706 	movx	@dptr,a
      0003D6 90r00r00         [24] 1707 	mov	dptr,#_parameter_values
      0003D9 12r02r43         [24] 1708 	lcall	_read_params
                                   1709 ;	radio/parameters.c:279: return false;
      0003DC 40 03            [24] 1710 	jc	00105$
      0003DE 02r04r88         [24] 1711 	ljmp	00115$
      0003E1                       1712 00105$:
                                   1713 ;	radio/parameters.c:282: if (param_get(PARAM_FORMAT) != PARAM_FORMAT_CURRENT) {
      0003E1 75 82 00         [24] 1714 	mov	dpl,#0x00
      0003E4 12r02r15         [24] 1715 	lcall	_param_get
      0003E7 AC 82            [24] 1716 	mov	r4,dpl
      0003E9 AD 83            [24] 1717 	mov	r5,dph
      0003EB AE F0            [24] 1718 	mov	r6,b
      0003ED FF               [12] 1719 	mov	r7,a
      0003EE BC 1A 0B         [24] 1720 	cjne	r4,#0x1A,00144$
      0003F1 BD 00 08         [24] 1721 	cjne	r5,#0x00,00144$
      0003F4 BE 00 05         [24] 1722 	cjne	r6,#0x00,00144$
      0003F7 BF 00 02         [24] 1723 	cjne	r7,#0x00,00144$
      0003FA 80 04            [24] 1724 	sjmp	00121$
      0003FC                       1725 00144$:
                                   1726 ;	radio/parameters.c:284: return false;
      0003FC C3               [12] 1727 	clr	c
      0003FD 02r04r88         [24] 1728 	ljmp	00115$
                                   1729 ;	radio/parameters.c:287: for (i = 0; i < sizeof(parameter_values); i++) {
      000400                       1730 00121$:
      000400 7F 00            [12] 1731 	mov	r7,#0x00
      000402                       1732 00113$:
                                   1733 ;	radio/parameters.c:288: if (!param_check(i, parameter_values[i])) {
      000402 EF               [12] 1734 	mov	a,r7
      000403 75 F0 04         [24] 1735 	mov	b,#0x04
      000406 A4               [48] 1736 	mul	ab
      000407 24r00            [12] 1737 	add	a,#_parameter_values
      000409 FD               [12] 1738 	mov	r5,a
      00040A 74s00            [12] 1739 	mov	a,#(_parameter_values >> 8)
      00040C 35 F0            [12] 1740 	addc	a,b
      00040E FE               [12] 1741 	mov	r6,a
      00040F 8D 82            [24] 1742 	mov	dpl,r5
      000411 8E 83            [24] 1743 	mov	dph,r6
      000413 E0               [24] 1744 	movx	a,@dptr
      000414 F5*00            [12] 1745 	mov	_param_check_PARM_2,a
      000416 A3               [24] 1746 	inc	dptr
      000417 E0               [24] 1747 	movx	a,@dptr
      000418 F5*01            [12] 1748 	mov	(_param_check_PARM_2 + 1),a
      00041A A3               [24] 1749 	inc	dptr
      00041B E0               [24] 1750 	movx	a,@dptr
      00041C F5*02            [12] 1751 	mov	(_param_check_PARM_2 + 2),a
      00041E A3               [24] 1752 	inc	dptr
      00041F E0               [24] 1753 	movx	a,@dptr
      000420 F5*03            [12] 1754 	mov	(_param_check_PARM_2 + 3),a
      000422 8F 82            [24] 1755 	mov	dpl,r7
      000424 C0 07            [24] 1756 	push	ar7
      000426 C0 06            [24] 1757 	push	ar6
      000428 C0 05            [24] 1758 	push	ar5
      00042A 12r00r00         [24] 1759 	lcall	_param_check
      00042D D0 05            [24] 1760 	pop	ar5
      00042F D0 06            [24] 1761 	pop	ar6
      000431 D0 07            [24] 1762 	pop	ar7
      000433 40 32            [24] 1763 	jc	00114$
                                   1764 ;	radio/parameters.c:289: parameter_values[i] = parameter_info[i].default_value;
      000435 EF               [12] 1765 	mov	a,r7
      000436 75 F0 07         [24] 1766 	mov	b,#0x07
      000439 A4               [48] 1767 	mul	ab
      00043A 24r00            [12] 1768 	add	a,#_parameter_info
      00043C FB               [12] 1769 	mov	r3,a
      00043D 74s00            [12] 1770 	mov	a,#(_parameter_info >> 8)
      00043F 35 F0            [12] 1771 	addc	a,b
      000441 FC               [12] 1772 	mov	r4,a
      000442 8B 82            [24] 1773 	mov	dpl,r3
      000444 8C 83            [24] 1774 	mov	dph,r4
      000446 A3               [24] 1775 	inc	dptr
      000447 A3               [24] 1776 	inc	dptr
      000448 A3               [24] 1777 	inc	dptr
      000449 E4               [12] 1778 	clr	a
      00044A 93               [24] 1779 	movc	a,@a+dptr
      00044B F9               [12] 1780 	mov	r1,a
      00044C A3               [24] 1781 	inc	dptr
      00044D E4               [12] 1782 	clr	a
      00044E 93               [24] 1783 	movc	a,@a+dptr
      00044F FA               [12] 1784 	mov	r2,a
      000450 A3               [24] 1785 	inc	dptr
      000451 E4               [12] 1786 	clr	a
      000452 93               [24] 1787 	movc	a,@a+dptr
      000453 FB               [12] 1788 	mov	r3,a
      000454 A3               [24] 1789 	inc	dptr
      000455 E4               [12] 1790 	clr	a
      000456 93               [24] 1791 	movc	a,@a+dptr
      000457 FC               [12] 1792 	mov	r4,a
      000458 8D 82            [24] 1793 	mov	dpl,r5
      00045A 8E 83            [24] 1794 	mov	dph,r6
      00045C E9               [12] 1795 	mov	a,r1
      00045D F0               [24] 1796 	movx	@dptr,a
      00045E EA               [12] 1797 	mov	a,r2
      00045F A3               [24] 1798 	inc	dptr
      000460 F0               [24] 1799 	movx	@dptr,a
      000461 EB               [12] 1800 	mov	a,r3
      000462 A3               [24] 1801 	inc	dptr
      000463 F0               [24] 1802 	movx	@dptr,a
      000464 EC               [12] 1803 	mov	a,r4
      000465 A3               [24] 1804 	inc	dptr
      000466 F0               [24] 1805 	movx	@dptr,a
      000467                       1806 00114$:
                                   1807 ;	radio/parameters.c:287: for (i = 0; i < sizeof(parameter_values); i++) {
      000467 0F               [12] 1808 	inc	r7
      000468 BF 44 00         [24] 1809 	cjne	r7,#0x44,00146$
      00046B                       1810 00146$:
      00046B 40 95            [24] 1811 	jc	00113$
                                   1812 ;	radio/parameters.c:301: if(!read_params((__xdata uint8_t *)encryption_key, PARAM_E_FLASH_START+1, sizeof(encryption_key)))
      00046D 90r00r64         [24] 1813 	mov	dptr,#_read_params_PARM_2
      000470 74 81            [12] 1814 	mov	a,#0x81
      000472 F0               [24] 1815 	movx	@dptr,a
      000473 74 01            [12] 1816 	mov	a,#0x01
      000475 A3               [24] 1817 	inc	dptr
      000476 F0               [24] 1818 	movx	@dptr,a
      000477 90r00r66         [24] 1819 	mov	dptr,#_read_params_PARM_3
      00047A 74 20            [12] 1820 	mov	a,#0x20
      00047C F0               [24] 1821 	movx	@dptr,a
      00047D 90r00r44         [24] 1822 	mov	dptr,#_encryption_key
      000480 12r02r43         [24] 1823 	lcall	_read_params
                                   1824 ;	radio/parameters.c:302: return false;
      000483 40 02            [24] 1825 	jc	00112$
      000485 80 01            [24] 1826 	sjmp	00115$
      000487                       1827 00112$:
                                   1828 ;	radio/parameters.c:304: return true;
      000487 D3               [12] 1829 	setb	c
      000488                       1830 00115$:
      000488 33               [12] 1831 	rlc	a
      000489 D0 D0            [24] 1832 	pop	psw
      00048B 92 AF            [24] 1833 	mov	ea,c
      00048D 13               [12] 1834 	rrc	a
      00048E 22               [24] 1835 	ret
                                   1836 ;------------------------------------------------------------
                                   1837 ;Allocation info for local variables in function 'param_save'
                                   1838 ;------------------------------------------------------------
                                   1839 ;	radio/parameters.c:308: param_save(void)
                                   1840 ;	-----------------------------------------
                                   1841 ;	 function param_save
                                   1842 ;	-----------------------------------------
      00048F                       1843 _param_save:
      00048F D3               [12] 1844 	setb	c
      000490 10 AF 01         [24] 1845 	jbc	ea,00103$
      000493 C3               [12] 1846 	clr	c
      000494                       1847 00103$:
      000494 C0 D0            [24] 1848 	push	psw
                                   1849 ;	radio/parameters.c:312: parameter_values[PARAM_FORMAT] = PARAM_FORMAT_CURRENT;
      000496 90r00r00         [24] 1850 	mov	dptr,#_parameter_values
      000499 74 1A            [12] 1851 	mov	a,#0x1A
      00049B F0               [24] 1852 	movx	@dptr,a
      00049C E4               [12] 1853 	clr	a
      00049D A3               [24] 1854 	inc	dptr
      00049E F0               [24] 1855 	movx	@dptr,a
      00049F A3               [24] 1856 	inc	dptr
      0004A0 F0               [24] 1857 	movx	@dptr,a
      0004A1 A3               [24] 1858 	inc	dptr
      0004A2 F0               [24] 1859 	movx	@dptr,a
                                   1860 ;	radio/parameters.c:315: flash_erase_scratch();
      0004A3 12r00r00         [24] 1861 	lcall	_flash_erase_scratch
                                   1862 ;	radio/parameters.c:318: flash_write_scratch(PARAM_FLASH_START, sizeof(parameter_values));
      0004A6 78r00            [12] 1863 	mov	r0,#_flash_write_scratch_PARM_2
      0004A8 74 44            [12] 1864 	mov	a,#0x44
      0004AA F2               [24] 1865 	movx	@r0,a
      0004AB 90 00 00         [24] 1866 	mov	dptr,#0x0000
      0004AE 12r00r00         [24] 1867 	lcall	_flash_write_scratch
                                   1868 ;	radio/parameters.c:321: write_params((__xdata uint8_t *)parameter_values, PARAM_FLASH_START+1, sizeof(parameter_values));
      0004B1 90r00r67         [24] 1869 	mov	dptr,#_write_params_PARM_2
      0004B4 74 01            [12] 1870 	mov	a,#0x01
      0004B6 F0               [24] 1871 	movx	@dptr,a
      0004B7 E4               [12] 1872 	clr	a
      0004B8 A3               [24] 1873 	inc	dptr
      0004B9 F0               [24] 1874 	movx	@dptr,a
      0004BA 90r00r69         [24] 1875 	mov	dptr,#_write_params_PARM_3
      0004BD 74 44            [12] 1876 	mov	a,#0x44
      0004BF F0               [24] 1877 	movx	@dptr,a
      0004C0 90r00r00         [24] 1878 	mov	dptr,#_parameter_values
      0004C3 12r03r0E         [24] 1879 	lcall	_write_params
                                   1880 ;	radio/parameters.c:331: flash_write_scratch(PARAM_E_FLASH_START, sizeof(encryption_key));
      0004C6 78r00            [12] 1881 	mov	r0,#_flash_write_scratch_PARM_2
      0004C8 74 20            [12] 1882 	mov	a,#0x20
      0004CA F2               [24] 1883 	movx	@r0,a
      0004CB 90 01 80         [24] 1884 	mov	dptr,#0x0180
      0004CE 12r00r00         [24] 1885 	lcall	_flash_write_scratch
                                   1886 ;	radio/parameters.c:332: write_params((__xdata uint8_t *)encryption_key, PARAM_E_FLASH_START+1, sizeof(encryption_key));
      0004D1 90r00r67         [24] 1887 	mov	dptr,#_write_params_PARM_2
      0004D4 74 81            [12] 1888 	mov	a,#0x81
      0004D6 F0               [24] 1889 	movx	@dptr,a
      0004D7 74 01            [12] 1890 	mov	a,#0x01
      0004D9 A3               [24] 1891 	inc	dptr
      0004DA F0               [24] 1892 	movx	@dptr,a
      0004DB 90r00r69         [24] 1893 	mov	dptr,#_write_params_PARM_3
      0004DE 74 20            [12] 1894 	mov	a,#0x20
      0004E0 F0               [24] 1895 	movx	@dptr,a
      0004E1 90r00r44         [24] 1896 	mov	dptr,#_encryption_key
      0004E4 12r03r0E         [24] 1897 	lcall	_write_params
      0004E7 D0 D0            [24] 1898 	pop	psw
      0004E9 92 AF            [24] 1899 	mov	ea,c
      0004EB 22               [24] 1900 	ret
                                   1901 ;------------------------------------------------------------
                                   1902 ;Allocation info for local variables in function 'param_default'
                                   1903 ;------------------------------------------------------------
                                   1904 ;	radio/parameters.c:338: param_default(void)
                                   1905 ;	-----------------------------------------
                                   1906 ;	 function param_default
                                   1907 ;	-----------------------------------------
      0004EC                       1908 _param_default:
                                   1909 ;	radio/parameters.c:343: for (i = 0; i < PARAM_MAX; i++) {
      0004EC 7F 00            [12] 1910 	mov	r7,#0x00
      0004EE                       1911 00102$:
                                   1912 ;	radio/parameters.c:344: parameter_values[i] = parameter_info[i].default_value;
      0004EE EF               [12] 1913 	mov	a,r7
      0004EF 75 F0 04         [24] 1914 	mov	b,#0x04
      0004F2 A4               [48] 1915 	mul	ab
      0004F3 24r00            [12] 1916 	add	a,#_parameter_values
      0004F5 FD               [12] 1917 	mov	r5,a
      0004F6 74s00            [12] 1918 	mov	a,#(_parameter_values >> 8)
      0004F8 35 F0            [12] 1919 	addc	a,b
      0004FA FE               [12] 1920 	mov	r6,a
      0004FB EF               [12] 1921 	mov	a,r7
      0004FC 75 F0 07         [24] 1922 	mov	b,#0x07
      0004FF A4               [48] 1923 	mul	ab
      000500 24r00            [12] 1924 	add	a,#_parameter_info
      000502 FB               [12] 1925 	mov	r3,a
      000503 74s00            [12] 1926 	mov	a,#(_parameter_info >> 8)
      000505 35 F0            [12] 1927 	addc	a,b
      000507 FC               [12] 1928 	mov	r4,a
      000508 8B 82            [24] 1929 	mov	dpl,r3
      00050A 8C 83            [24] 1930 	mov	dph,r4
      00050C A3               [24] 1931 	inc	dptr
      00050D A3               [24] 1932 	inc	dptr
      00050E A3               [24] 1933 	inc	dptr
      00050F E4               [12] 1934 	clr	a
      000510 93               [24] 1935 	movc	a,@a+dptr
      000511 F9               [12] 1936 	mov	r1,a
      000512 A3               [24] 1937 	inc	dptr
      000513 E4               [12] 1938 	clr	a
      000514 93               [24] 1939 	movc	a,@a+dptr
      000515 FA               [12] 1940 	mov	r2,a
      000516 A3               [24] 1941 	inc	dptr
      000517 E4               [12] 1942 	clr	a
      000518 93               [24] 1943 	movc	a,@a+dptr
      000519 FB               [12] 1944 	mov	r3,a
      00051A A3               [24] 1945 	inc	dptr
      00051B E4               [12] 1946 	clr	a
      00051C 93               [24] 1947 	movc	a,@a+dptr
      00051D FC               [12] 1948 	mov	r4,a
      00051E 8D 82            [24] 1949 	mov	dpl,r5
      000520 8E 83            [24] 1950 	mov	dph,r6
      000522 E9               [12] 1951 	mov	a,r1
      000523 F0               [24] 1952 	movx	@dptr,a
      000524 EA               [12] 1953 	mov	a,r2
      000525 A3               [24] 1954 	inc	dptr
      000526 F0               [24] 1955 	movx	@dptr,a
      000527 EB               [12] 1956 	mov	a,r3
      000528 A3               [24] 1957 	inc	dptr
      000529 F0               [24] 1958 	movx	@dptr,a
      00052A EC               [12] 1959 	mov	a,r4
      00052B A3               [24] 1960 	inc	dptr
      00052C F0               [24] 1961 	movx	@dptr,a
                                   1962 ;	radio/parameters.c:343: for (i = 0; i < PARAM_MAX; i++) {
      00052D 0F               [12] 1963 	inc	r7
      00052E BF 11 00         [24] 1964 	cjne	r7,#0x11,00110$
      000531                       1965 00110$:
      000531 40 BB            [24] 1966 	jc	00102$
      000533 22               [24] 1967 	ret
                                   1968 ;------------------------------------------------------------
                                   1969 ;Allocation info for local variables in function 'param_id'
                                   1970 ;------------------------------------------------------------
                                   1971 ;	radio/parameters.c:357: param_id(__data char * __pdata name)
                                   1972 ;	-----------------------------------------
                                   1973 ;	 function param_id
                                   1974 ;	-----------------------------------------
      000534                       1975 _param_id:
      000534 AF 82            [24] 1976 	mov	r7,dpl
                                   1977 ;	radio/parameters.c:361: for (i = 0; i < PARAM_MAX; i++) {
      000536 7E 00            [12] 1978 	mov	r6,#0x00
      000538                       1979 00104$:
                                   1980 ;	radio/parameters.c:362: if (!strcmp(name, parameter_info[i].name))
      000538 8F 03            [24] 1981 	mov	ar3,r7
      00053A 7C 00            [12] 1982 	mov	r4,#0x00
      00053C 7D 40            [12] 1983 	mov	r5,#0x40
      00053E EE               [12] 1984 	mov	a,r6
      00053F 75 F0 07         [24] 1985 	mov	b,#0x07
      000542 A4               [48] 1986 	mul	ab
      000543 24r00            [12] 1987 	add	a,#_parameter_info
      000545 F5 82            [12] 1988 	mov	dpl,a
      000547 74s00            [12] 1989 	mov	a,#(_parameter_info >> 8)
      000549 35 F0            [12] 1990 	addc	a,b
      00054B F5 83            [12] 1991 	mov	dph,a
      00054D E4               [12] 1992 	clr	a
      00054E 93               [24] 1993 	movc	a,@a+dptr
      00054F F8               [12] 1994 	mov	r0,a
      000550 A3               [24] 1995 	inc	dptr
      000551 E4               [12] 1996 	clr	a
      000552 93               [24] 1997 	movc	a,@a+dptr
      000553 F9               [12] 1998 	mov	r1,a
      000554 A3               [24] 1999 	inc	dptr
      000555 E4               [12] 2000 	clr	a
      000556 93               [24] 2001 	movc	a,@a+dptr
      000557 FA               [12] 2002 	mov	r2,a
      000558 90r00r00         [24] 2003 	mov	dptr,#_strcmp_PARM_2
      00055B E8               [12] 2004 	mov	a,r0
      00055C F0               [24] 2005 	movx	@dptr,a
      00055D E9               [12] 2006 	mov	a,r1
      00055E A3               [24] 2007 	inc	dptr
      00055F F0               [24] 2008 	movx	@dptr,a
      000560 EA               [12] 2009 	mov	a,r2
      000561 A3               [24] 2010 	inc	dptr
      000562 F0               [24] 2011 	movx	@dptr,a
      000563 8B 82            [24] 2012 	mov	dpl,r3
      000565 8C 83            [24] 2013 	mov	dph,r4
      000567 8D F0            [24] 2014 	mov	b,r5
      000569 C0 07            [24] 2015 	push	ar7
      00056B C0 06            [24] 2016 	push	ar6
      00056D 12r00r00         [24] 2017 	lcall	_strcmp
      000570 E5 82            [12] 2018 	mov	a,dpl
      000572 85 83 F0         [24] 2019 	mov	b,dph
      000575 D0 06            [24] 2020 	pop	ar6
      000577 D0 07            [24] 2021 	pop	ar7
      000579 45 F0            [12] 2022 	orl	a,b
      00057B 60 06            [24] 2023 	jz	00103$
                                   2024 ;	radio/parameters.c:361: for (i = 0; i < PARAM_MAX; i++) {
      00057D 0E               [12] 2025 	inc	r6
      00057E BE 11 00         [24] 2026 	cjne	r6,#0x11,00116$
      000581                       2027 00116$:
      000581 40 B5            [24] 2028 	jc	00104$
      000583                       2029 00103$:
                                   2030 ;	radio/parameters.c:365: return i;
      000583 8E 82            [24] 2031 	mov	dpl,r6
      000585 22               [24] 2032 	ret
                                   2033 ;------------------------------------------------------------
                                   2034 ;Allocation info for local variables in function 'param_name'
                                   2035 ;------------------------------------------------------------
                                   2036 ;param                     Allocated to registers r7 
                                   2037 ;------------------------------------------------------------
                                   2038 ;	radio/parameters.c:369: param_name(__data enum ParamID param)
                                   2039 ;	-----------------------------------------
                                   2040 ;	 function param_name
                                   2041 ;	-----------------------------------------
      000586                       2042 _param_name:
      000586 AF 82            [24] 2043 	mov	r7,dpl
                                   2044 ;	radio/parameters.c:371: if (param < PARAM_MAX) {
      000588 BF 11 00         [24] 2045 	cjne	r7,#0x11,00108$
      00058B                       2046 00108$:
      00058B 50 21            [24] 2047 	jnc	00102$
                                   2048 ;	radio/parameters.c:372: return parameter_info[param].name;
      00058D EF               [12] 2049 	mov	a,r7
      00058E 75 F0 07         [24] 2050 	mov	b,#0x07
      000591 A4               [48] 2051 	mul	ab
      000592 24r00            [12] 2052 	add	a,#_parameter_info
      000594 F5 82            [12] 2053 	mov	dpl,a
      000596 74s00            [12] 2054 	mov	a,#(_parameter_info >> 8)
      000598 35 F0            [12] 2055 	addc	a,b
      00059A F5 83            [12] 2056 	mov	dph,a
      00059C E4               [12] 2057 	clr	a
      00059D 93               [24] 2058 	movc	a,@a+dptr
      00059E FD               [12] 2059 	mov	r5,a
      00059F A3               [24] 2060 	inc	dptr
      0005A0 E4               [12] 2061 	clr	a
      0005A1 93               [24] 2062 	movc	a,@a+dptr
      0005A2 FE               [12] 2063 	mov	r6,a
      0005A3 A3               [24] 2064 	inc	dptr
      0005A4 E4               [12] 2065 	clr	a
      0005A5 93               [24] 2066 	movc	a,@a+dptr
      0005A6 FF               [12] 2067 	mov	r7,a
      0005A7 8D 82            [24] 2068 	mov	dpl,r5
      0005A9 8E 83            [24] 2069 	mov	dph,r6
      0005AB 8F F0            [24] 2070 	mov	b,r7
      0005AD 22               [24] 2071 	ret
      0005AE                       2072 00102$:
                                   2073 ;	radio/parameters.c:374: return 0;
      0005AE 90 00 00         [24] 2074 	mov	dptr,#0x0000
      0005B1 75 F0 00         [24] 2075 	mov	b,#0x00
      0005B4 22               [24] 2076 	ret
                                   2077 ;------------------------------------------------------------
                                   2078 ;Allocation info for local variables in function 'constrain'
                                   2079 ;------------------------------------------------------------
                                   2080 ;	radio/parameters.c:378: uint32_t constrain(__pdata uint32_t v, __pdata uint32_t min, __pdata uint32_t max)
                                   2081 ;	-----------------------------------------
                                   2082 ;	 function constrain
                                   2083 ;	-----------------------------------------
      0005B5                       2084 _constrain:
      0005B5 AC 82            [24] 2085 	mov	r4,dpl
      0005B7 AD 83            [24] 2086 	mov	r5,dph
      0005B9 AE F0            [24] 2087 	mov	r6,b
      0005BB FF               [12] 2088 	mov	r7,a
                                   2089 ;	radio/parameters.c:380: if (v < min) v = min;
      0005BC 78r04            [12] 2090 	mov	r0,#_constrain_PARM_2
      0005BE C3               [12] 2091 	clr	c
      0005BF E2               [24] 2092 	movx	a,@r0
      0005C0 F5 F0            [12] 2093 	mov	b,a
      0005C2 EC               [12] 2094 	mov	a,r4
      0005C3 95 F0            [12] 2095 	subb	a,b
      0005C5 08               [12] 2096 	inc	r0
      0005C6 E2               [24] 2097 	movx	a,@r0
      0005C7 F5 F0            [12] 2098 	mov	b,a
      0005C9 ED               [12] 2099 	mov	a,r5
      0005CA 95 F0            [12] 2100 	subb	a,b
      0005CC 08               [12] 2101 	inc	r0
      0005CD E2               [24] 2102 	movx	a,@r0
      0005CE F5 F0            [12] 2103 	mov	b,a
      0005D0 EE               [12] 2104 	mov	a,r6
      0005D1 95 F0            [12] 2105 	subb	a,b
      0005D3 08               [12] 2106 	inc	r0
      0005D4 E2               [24] 2107 	movx	a,@r0
      0005D5 F5 F0            [12] 2108 	mov	b,a
      0005D7 EF               [12] 2109 	mov	a,r7
      0005D8 95 F0            [12] 2110 	subb	a,b
      0005DA 50 0D            [24] 2111 	jnc	00102$
      0005DC 78r04            [12] 2112 	mov	r0,#_constrain_PARM_2
      0005DE E2               [24] 2113 	movx	a,@r0
      0005DF FC               [12] 2114 	mov	r4,a
      0005E0 08               [12] 2115 	inc	r0
      0005E1 E2               [24] 2116 	movx	a,@r0
      0005E2 FD               [12] 2117 	mov	r5,a
      0005E3 08               [12] 2118 	inc	r0
      0005E4 E2               [24] 2119 	movx	a,@r0
      0005E5 FE               [12] 2120 	mov	r6,a
      0005E6 08               [12] 2121 	inc	r0
      0005E7 E2               [24] 2122 	movx	a,@r0
      0005E8 FF               [12] 2123 	mov	r7,a
      0005E9                       2124 00102$:
                                   2125 ;	radio/parameters.c:381: if (v > max) v = max;
      0005E9 78r08            [12] 2126 	mov	r0,#_constrain_PARM_3
      0005EB C3               [12] 2127 	clr	c
      0005EC E2               [24] 2128 	movx	a,@r0
      0005ED 9C               [12] 2129 	subb	a,r4
      0005EE 08               [12] 2130 	inc	r0
      0005EF E2               [24] 2131 	movx	a,@r0
      0005F0 9D               [12] 2132 	subb	a,r5
      0005F1 08               [12] 2133 	inc	r0
      0005F2 E2               [24] 2134 	movx	a,@r0
      0005F3 9E               [12] 2135 	subb	a,r6
      0005F4 08               [12] 2136 	inc	r0
      0005F5 E2               [24] 2137 	movx	a,@r0
      0005F6 9F               [12] 2138 	subb	a,r7
      0005F7 50 0D            [24] 2139 	jnc	00104$
      0005F9 78r08            [12] 2140 	mov	r0,#_constrain_PARM_3
      0005FB E2               [24] 2141 	movx	a,@r0
      0005FC FC               [12] 2142 	mov	r4,a
      0005FD 08               [12] 2143 	inc	r0
      0005FE E2               [24] 2144 	movx	a,@r0
      0005FF FD               [12] 2145 	mov	r5,a
      000600 08               [12] 2146 	inc	r0
      000601 E2               [24] 2147 	movx	a,@r0
      000602 FE               [12] 2148 	mov	r6,a
      000603 08               [12] 2149 	inc	r0
      000604 E2               [24] 2150 	movx	a,@r0
      000605 FF               [12] 2151 	mov	r7,a
      000606                       2152 00104$:
                                   2153 ;	radio/parameters.c:382: return v;
      000606 8C 82            [24] 2154 	mov	dpl,r4
      000608 8D 83            [24] 2155 	mov	dph,r5
      00060A 8E F0            [24] 2156 	mov	b,r6
      00060C EF               [12] 2157 	mov	a,r7
      00060D 22               [24] 2158 	ret
                                   2159 ;------------------------------------------------------------
                                   2160 ;Allocation info for local variables in function 'read_hex_nibble'
                                   2161 ;------------------------------------------------------------
                                   2162 ;c                         Allocated to registers r7 
                                   2163 ;------------------------------------------------------------
                                   2164 ;	radio/parameters.c:495: uint8_t read_hex_nibble(const uint8_t c) __reentrant
                                   2165 ;	-----------------------------------------
                                   2166 ;	 function read_hex_nibble
                                   2167 ;	-----------------------------------------
      00060E                       2168 _read_hex_nibble:
      00060E AF 82            [24] 2169 	mov	r7,dpl
                                   2170 ;	radio/parameters.c:497: if ((c >='0') && (c <= '9'))
      000610 BF 30 00         [24] 2171 	cjne	r7,#0x30,00133$
      000613                       2172 00133$:
      000613 40 0D            [24] 2173 	jc	00110$
      000615 EF               [12] 2174 	mov	a,r7
      000616 24 C6            [12] 2175 	add	a,#0xff - 0x39
      000618 40 08            [24] 2176 	jc	00110$
                                   2177 ;	radio/parameters.c:499: return c - '0';
      00061A 8F 06            [24] 2178 	mov	ar6,r7
      00061C EE               [12] 2179 	mov	a,r6
      00061D 24 D0            [12] 2180 	add	a,#0xD0
      00061F F5 82            [12] 2181 	mov	dpl,a
      000621 22               [24] 2182 	ret
      000622                       2183 00110$:
                                   2184 ;	radio/parameters.c:501: else if ((c >='A') && (c <= 'F'))
      000622 BF 41 00         [24] 2185 	cjne	r7,#0x41,00136$
      000625                       2186 00136$:
      000625 40 0D            [24] 2187 	jc	00106$
      000627 EF               [12] 2188 	mov	a,r7
      000628 24 B9            [12] 2189 	add	a,#0xff - 0x46
      00062A 40 08            [24] 2190 	jc	00106$
                                   2191 ;	radio/parameters.c:503: return c - 'A' + 10;
      00062C 8F 06            [24] 2192 	mov	ar6,r7
      00062E 74 C9            [12] 2193 	mov	a,#0xC9
      000630 2E               [12] 2194 	add	a,r6
      000631 F5 82            [12] 2195 	mov	dpl,a
      000633 22               [24] 2196 	ret
      000634                       2197 00106$:
                                   2198 ;	radio/parameters.c:505: else if ((c >='a') && (c <= 'f'))
      000634 BF 61 00         [24] 2199 	cjne	r7,#0x61,00139$
      000637                       2200 00139$:
      000637 40 0B            [24] 2201 	jc	00102$
      000639 EF               [12] 2202 	mov	a,r7
      00063A 24 99            [12] 2203 	add	a,#0xff - 0x66
      00063C 40 06            [24] 2204 	jc	00102$
                                   2205 ;	radio/parameters.c:507: return c - 'a' + 10;
      00063E 74 A9            [12] 2206 	mov	a,#0xA9
      000640 2F               [12] 2207 	add	a,r7
      000641 F5 82            [12] 2208 	mov	dpl,a
      000643 22               [24] 2209 	ret
      000644                       2210 00102$:
                                   2211 ;	radio/parameters.c:512: return 0;
      000644 75 82 00         [24] 2212 	mov	dpl,#0x00
      000647 22               [24] 2213 	ret
                                   2214 ;------------------------------------------------------------
                                   2215 ;Allocation info for local variables in function 'convert_to_hex'
                                   2216 ;------------------------------------------------------------
                                   2217 ;sloc0                     Allocated with name '_convert_to_hex_sloc0_1_0'
                                   2218 ;str_out                   Allocated with name '_convert_to_hex_PARM_2'
                                   2219 ;str_in                    Allocated with name '_convert_to_hex_str_in_1_174'
                                   2220 ;------------------------------------------------------------
                                   2221 ;	radio/parameters.c:519: void convert_to_hex(__xdata unsigned char *str_in, __xdata unsigned char *str_out,	__pdata uint8_t key_length)
                                   2222 ;	-----------------------------------------
                                   2223 ;	 function convert_to_hex
                                   2224 ;	-----------------------------------------
      000648                       2225 _convert_to_hex:
      000648 AF 83            [24] 2226 	mov	r7,dph
      00064A E5 82            [12] 2227 	mov	a,dpl
      00064C 90r00r6C         [24] 2228 	mov	dptr,#_convert_to_hex_str_in_1_174
      00064F F0               [24] 2229 	movx	@dptr,a
      000650 EF               [12] 2230 	mov	a,r7
      000651 A3               [24] 2231 	inc	dptr
      000652 F0               [24] 2232 	movx	@dptr,a
                                   2233 ;	radio/parameters.c:523: for (i=0;i<key_length;i++) {
      000653 90r00r6C         [24] 2234 	mov	dptr,#_convert_to_hex_str_in_1_174
      000656 E0               [24] 2235 	movx	a,@dptr
      000657 FE               [12] 2236 	mov	r6,a
      000658 A3               [24] 2237 	inc	dptr
      000659 E0               [24] 2238 	movx	a,@dptr
      00065A FF               [12] 2239 	mov	r7,a
      00065B 90r00r6A         [24] 2240 	mov	dptr,#_convert_to_hex_PARM_2
      00065E E0               [24] 2241 	movx	a,@dptr
      00065F F5*0A            [12] 2242 	mov	_convert_to_hex_sloc0_1_0,a
      000661 A3               [24] 2243 	inc	dptr
      000662 E0               [24] 2244 	movx	a,@dptr
      000663 F5*0B            [12] 2245 	mov	(_convert_to_hex_sloc0_1_0 + 1),a
      000665 78r0D            [12] 2246 	mov	r0,#_convert_to_hex_i_1_175
      000667 E4               [12] 2247 	clr	a
      000668 F2               [24] 2248 	movx	@r0,a
      000669                       2249 00103$:
      000669 78r0D            [12] 2250 	mov	r0,#_convert_to_hex_i_1_175
      00066B 79r0C            [12] 2251 	mov	r1,#_convert_to_hex_PARM_3
      00066D C3               [12] 2252 	clr	c
      00066E E3               [24] 2253 	movx	a,@r1
      00066F F5 F0            [12] 2254 	mov	b,a
      000671 E2               [24] 2255 	movx	a,@r0
      000672 95 F0            [12] 2256 	subb	a,b
      000674 50 68            [24] 2257 	jnc	00105$
                                   2258 ;	radio/parameters.c:524: num = read_hex_nibble(str_in[2 * i])<<4;
      000676 78r0D            [12] 2259 	mov	r0,#_convert_to_hex_i_1_175
      000678 E2               [24] 2260 	movx	a,@r0
      000679 75 F0 02         [24] 2261 	mov	b,#0x02
      00067C A4               [48] 2262 	mul	ab
      00067D FA               [12] 2263 	mov	r2,a
      00067E AB F0            [24] 2264 	mov	r3,b
      000680 2E               [12] 2265 	add	a,r6
      000681 F5 82            [12] 2266 	mov	dpl,a
      000683 EB               [12] 2267 	mov	a,r3
      000684 3F               [12] 2268 	addc	a,r7
      000685 F5 83            [12] 2269 	mov	dph,a
      000687 E0               [24] 2270 	movx	a,@dptr
      000688 F5 82            [12] 2271 	mov	dpl,a
      00068A C0 07            [24] 2272 	push	ar7
      00068C C0 06            [24] 2273 	push	ar6
      00068E C0 03            [24] 2274 	push	ar3
      000690 C0 02            [24] 2275 	push	ar2
      000692 12r06r0E         [24] 2276 	lcall	_read_hex_nibble
      000695 AD 82            [24] 2277 	mov	r5,dpl
      000697 D0 02            [24] 2278 	pop	ar2
      000699 D0 03            [24] 2279 	pop	ar3
      00069B D0 06            [24] 2280 	pop	ar6
      00069D D0 07            [24] 2281 	pop	ar7
      00069F ED               [12] 2282 	mov	a,r5
      0006A0 C4               [12] 2283 	swap	a
      0006A1 54 F0            [12] 2284 	anl	a,#0xF0
      0006A3 FD               [12] 2285 	mov	r5,a
                                   2286 ;	radio/parameters.c:525: num += read_hex_nibble(str_in[2 * i + 1]);
      0006A4 0A               [12] 2287 	inc	r2
      0006A5 BA 00 01         [24] 2288 	cjne	r2,#0x00,00115$
      0006A8 0B               [12] 2289 	inc	r3
      0006A9                       2290 00115$:
      0006A9 EA               [12] 2291 	mov	a,r2
      0006AA 2E               [12] 2292 	add	a,r6
      0006AB F5 82            [12] 2293 	mov	dpl,a
      0006AD EB               [12] 2294 	mov	a,r3
      0006AE 3F               [12] 2295 	addc	a,r7
      0006AF F5 83            [12] 2296 	mov	dph,a
      0006B1 E0               [24] 2297 	movx	a,@dptr
      0006B2 F5 82            [12] 2298 	mov	dpl,a
      0006B4 C0 07            [24] 2299 	push	ar7
      0006B6 C0 06            [24] 2300 	push	ar6
      0006B8 C0 05            [24] 2301 	push	ar5
      0006BA 12r06r0E         [24] 2302 	lcall	_read_hex_nibble
      0006BD AC 82            [24] 2303 	mov	r4,dpl
      0006BF D0 05            [24] 2304 	pop	ar5
      0006C1 D0 06            [24] 2305 	pop	ar6
      0006C3 D0 07            [24] 2306 	pop	ar7
      0006C5 EC               [12] 2307 	mov	a,r4
      0006C6 2D               [12] 2308 	add	a,r5
      0006C7 FD               [12] 2309 	mov	r5,a
                                   2310 ;	radio/parameters.c:526: str_out[i] = num;
      0006C8 78r0D            [12] 2311 	mov	r0,#_convert_to_hex_i_1_175
      0006CA E2               [24] 2312 	movx	a,@r0
      0006CB 25*0A            [12] 2313 	add	a,_convert_to_hex_sloc0_1_0
      0006CD F5 82            [12] 2314 	mov	dpl,a
      0006CF E4               [12] 2315 	clr	a
      0006D0 35*0B            [12] 2316 	addc	a,(_convert_to_hex_sloc0_1_0 + 1)
      0006D2 F5 83            [12] 2317 	mov	dph,a
      0006D4 ED               [12] 2318 	mov	a,r5
      0006D5 F0               [24] 2319 	movx	@dptr,a
                                   2320 ;	radio/parameters.c:523: for (i=0;i<key_length;i++) {
      0006D6 78r0D            [12] 2321 	mov	r0,#_convert_to_hex_i_1_175
      0006D8 E2               [24] 2322 	movx	a,@r0
      0006D9 24 01            [12] 2323 	add	a,#0x01
      0006DB F2               [24] 2324 	movx	@r0,a
      0006DC 80 8B            [24] 2325 	sjmp	00103$
      0006DE                       2326 00105$:
      0006DE 22               [24] 2327 	ret
                                   2328 ;------------------------------------------------------------
                                   2329 ;Allocation info for local variables in function 'param_set_default_encryption_key'
                                   2330 ;------------------------------------------------------------
                                   2331 ;b                         Allocated with name '_param_set_default_encryption_key_b_1_178'
                                   2332 ;------------------------------------------------------------
                                   2333 ;	radio/parameters.c:532: void param_set_default_encryption_key(__pdata uint8_t key_length)
                                   2334 ;	-----------------------------------------
                                   2335 ;	 function param_set_default_encryption_key
                                   2336 ;	-----------------------------------------
      0006DF                       2337 _param_set_default_encryption_key:
      0006DF AF 82            [24] 2338 	mov	r7,dpl
                                   2339 ;	radio/parameters.c:535: __xdata uint8_t b[] = {0x62};
      0006E1 90r00r6E         [24] 2340 	mov	dptr,#_param_set_default_encryption_key_b_1_178
      0006E4 74 62            [12] 2341 	mov	a,#0x62
      0006E6 F0               [24] 2342 	movx	@dptr,a
                                   2343 ;	radio/parameters.c:537: for (i=0;i< key_length;i++) {
      0006E7 7E 00            [12] 2344 	mov	r6,#0x00
      0006E9                       2345 00103$:
      0006E9 C3               [12] 2346 	clr	c
      0006EA EE               [12] 2347 	mov	a,r6
      0006EB 9F               [12] 2348 	subb	a,r7
      0006EC 50 33            [24] 2349 	jnc	00105$
                                   2350 ;	radio/parameters.c:539: memcpy(&encryption_key[i], &b, 1);
      0006EE EE               [12] 2351 	mov	a,r6
      0006EF 24r44            [12] 2352 	add	a,#_encryption_key
      0006F1 FC               [12] 2353 	mov	r4,a
      0006F2 E4               [12] 2354 	clr	a
      0006F3 34s00            [12] 2355 	addc	a,#(_encryption_key >> 8)
      0006F5 FD               [12] 2356 	mov	r5,a
      0006F6 7B 00            [12] 2357 	mov	r3,#0x00
      0006F8 90r00r00         [24] 2358 	mov	dptr,#_memcpy_PARM_2
      0006FB 74r6E            [12] 2359 	mov	a,#_param_set_default_encryption_key_b_1_178
      0006FD F0               [24] 2360 	movx	@dptr,a
      0006FE 74s00            [12] 2361 	mov	a,#(_param_set_default_encryption_key_b_1_178 >> 8)
      000700 A3               [24] 2362 	inc	dptr
      000701 F0               [24] 2363 	movx	@dptr,a
      000702 E4               [12] 2364 	clr	a
      000703 A3               [24] 2365 	inc	dptr
      000704 F0               [24] 2366 	movx	@dptr,a
      000705 90r00r00         [24] 2367 	mov	dptr,#_memcpy_PARM_3
      000708 04               [12] 2368 	inc	a
      000709 F0               [24] 2369 	movx	@dptr,a
      00070A E4               [12] 2370 	clr	a
      00070B A3               [24] 2371 	inc	dptr
      00070C F0               [24] 2372 	movx	@dptr,a
      00070D 8C 82            [24] 2373 	mov	dpl,r4
      00070F 8D 83            [24] 2374 	mov	dph,r5
      000711 8B F0            [24] 2375 	mov	b,r3
      000713 C0 07            [24] 2376 	push	ar7
      000715 C0 06            [24] 2377 	push	ar6
      000717 12r00r00         [24] 2378 	lcall	_memcpy
      00071A D0 06            [24] 2379 	pop	ar6
      00071C D0 07            [24] 2380 	pop	ar7
                                   2381 ;	radio/parameters.c:537: for (i=0;i< key_length;i++) {
      00071E 0E               [12] 2382 	inc	r6
      00071F 80 C8            [24] 2383 	sjmp	00103$
      000721                       2384 00105$:
      000721 22               [24] 2385 	ret
                                   2386 ;------------------------------------------------------------
                                   2387 ;Allocation info for local variables in function 'param_set_encryption_key'
                                   2388 ;------------------------------------------------------------
                                   2389 ;sloc0                     Allocated with name '_param_set_encryption_key_sloc0_1_0'
                                   2390 ;key                       Allocated with name '_param_set_encryption_key_key_1_180'
                                   2391 ;------------------------------------------------------------
                                   2392 ;	radio/parameters.c:550: param_set_encryption_key(__xdata unsigned char *key)
                                   2393 ;	-----------------------------------------
                                   2394 ;	 function param_set_encryption_key
                                   2395 ;	-----------------------------------------
      000722                       2396 _param_set_encryption_key:
      000722 AF 83            [24] 2397 	mov	r7,dph
      000724 E5 82            [12] 2398 	mov	a,dpl
      000726 90r00r6F         [24] 2399 	mov	dptr,#_param_set_encryption_key_key_1_180
      000729 F0               [24] 2400 	movx	@dptr,a
      00072A EF               [12] 2401 	mov	a,r7
      00072B A3               [24] 2402 	inc	dptr
      00072C F0               [24] 2403 	movx	@dptr,a
                                   2404 ;	radio/parameters.c:556: key_length = AES_KEY_LENGTH(param_get(PARAM_ENCRYPTION));
      00072D 75 82 10         [24] 2405 	mov	dpl,#0x10
      000730 12r02r15         [24] 2406 	lcall	_param_get
      000733 AC 82            [24] 2407 	mov	r4,dpl
      000735 53 04 0F         [24] 2408 	anl	ar4,#0x0F
      000738 0C               [12] 2409 	inc	r4
      000739 EC               [12] 2410 	mov	a,r4
      00073A C4               [12] 2411 	swap	a
      00073B 03               [12] 2412 	rr	a
      00073C 54 F8            [12] 2413 	anl	a,#0xF8
      00073E FF               [12] 2414 	mov	r7,a
                                   2415 ;	radio/parameters.c:557: len = strlen(key);
      00073F 90r00r6F         [24] 2416 	mov	dptr,#_param_set_encryption_key_key_1_180
      000742 E0               [24] 2417 	movx	a,@dptr
      000743 FD               [12] 2418 	mov	r5,a
      000744 A3               [24] 2419 	inc	dptr
      000745 E0               [24] 2420 	movx	a,@dptr
      000746 FE               [12] 2421 	mov	r6,a
      000747 8D 02            [24] 2422 	mov	ar2,r5
      000749 8E 03            [24] 2423 	mov	ar3,r6
      00074B 7C 00            [12] 2424 	mov	r4,#0x00
      00074D 8A 82            [24] 2425 	mov	dpl,r2
      00074F 8B 83            [24] 2426 	mov	dph,r3
      000751 8C F0            [24] 2427 	mov	b,r4
      000753 C0 07            [24] 2428 	push	ar7
      000755 C0 06            [24] 2429 	push	ar6
      000757 C0 05            [24] 2430 	push	ar5
      000759 12r00r00         [24] 2431 	lcall	_strlen
      00075C AB 82            [24] 2432 	mov	r3,dpl
      00075E D0 05            [24] 2433 	pop	ar5
      000760 D0 06            [24] 2434 	pop	ar6
      000762 D0 07            [24] 2435 	pop	ar7
                                   2436 ;	radio/parameters.c:559: if (len < 2 * key_length ) {
      000764 EF               [12] 2437 	mov	a,r7
      000765 75 F0 02         [24] 2438 	mov	b,#0x02
      000768 A4               [48] 2439 	mul	ab
      000769 FA               [12] 2440 	mov	r2,a
      00076A AC F0            [24] 2441 	mov	r4,b
      00076C 8B*0C            [24] 2442 	mov	_param_set_encryption_key_sloc0_1_0,r3
      00076E 75*0D 00         [24] 2443 	mov	(_param_set_encryption_key_sloc0_1_0 + 1),#0x00
      000771 C3               [12] 2444 	clr	c
      000772 E5*0C            [12] 2445 	mov	a,_param_set_encryption_key_sloc0_1_0
      000774 9A               [12] 2446 	subb	a,r2
      000775 E5*0D            [12] 2447 	mov	a,(_param_set_encryption_key_sloc0_1_0 + 1)
      000777 64 80            [12] 2448 	xrl	a,#0x80
      000779 8C F0            [24] 2449 	mov	b,r4
      00077B 63 F0 80         [24] 2450 	xrl	b,#0x80
      00077E 95 F0            [12] 2451 	subb	a,b
      000780 50 2C            [24] 2452 	jnc	00102$
                                   2453 ;	radio/parameters.c:560: param_set_default_encryption_key(key_length);
      000782 8F 82            [24] 2454 	mov	dpl,r7
      000784 C0 04            [24] 2455 	push	ar4
      000786 C0 02            [24] 2456 	push	ar2
      000788 12r06rDF         [24] 2457 	lcall	_param_set_default_encryption_key
      00078B D0 02            [24] 2458 	pop	ar2
      00078D D0 04            [24] 2459 	pop	ar4
                                   2460 ;	radio/parameters.c:562: printf("ERROR - Key length:%u, Required %u\n",len, 2 * key_length);
      00078F C0 02            [24] 2461 	push	ar2
      000791 C0 04            [24] 2462 	push	ar4
      000793 C0*0C            [24] 2463 	push	_param_set_encryption_key_sloc0_1_0
      000795 C0*0D            [24] 2464 	push	(_param_set_encryption_key_sloc0_1_0 + 1)
      000797 74r77            [12] 2465 	mov	a,#___str_0
      000799 C0 E0            [24] 2466 	push	acc
      00079B 74s00            [12] 2467 	mov	a,#(___str_0 >> 8)
      00079D C0 E0            [24] 2468 	push	acc
      00079F 74 80            [12] 2469 	mov	a,#0x80
      0007A1 C0 E0            [24] 2470 	push	acc
      0007A3 12r00r00         [24] 2471 	lcall	_printfl
      0007A6 E5 81            [12] 2472 	mov	a,sp
      0007A8 24 F9            [12] 2473 	add	a,#0xf9
      0007AA F5 81            [12] 2474 	mov	sp,a
                                   2475 ;	radio/parameters.c:563: return true;
      0007AC D3               [12] 2476 	setb	c
      0007AD 22               [24] 2477 	ret
      0007AE                       2478 00102$:
                                   2479 ;	radio/parameters.c:567: printf("key len %d\n",key_length);
      0007AE 8F 03            [24] 2480 	mov	ar3,r7
      0007B0 7C 00            [12] 2481 	mov	r4,#0x00
      0007B2 C0 07            [24] 2482 	push	ar7
      0007B4 C0 06            [24] 2483 	push	ar6
      0007B6 C0 05            [24] 2484 	push	ar5
      0007B8 C0 03            [24] 2485 	push	ar3
      0007BA C0 04            [24] 2486 	push	ar4
      0007BC 74r9B            [12] 2487 	mov	a,#___str_1
      0007BE C0 E0            [24] 2488 	push	acc
      0007C0 74s00            [12] 2489 	mov	a,#(___str_1 >> 8)
      0007C2 C0 E0            [24] 2490 	push	acc
      0007C4 74 80            [12] 2491 	mov	a,#0x80
      0007C6 C0 E0            [24] 2492 	push	acc
      0007C8 12r00r00         [24] 2493 	lcall	_printfl
      0007CB E5 81            [12] 2494 	mov	a,sp
      0007CD 24 FB            [12] 2495 	add	a,#0xfb
      0007CF F5 81            [12] 2496 	mov	sp,a
      0007D1 D0 05            [24] 2497 	pop	ar5
      0007D3 D0 06            [24] 2498 	pop	ar6
      0007D5 D0 07            [24] 2499 	pop	ar7
                                   2500 ;	radio/parameters.c:568: convert_to_hex(key, encryption_key, key_length);
      0007D7 90r00r6A         [24] 2501 	mov	dptr,#_convert_to_hex_PARM_2
      0007DA 74r44            [12] 2502 	mov	a,#_encryption_key
      0007DC F0               [24] 2503 	movx	@dptr,a
      0007DD 74s00            [12] 2504 	mov	a,#(_encryption_key >> 8)
      0007DF A3               [24] 2505 	inc	dptr
      0007E0 F0               [24] 2506 	movx	@dptr,a
      0007E1 78r0C            [12] 2507 	mov	r0,#_convert_to_hex_PARM_3
      0007E3 EF               [12] 2508 	mov	a,r7
      0007E4 F2               [24] 2509 	movx	@r0,a
      0007E5 8D 82            [24] 2510 	mov	dpl,r5
      0007E7 8E 83            [24] 2511 	mov	dph,r6
      0007E9 12r06r48         [24] 2512 	lcall	_convert_to_hex
                                   2513 ;	radio/parameters.c:571: return true;
      0007EC D3               [12] 2514 	setb	c
      0007ED 22               [24] 2515 	ret
                                   2516 ;------------------------------------------------------------
                                   2517 ;Allocation info for local variables in function 'print_encryption_key'
                                   2518 ;------------------------------------------------------------
                                   2519 ;	radio/parameters.c:577: print_encryption_key()
                                   2520 ;	-----------------------------------------
                                   2521 ;	 function print_encryption_key
                                   2522 ;	-----------------------------------------
      0007EE                       2523 _print_encryption_key:
                                   2524 ;	radio/parameters.c:580: __pdata uint8_t key_length = AES_KEY_LENGTH(param_get(PARAM_ENCRYPTION));
      0007EE 75 82 10         [24] 2525 	mov	dpl,#0x10
      0007F1 12r02r15         [24] 2526 	lcall	_param_get
      0007F4 AC 82            [24] 2527 	mov	r4,dpl
      0007F6 53 04 0F         [24] 2528 	anl	ar4,#0x0F
      0007F9 7D 00            [12] 2529 	mov	r5,#0x00
      0007FB 0C               [12] 2530 	inc	r4
      0007FC EC               [12] 2531 	mov	a,r4
      0007FD C4               [12] 2532 	swap	a
      0007FE 03               [12] 2533 	rr	a
      0007FF 54 F8            [12] 2534 	anl	a,#0xF8
      000801 FF               [12] 2535 	mov	r7,a
                                   2536 ;	radio/parameters.c:582: for (i=0; i<key_length; i++) {
      000802 7E 00            [12] 2537 	mov	r6,#0x00
      000804                       2538 00105$:
      000804 C3               [12] 2539 	clr	c
      000805 EE               [12] 2540 	mov	a,r6
      000806 9F               [12] 2541 	subb	a,r7
      000807 50 5F            [24] 2542 	jnc	00103$
                                   2543 ;	radio/parameters.c:583: if (0xF >= encryption_key[i]) {
      000809 EE               [12] 2544 	mov	a,r6
      00080A 24r44            [12] 2545 	add	a,#_encryption_key
      00080C F5 82            [12] 2546 	mov	dpl,a
      00080E E4               [12] 2547 	clr	a
      00080F 34s00            [12] 2548 	addc	a,#(_encryption_key >> 8)
      000811 F5 83            [12] 2549 	mov	dph,a
      000813 E0               [24] 2550 	movx	a,@dptr
      000814 FD               [12] 2551 	mov  r5,a
      000815 24 F0            [12] 2552 	add	a,#0xff - 0x0F
      000817 40 1D            [24] 2553 	jc	00102$
                                   2554 ;	radio/parameters.c:584: printf("0");
      000819 C0 07            [24] 2555 	push	ar7
      00081B C0 06            [24] 2556 	push	ar6
      00081D 74rA7            [12] 2557 	mov	a,#___str_2
      00081F C0 E0            [24] 2558 	push	acc
      000821 74s00            [12] 2559 	mov	a,#(___str_2 >> 8)
      000823 C0 E0            [24] 2560 	push	acc
      000825 74 80            [12] 2561 	mov	a,#0x80
      000827 C0 E0            [24] 2562 	push	acc
      000829 12r00r00         [24] 2563 	lcall	_printfl
      00082C 15 81            [12] 2564 	dec	sp
      00082E 15 81            [12] 2565 	dec	sp
      000830 15 81            [12] 2566 	dec	sp
      000832 D0 06            [24] 2567 	pop	ar6
      000834 D0 07            [24] 2568 	pop	ar7
      000836                       2569 00102$:
                                   2570 ;	radio/parameters.c:586: printf("%x",encryption_key[i]);
      000836 EE               [12] 2571 	mov	a,r6
      000837 24r44            [12] 2572 	add	a,#_encryption_key
      000839 F5 82            [12] 2573 	mov	dpl,a
      00083B E4               [12] 2574 	clr	a
      00083C 34s00            [12] 2575 	addc	a,#(_encryption_key >> 8)
      00083E F5 83            [12] 2576 	mov	dph,a
      000840 E0               [24] 2577 	movx	a,@dptr
      000841 FD               [12] 2578 	mov	r5,a
      000842 7C 00            [12] 2579 	mov	r4,#0x00
      000844 C0 07            [24] 2580 	push	ar7
      000846 C0 06            [24] 2581 	push	ar6
      000848 C0 05            [24] 2582 	push	ar5
      00084A C0 04            [24] 2583 	push	ar4
      00084C 74rA9            [12] 2584 	mov	a,#___str_3
      00084E C0 E0            [24] 2585 	push	acc
      000850 74s00            [12] 2586 	mov	a,#(___str_3 >> 8)
      000852 C0 E0            [24] 2587 	push	acc
      000854 74 80            [12] 2588 	mov	a,#0x80
      000856 C0 E0            [24] 2589 	push	acc
      000858 12r00r00         [24] 2590 	lcall	_printfl
      00085B E5 81            [12] 2591 	mov	a,sp
      00085D 24 FB            [12] 2592 	add	a,#0xfb
      00085F F5 81            [12] 2593 	mov	sp,a
      000861 D0 06            [24] 2594 	pop	ar6
      000863 D0 07            [24] 2595 	pop	ar7
                                   2596 ;	radio/parameters.c:582: for (i=0; i<key_length; i++) {
      000865 0E               [12] 2597 	inc	r6
      000866 80 9C            [24] 2598 	sjmp	00105$
      000868                       2599 00103$:
                                   2600 ;	radio/parameters.c:588: printf("\n");
      000868 74rAC            [12] 2601 	mov	a,#___str_4
      00086A C0 E0            [24] 2602 	push	acc
      00086C 74s00            [12] 2603 	mov	a,#(___str_4 >> 8)
      00086E C0 E0            [24] 2604 	push	acc
      000870 74 80            [12] 2605 	mov	a,#0x80
      000872 C0 E0            [24] 2606 	push	acc
      000874 12r00r00         [24] 2607 	lcall	_printfl
      000877 15 81            [12] 2608 	dec	sp
      000879 15 81            [12] 2609 	dec	sp
      00087B 15 81            [12] 2610 	dec	sp
      00087D 22               [24] 2611 	ret
                                   2612 ;------------------------------------------------------------
                                   2613 ;Allocation info for local variables in function 'param_get_encryption_key'
                                   2614 ;------------------------------------------------------------
                                   2615 ;	radio/parameters.c:593: __xdata uint8_t* param_get_encryption_key()
                                   2616 ;	-----------------------------------------
                                   2617 ;	 function param_get_encryption_key
                                   2618 ;	-----------------------------------------
      00087E                       2619 _param_get_encryption_key:
                                   2620 ;	radio/parameters.c:595: return encryption_key;
      00087E 90r00r44         [24] 2621 	mov	dptr,#_encryption_key
      000881 22               [24] 2622 	ret
                                   2623 	.area CSEG    (CODE)
                                   2624 	.area CONST   (CODE)
      000000                       2625 _parameter_info:
      000000rAEs00 80              2626 	.byte __str_5, (__str_5 >> 8),#0x80
      000003 1A 00 00 00           2627 	.byte #0x1A,#0x00,#0x00,#0x00	; 26
      000007rB5s00 80              2628 	.byte __str_6, (__str_6 >> 8),#0x80
      00000A 39 00 00 00           2629 	.byte #0x39,#0x00,#0x00,#0x00	; 57
      00000ErC2s00 80              2630 	.byte __str_7, (__str_7 >> 8),#0x80
      000011 40 00 00 00           2631 	.byte #0x40,#0x00,#0x00,#0x00	; 64
      000015rCCs00 80              2632 	.byte __str_8, (__str_8 >> 8),#0x80
      000018 19 00 00 00           2633 	.byte #0x19,#0x00,#0x00,#0x00	; 25
      00001CrD2s00 80              2634 	.byte __str_9, (__str_9 >> 8),#0x80
      00001F 14 00 00 00           2635 	.byte #0x14,#0x00,#0x00,#0x00	; 20
      000023rDAs00 80              2636 	.byte __str_10, (__str_10 >> 8),#0x80
      000026 00 00 00 00           2637 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      00002ArDEs00 80              2638 	.byte __str_11, (__str_11 >> 8),#0x80
      00002D 01 00 00 00           2639 	.byte #0x01,#0x00,#0x00,#0x00	; 1
      000031rE6s00 80              2640 	.byte __str_12, (__str_12 >> 8),#0x80
      000034 00 00 00 00           2641 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      000038rF0s00 80              2642 	.byte __str_13, (__str_13 >> 8),#0x80
      00003B 00 00 00 00           2643 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      00003FrF9s00 80              2644 	.byte __str_14, (__str_14 >> 8),#0x80
      000042 00 00 00 00           2645 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      000046r02s01 80              2646 	.byte __str_15, (__str_15 >> 8),#0x80
      000049 00 00 00 00           2647 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      00004Dr0Fs01 80              2648 	.byte __str_16, (__str_16 >> 8),#0x80
      000050 64 00 00 00           2649 	.byte #0x64,#0x00,#0x00,#0x00	; 100
      000054r1As01 80              2650 	.byte __str_17, (__str_17 >> 8),#0x80
      000057 00 00 00 00           2651 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      00005Br23s01 80              2652 	.byte __str_18, (__str_18 >> 8),#0x80
      00005E 00 00 00 00           2653 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      000062r2Es01 80              2654 	.byte __str_19, (__str_19 >> 8),#0x80
      000065 00 00 00 00           2655 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      000069r35s01 80              2656 	.byte __str_20, (__str_20 >> 8),#0x80
      00006C 83 00 00 00           2657 	.byte #0x83,#0x00,#0x00,#0x00	; 131
      000070r40s01 80              2658 	.byte __str_21, (__str_21 >> 8),#0x80
      000073 00 00 00 00           2659 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      000077                       2660 ___str_0:
      000077 45 52 52 4F 52 20 2D  2661 	.ascii "ERROR - Key length:%u, Required %u"
             20 4B 65 79 20 6C 65
             6E 67 74 68 3A 25 75
             2C 20 52 65 71 75 69
             72 65 64 20 25 75
      000099 0A                    2662 	.db 0x0A
      00009A 00                    2663 	.db 0x00
      00009B                       2664 ___str_1:
      00009B 6B 65 79 20 6C 65 6E  2665 	.ascii "key len %d"
             20 25 64
      0000A5 0A                    2666 	.db 0x0A
      0000A6 00                    2667 	.db 0x00
      0000A7                       2668 ___str_2:
      0000A7 30                    2669 	.ascii "0"
      0000A8 00                    2670 	.db 0x00
      0000A9                       2671 ___str_3:
      0000A9 25 78                 2672 	.ascii "%x"
      0000AB 00                    2673 	.db 0x00
      0000AC                       2674 ___str_4:
      0000AC 0A                    2675 	.db 0x0A
      0000AD 00                    2676 	.db 0x00
      0000AE                       2677 __str_5:
      0000AE 46 4F 52 4D 41 54     2678 	.ascii "FORMAT"
      0000B4 00                    2679 	.db 0x00
      0000B5                       2680 __str_6:
      0000B5 53 45 52 49 41 4C 5F  2681 	.ascii "SERIAL_SPEED"
             53 50 45 45 44
      0000C1 00                    2682 	.db 0x00
      0000C2                       2683 __str_7:
      0000C2 41 49 52 5F 53 50 45  2684 	.ascii "AIR_SPEED"
             45 44
      0000CB 00                    2685 	.db 0x00
      0000CC                       2686 __str_8:
      0000CC 4E 45 54 49 44        2687 	.ascii "NETID"
      0000D1 00                    2688 	.db 0x00
      0000D2                       2689 __str_9:
      0000D2 54 58 50 4F 57 45 52  2690 	.ascii "TXPOWER"
      0000D9 00                    2691 	.db 0x00
      0000DA                       2692 __str_10:
      0000DA 45 43 43              2693 	.ascii "ECC"
      0000DD 00                    2694 	.db 0x00
      0000DE                       2695 __str_11:
      0000DE 4D 41 56 4C 49 4E 4B  2696 	.ascii "MAVLINK"
      0000E5 00                    2697 	.db 0x00
      0000E6                       2698 __str_12:
      0000E6 4F 50 50 52 45 53 45  2699 	.ascii "OPPRESEND"
             4E 44
      0000EF 00                    2700 	.db 0x00
      0000F0                       2701 __str_13:
      0000F0 4D 49 4E 5F 46 52 45  2702 	.ascii "MIN_FREQ"
             51
      0000F8 00                    2703 	.db 0x00
      0000F9                       2704 __str_14:
      0000F9 4D 41 58 5F 46 52 45  2705 	.ascii "MAX_FREQ"
             51
      000101 00                    2706 	.db 0x00
      000102                       2707 __str_15:
      000102 4E 55 4D 5F 43 48 41  2708 	.ascii "NUM_CHANNELS"
             4E 4E 45 4C 53
      00010E 00                    2709 	.db 0x00
      00010F                       2710 __str_16:
      00010F 44 55 54 59 5F 43 59  2711 	.ascii "DUTY_CYCLE"
             43 4C 45
      000119 00                    2712 	.db 0x00
      00011A                       2713 __str_17:
      00011A 4C 42 54 5F 52 53 53  2714 	.ascii "LBT_RSSI"
             49
      000122 00                    2715 	.db 0x00
      000123                       2716 __str_18:
      000123 4D 41 4E 43 48 45 53  2717 	.ascii "MANCHESTER"
             54 45 52
      00012D 00                    2718 	.db 0x00
      00012E                       2719 __str_19:
      00012E 52 54 53 43 54 53     2720 	.ascii "RTSCTS"
      000134 00                    2721 	.db 0x00
      000135                       2722 __str_20:
      000135 4D 41 58 5F 57 49 4E  2723 	.ascii "MAX_WINDOW"
             44 4F 57
      00013F 00                    2724 	.db 0x00
      000140                       2725 __str_21:
      000140 45 4E 43 52 59 50 54  2726 	.ascii "ENCRYPTION_LEVEL"
             49 4F 4E 5F 4C 45 56
             45 4C
      000150 00                    2727 	.db 0x00
                                   2728 	.area XINIT   (CODE)
                                   2729 	.area CABS    (ABS,CODE)
