                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Sep  7 2022) (Linux)
                                      4 ; This file was generated Wed Sep  7 10:05:07 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module radio
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _Receiver_ISR
                                     13 	.globl _delay_msec
                                     14 	.globl _delay_expired
                                     15 	.globl _delay_set
                                     16 	.globl _timer2_tick
                                     17 	.globl _panic
                                     18 	.globl _param_get
                                     19 	.globl _memcpy
                                     20 	.globl _NSS1
                                     21 	.globl _IRQ
                                     22 	.globl _PIN_ENABLE
                                     23 	.globl _PIN_CONFIG
                                     24 	.globl _LED_GREEN
                                     25 	.globl _LED_RED
                                     26 	.globl _SPI1EN
                                     27 	.globl _TXBMT1
                                     28 	.globl _NSS1MD0
                                     29 	.globl _NSS1MD1
                                     30 	.globl _RXOVRN1
                                     31 	.globl _MODF1
                                     32 	.globl _WCOL1
                                     33 	.globl _SPIF1
                                     34 	.globl _SPI0EN
                                     35 	.globl _TXBMT0
                                     36 	.globl _NSS0MD0
                                     37 	.globl _NSS0MD1
                                     38 	.globl _RXOVRN0
                                     39 	.globl _MODF0
                                     40 	.globl _WCOL0
                                     41 	.globl _SPIF0
                                     42 	.globl _AD0CM0
                                     43 	.globl _AD0CM1
                                     44 	.globl _AD0CM2
                                     45 	.globl _AD0WINT
                                     46 	.globl _AD0BUSY
                                     47 	.globl _AD0INT
                                     48 	.globl _BURSTEN
                                     49 	.globl _AD0EN
                                     50 	.globl _CCF0
                                     51 	.globl _CCF1
                                     52 	.globl _CCF2
                                     53 	.globl _CCF3
                                     54 	.globl _CCF4
                                     55 	.globl _CCF5
                                     56 	.globl _CR
                                     57 	.globl _CF
                                     58 	.globl _P
                                     59 	.globl _F1
                                     60 	.globl _OV
                                     61 	.globl _RS0
                                     62 	.globl _RS1
                                     63 	.globl _F0
                                     64 	.globl _AC
                                     65 	.globl _CY
                                     66 	.globl _T2XCLK
                                     67 	.globl _T2RCLK
                                     68 	.globl _TR2
                                     69 	.globl _T2SPLIT
                                     70 	.globl _TF2CEN
                                     71 	.globl _TF2LEN
                                     72 	.globl _TF2L
                                     73 	.globl _TF2H
                                     74 	.globl _SI
                                     75 	.globl _ACK
                                     76 	.globl _ARBLOST
                                     77 	.globl _ACKRQ
                                     78 	.globl _STO
                                     79 	.globl _STA
                                     80 	.globl _TXMODE
                                     81 	.globl _MASTER
                                     82 	.globl _PX0
                                     83 	.globl _PT0
                                     84 	.globl _PX1
                                     85 	.globl _PT1
                                     86 	.globl _PS0
                                     87 	.globl _PT2
                                     88 	.globl _PSPI0
                                     89 	.globl _EX0
                                     90 	.globl _ET0
                                     91 	.globl _EX1
                                     92 	.globl _ET1
                                     93 	.globl _ES0
                                     94 	.globl _ET2
                                     95 	.globl _ESPI0
                                     96 	.globl _EA
                                     97 	.globl _RI0
                                     98 	.globl _TI0
                                     99 	.globl _RB80
                                    100 	.globl _TB80
                                    101 	.globl _REN0
                                    102 	.globl _MCE0
                                    103 	.globl _S0MODE
                                    104 	.globl _IT0
                                    105 	.globl _IE0
                                    106 	.globl _IT1
                                    107 	.globl _IE1
                                    108 	.globl _TR0
                                    109 	.globl _TF0
                                    110 	.globl _TR1
                                    111 	.globl _TF1
                                    112 	.globl __XPAGE
                                    113 	.globl _PCA0CP4
                                    114 	.globl _PCA0CP0
                                    115 	.globl _PCA0
                                    116 	.globl _PCA0CP3
                                    117 	.globl _PCA0CP2
                                    118 	.globl _PCA0CP1
                                    119 	.globl _PCA0CP5
                                    120 	.globl _TMR2
                                    121 	.globl _TMR2RL
                                    122 	.globl _ADC0LT
                                    123 	.globl _ADC0GT
                                    124 	.globl _ADC0
                                    125 	.globl _TMR3
                                    126 	.globl _TMR3RL
                                    127 	.globl _TOFF
                                    128 	.globl _DP
                                    129 	.globl _PCLKEN
                                    130 	.globl _CLKMODE
                                    131 	.globl _P7MDOUT
                                    132 	.globl _P6MDOUT
                                    133 	.globl _P5MDOUT
                                    134 	.globl _P4MDOUT
                                    135 	.globl _PCLKACT
                                    136 	.globl _P6MDIN
                                    137 	.globl _P5MDIN
                                    138 	.globl _P4MDIN
                                    139 	.globl _P3MDIN
                                    140 	.globl _DEVICEID
                                    141 	.globl _REVID
                                    142 	.globl _HWID
                                    143 	.globl _P7
                                    144 	.globl _P6
                                    145 	.globl _P5
                                    146 	.globl _P4
                                    147 	.globl _TOFFH
                                    148 	.globl _TOFFL
                                    149 	.globl _ADC0TK
                                    150 	.globl _ADC0PWR
                                    151 	.globl _IREF0CF
                                    152 	.globl _FLSCL
                                    153 	.globl _OSCICL
                                    154 	.globl _OSCIFL
                                    155 	.globl _P3MDOUT
                                    156 	.globl _LCD0BUFCF
                                    157 	.globl _P7DRV
                                    158 	.globl _P6DRV
                                    159 	.globl _P2DRV
                                    160 	.globl _P1DRV
                                    161 	.globl _P0DRV
                                    162 	.globl _P5DRV
                                    163 	.globl _P4DRV
                                    164 	.globl _P3DRV
                                    165 	.globl _LCD0BUFCN
                                    166 	.globl _CRC0CNT
                                    167 	.globl _CRC0AUTO
                                    168 	.globl _CRC0FLIP
                                    169 	.globl _CRC0IN
                                    170 	.globl _CRC0CN
                                    171 	.globl _CRC0DAT
                                    172 	.globl _SFRPGCN
                                    173 	.globl _DC0RDY
                                    174 	.globl _PC0INT1
                                    175 	.globl _PC0INT0
                                    176 	.globl _PC0DCH
                                    177 	.globl _PC0DCL
                                    178 	.globl _SPI1CN
                                    179 	.globl _AES0YOUT
                                    180 	.globl _PC0HIST
                                    181 	.globl _PC0CMP1H
                                    182 	.globl _PC0CMP1M
                                    183 	.globl _PC0CMP1L
                                    184 	.globl _AES0KBA
                                    185 	.globl _AES0DBA
                                    186 	.globl _AES0KIN
                                    187 	.globl _AES0XIN
                                    188 	.globl _AES0BIN
                                    189 	.globl _AES0DCFG
                                    190 	.globl _AES0BCFG
                                    191 	.globl _PC0TH
                                    192 	.globl _PC0CMP0H
                                    193 	.globl _PC0CMP0M
                                    194 	.globl _PC0CMP0L
                                    195 	.globl _PC0CTR1H
                                    196 	.globl _PC0CTR1M
                                    197 	.globl _PC0CTR1L
                                    198 	.globl _PC0CTR0H
                                    199 	.globl _PC0CTR0M
                                    200 	.globl _PC0CTR0L
                                    201 	.globl _PC0MD
                                    202 	.globl _PC0PCF
                                    203 	.globl _DMA0NMD
                                    204 	.globl _DMA0BUSY
                                    205 	.globl _DMA0MINT
                                    206 	.globl _DMA0INT
                                    207 	.globl _DMA0EN
                                    208 	.globl _DMA0SEL
                                    209 	.globl _DMA0NSZH
                                    210 	.globl _DMA0NSZL
                                    211 	.globl _DMA0NAOH
                                    212 	.globl _DMA0NAOL
                                    213 	.globl _DMA0NBAH
                                    214 	.globl _DMA0NBAL
                                    215 	.globl _DMA0NCF
                                    216 	.globl _VREGINSDH
                                    217 	.globl _VREGINSDL
                                    218 	.globl _ENC0CN
                                    219 	.globl _ENC0H
                                    220 	.globl _ENC0M
                                    221 	.globl _ENC0L
                                    222 	.globl _PC0STAT
                                    223 	.globl _CRC1CN
                                    224 	.globl _CRC1POLH
                                    225 	.globl _CRC1POLL
                                    226 	.globl _CRC1OUTH
                                    227 	.globl _CRC1OUTL
                                    228 	.globl _CRC1IN
                                    229 	.globl _LCD0BUFMD
                                    230 	.globl _LCD0CHPCN
                                    231 	.globl _DC0MD
                                    232 	.globl _DC0CF
                                    233 	.globl _DC0CN
                                    234 	.globl _LCD0VBMCF
                                    235 	.globl _LCD0CHPMD
                                    236 	.globl _LCD0CHPCF
                                    237 	.globl _LCD0MSCF
                                    238 	.globl _LCD0MSCN
                                    239 	.globl _LCD0CLKDIVH
                                    240 	.globl _LCD0CLKDIVL
                                    241 	.globl _LCD0VBMCN
                                    242 	.globl _LCD0CF
                                    243 	.globl _LCD0PWR
                                    244 	.globl _SPI1DAT
                                    245 	.globl _SPI1CKR
                                    246 	.globl _SPI1CFG
                                    247 	.globl _LCD0TOGR
                                    248 	.globl _LCD0BLINK
                                    249 	.globl _LCD0CN
                                    250 	.globl _LCD0CNTRST
                                    251 	.globl _LCD0DF
                                    252 	.globl _LCD0DE
                                    253 	.globl _LCD0DD
                                    254 	.globl _LCD0DC
                                    255 	.globl _LCD0DB
                                    256 	.globl _LCD0DA
                                    257 	.globl _LCD0D9
                                    258 	.globl _LCD0D8
                                    259 	.globl _LCD0D7
                                    260 	.globl _LCD0D6
                                    261 	.globl _LCD0D5
                                    262 	.globl _LCD0D4
                                    263 	.globl _LCD0D3
                                    264 	.globl _LCD0D2
                                    265 	.globl _LCD0D1
                                    266 	.globl _LCD0D0
                                    267 	.globl _VDM0CN
                                    268 	.globl _PCA0CPH4
                                    269 	.globl _PCA0CPL4
                                    270 	.globl _PCA0CPH0
                                    271 	.globl _PCA0CPL0
                                    272 	.globl _PCA0H
                                    273 	.globl _PCA0L
                                    274 	.globl _SPI0CN
                                    275 	.globl _EIP2
                                    276 	.globl _EIP1
                                    277 	.globl _SMB0ADM
                                    278 	.globl _SMB0ADR
                                    279 	.globl _P2MDIN
                                    280 	.globl _P1MDIN
                                    281 	.globl _P0MDIN
                                    282 	.globl _B
                                    283 	.globl _RSTSRC
                                    284 	.globl _PCA0CPH3
                                    285 	.globl _PCA0CPL3
                                    286 	.globl _PCA0CPH2
                                    287 	.globl _PCA0CPL2
                                    288 	.globl _PCA0CPH1
                                    289 	.globl _PCA0CPL1
                                    290 	.globl _ADC0CN
                                    291 	.globl _EIE2
                                    292 	.globl _EIE1
                                    293 	.globl _FLWR
                                    294 	.globl _IT01CF
                                    295 	.globl _XBR2
                                    296 	.globl _XBR1
                                    297 	.globl _XBR0
                                    298 	.globl _ACC
                                    299 	.globl _PCA0PWM
                                    300 	.globl _PCA0CPM4
                                    301 	.globl _PCA0CPM3
                                    302 	.globl _PCA0CPM2
                                    303 	.globl _PCA0CPM1
                                    304 	.globl _PCA0CPM0
                                    305 	.globl _PCA0MD
                                    306 	.globl _PCA0CN
                                    307 	.globl _P0MAT
                                    308 	.globl _P2SKIP
                                    309 	.globl _P1SKIP
                                    310 	.globl _P0SKIP
                                    311 	.globl _PCA0CPH5
                                    312 	.globl _PCA0CPL5
                                    313 	.globl _REF0CN
                                    314 	.globl _PSW
                                    315 	.globl _P1MAT
                                    316 	.globl _PCA0CPM5
                                    317 	.globl _TMR2H
                                    318 	.globl _TMR2L
                                    319 	.globl _TMR2RLH
                                    320 	.globl _TMR2RLL
                                    321 	.globl _REG0CN
                                    322 	.globl _TMR2CN
                                    323 	.globl _P0MASK
                                    324 	.globl _ADC0LTH
                                    325 	.globl _ADC0LTL
                                    326 	.globl _ADC0GTH
                                    327 	.globl _ADC0GTL
                                    328 	.globl _SMB0DAT
                                    329 	.globl _SMB0CF
                                    330 	.globl _SMB0CN
                                    331 	.globl _P1MASK
                                    332 	.globl _ADC0H
                                    333 	.globl _ADC0L
                                    334 	.globl _ADC0CF
                                    335 	.globl _ADC0MX
                                    336 	.globl _ADC0AC
                                    337 	.globl _IREF0CN
                                    338 	.globl _IP
                                    339 	.globl _FLKEY
                                    340 	.globl _PMU0FL
                                    341 	.globl _PMU0CF
                                    342 	.globl _PMU0MD
                                    343 	.globl _OSCICN
                                    344 	.globl _OSCXCN
                                    345 	.globl _P3
                                    346 	.globl _EMI0TC
                                    347 	.globl _RTC0KEY
                                    348 	.globl _RTC0DAT
                                    349 	.globl _RTC0ADR
                                    350 	.globl _EMI0CF
                                    351 	.globl _EMI0CN
                                    352 	.globl _CLKSEL
                                    353 	.globl _IE
                                    354 	.globl _SFRPAGE
                                    355 	.globl _P2MDOUT
                                    356 	.globl _P1MDOUT
                                    357 	.globl _P0MDOUT
                                    358 	.globl _SPI0DAT
                                    359 	.globl _SPI0CKR
                                    360 	.globl _SPI0CFG
                                    361 	.globl _P2
                                    362 	.globl _CPT0MX
                                    363 	.globl _CPT1MX
                                    364 	.globl _CPT0MD
                                    365 	.globl _CPT1MD
                                    366 	.globl _CPT0CN
                                    367 	.globl _CPT1CN
                                    368 	.globl _SBUF0
                                    369 	.globl _SCON0
                                    370 	.globl _TMR3H
                                    371 	.globl _TMR3L
                                    372 	.globl _TMR3RLH
                                    373 	.globl _TMR3RLL
                                    374 	.globl _TMR3CN
                                    375 	.globl _P1
                                    376 	.globl _PSCTL
                                    377 	.globl _CKCON
                                    378 	.globl _TH1
                                    379 	.globl _TH0
                                    380 	.globl _TL1
                                    381 	.globl _TL0
                                    382 	.globl _TMOD
                                    383 	.globl _TCON
                                    384 	.globl _PCON
                                    385 	.globl _SFRLAST
                                    386 	.globl _SFRNEXT
                                    387 	.globl _PSBANK
                                    388 	.globl _DPH
                                    389 	.globl _DPL
                                    390 	.globl _SP
                                    391 	.globl _P0
                                    392 	.globl _radio_buffer
                                    393 	.globl _radio_transmit_PARM_3
                                    394 	.globl _radio_transmit_PARM_2
                                    395 	.globl _radio_receive_packet_PARM_2
                                    396 	.globl _settings
                                    397 	.globl _netid
                                    398 	.globl _last_rssi
                                    399 	.globl _partial_packet_length
                                    400 	.globl _receive_packet_length
                                    401 	.globl _radio_receive_packet
                                    402 	.globl _radio_receive_in_progress
                                    403 	.globl _radio_preamble_detected
                                    404 	.globl _radio_last_rssi
                                    405 	.globl _radio_current_rssi
                                    406 	.globl _radio_air_rate
                                    407 	.globl _radio_transmit
                                    408 	.globl _radio_receiver_on
                                    409 	.globl _radio_initialise
                                    410 	.globl _radio_set_frequency
                                    411 	.globl _radio_set_channel_spacing
                                    412 	.globl _radio_set_channel
                                    413 	.globl _radio_get_channel
                                    414 	.globl _radio_configure
                                    415 	.globl _radio_set_transmit_power
                                    416 	.globl _radio_get_transmit_power
                                    417 	.globl _radio_set_network_id
                                    418 	.globl _radio_temperature
                                    419 	.globl _radio_set_diversity
                                    420 ;--------------------------------------------------------
                                    421 ; special function registers
                                    422 ;--------------------------------------------------------
                                    423 	.area RSEG    (ABS,DATA)
      000000                        424 	.org 0x0000
                           000080   425 _P0	=	0x0080
                           000081   426 _SP	=	0x0081
                           000082   427 _DPL	=	0x0082
                           000083   428 _DPH	=	0x0083
                           000084   429 _PSBANK	=	0x0084
                           000085   430 _SFRNEXT	=	0x0085
                           000086   431 _SFRLAST	=	0x0086
                           000087   432 _PCON	=	0x0087
                           000088   433 _TCON	=	0x0088
                           000089   434 _TMOD	=	0x0089
                           00008A   435 _TL0	=	0x008a
                           00008B   436 _TL1	=	0x008b
                           00008C   437 _TH0	=	0x008c
                           00008D   438 _TH1	=	0x008d
                           00008E   439 _CKCON	=	0x008e
                           00008F   440 _PSCTL	=	0x008f
                           000090   441 _P1	=	0x0090
                           000091   442 _TMR3CN	=	0x0091
                           000092   443 _TMR3RLL	=	0x0092
                           000093   444 _TMR3RLH	=	0x0093
                           000094   445 _TMR3L	=	0x0094
                           000095   446 _TMR3H	=	0x0095
                           000098   447 _SCON0	=	0x0098
                           000099   448 _SBUF0	=	0x0099
                           00009A   449 _CPT1CN	=	0x009a
                           00009B   450 _CPT0CN	=	0x009b
                           00009C   451 _CPT1MD	=	0x009c
                           00009D   452 _CPT0MD	=	0x009d
                           00009E   453 _CPT1MX	=	0x009e
                           00009F   454 _CPT0MX	=	0x009f
                           0000A0   455 _P2	=	0x00a0
                           0000A1   456 _SPI0CFG	=	0x00a1
                           0000A2   457 _SPI0CKR	=	0x00a2
                           0000A3   458 _SPI0DAT	=	0x00a3
                           0000A4   459 _P0MDOUT	=	0x00a4
                           0000A5   460 _P1MDOUT	=	0x00a5
                           0000A6   461 _P2MDOUT	=	0x00a6
                           0000A7   462 _SFRPAGE	=	0x00a7
                           0000A8   463 _IE	=	0x00a8
                           0000A9   464 _CLKSEL	=	0x00a9
                           0000AA   465 _EMI0CN	=	0x00aa
                           0000AB   466 _EMI0CF	=	0x00ab
                           0000AC   467 _RTC0ADR	=	0x00ac
                           0000AD   468 _RTC0DAT	=	0x00ad
                           0000AE   469 _RTC0KEY	=	0x00ae
                           0000AF   470 _EMI0TC	=	0x00af
                           0000B0   471 _P3	=	0x00b0
                           0000B1   472 _OSCXCN	=	0x00b1
                           0000B2   473 _OSCICN	=	0x00b2
                           0000B3   474 _PMU0MD	=	0x00b3
                           0000B5   475 _PMU0CF	=	0x00b5
                           0000B6   476 _PMU0FL	=	0x00b6
                           0000B7   477 _FLKEY	=	0x00b7
                           0000B8   478 _IP	=	0x00b8
                           0000B9   479 _IREF0CN	=	0x00b9
                           0000BA   480 _ADC0AC	=	0x00ba
                           0000BB   481 _ADC0MX	=	0x00bb
                           0000BC   482 _ADC0CF	=	0x00bc
                           0000BD   483 _ADC0L	=	0x00bd
                           0000BE   484 _ADC0H	=	0x00be
                           0000BF   485 _P1MASK	=	0x00bf
                           0000C0   486 _SMB0CN	=	0x00c0
                           0000C1   487 _SMB0CF	=	0x00c1
                           0000C2   488 _SMB0DAT	=	0x00c2
                           0000C3   489 _ADC0GTL	=	0x00c3
                           0000C4   490 _ADC0GTH	=	0x00c4
                           0000C5   491 _ADC0LTL	=	0x00c5
                           0000C6   492 _ADC0LTH	=	0x00c6
                           0000C7   493 _P0MASK	=	0x00c7
                           0000C8   494 _TMR2CN	=	0x00c8
                           0000C9   495 _REG0CN	=	0x00c9
                           0000CA   496 _TMR2RLL	=	0x00ca
                           0000CB   497 _TMR2RLH	=	0x00cb
                           0000CC   498 _TMR2L	=	0x00cc
                           0000CD   499 _TMR2H	=	0x00cd
                           0000CE   500 _PCA0CPM5	=	0x00ce
                           0000CF   501 _P1MAT	=	0x00cf
                           0000D0   502 _PSW	=	0x00d0
                           0000D1   503 _REF0CN	=	0x00d1
                           0000D2   504 _PCA0CPL5	=	0x00d2
                           0000D3   505 _PCA0CPH5	=	0x00d3
                           0000D4   506 _P0SKIP	=	0x00d4
                           0000D5   507 _P1SKIP	=	0x00d5
                           0000D6   508 _P2SKIP	=	0x00d6
                           0000D7   509 _P0MAT	=	0x00d7
                           0000D8   510 _PCA0CN	=	0x00d8
                           0000D9   511 _PCA0MD	=	0x00d9
                           0000DA   512 _PCA0CPM0	=	0x00da
                           0000DB   513 _PCA0CPM1	=	0x00db
                           0000DC   514 _PCA0CPM2	=	0x00dc
                           0000DD   515 _PCA0CPM3	=	0x00dd
                           0000DE   516 _PCA0CPM4	=	0x00de
                           0000DF   517 _PCA0PWM	=	0x00df
                           0000E0   518 _ACC	=	0x00e0
                           0000E1   519 _XBR0	=	0x00e1
                           0000E2   520 _XBR1	=	0x00e2
                           0000E3   521 _XBR2	=	0x00e3
                           0000E4   522 _IT01CF	=	0x00e4
                           0000E5   523 _FLWR	=	0x00e5
                           0000E6   524 _EIE1	=	0x00e6
                           0000E7   525 _EIE2	=	0x00e7
                           0000E8   526 _ADC0CN	=	0x00e8
                           0000E9   527 _PCA0CPL1	=	0x00e9
                           0000EA   528 _PCA0CPH1	=	0x00ea
                           0000EB   529 _PCA0CPL2	=	0x00eb
                           0000EC   530 _PCA0CPH2	=	0x00ec
                           0000ED   531 _PCA0CPL3	=	0x00ed
                           0000EE   532 _PCA0CPH3	=	0x00ee
                           0000EF   533 _RSTSRC	=	0x00ef
                           0000F0   534 _B	=	0x00f0
                           0000F1   535 _P0MDIN	=	0x00f1
                           0000F2   536 _P1MDIN	=	0x00f2
                           0000F3   537 _P2MDIN	=	0x00f3
                           0000F4   538 _SMB0ADR	=	0x00f4
                           0000F5   539 _SMB0ADM	=	0x00f5
                           0000F6   540 _EIP1	=	0x00f6
                           0000F7   541 _EIP2	=	0x00f7
                           0000F8   542 _SPI0CN	=	0x00f8
                           0000F9   543 _PCA0L	=	0x00f9
                           0000FA   544 _PCA0H	=	0x00fa
                           0000FB   545 _PCA0CPL0	=	0x00fb
                           0000FC   546 _PCA0CPH0	=	0x00fc
                           0000FD   547 _PCA0CPL4	=	0x00fd
                           0000FE   548 _PCA0CPH4	=	0x00fe
                           0000FF   549 _VDM0CN	=	0x00ff
                           000089   550 _LCD0D0	=	0x0089
                           00008A   551 _LCD0D1	=	0x008a
                           00008B   552 _LCD0D2	=	0x008b
                           00008C   553 _LCD0D3	=	0x008c
                           00008D   554 _LCD0D4	=	0x008d
                           00008E   555 _LCD0D5	=	0x008e
                           000091   556 _LCD0D6	=	0x0091
                           000092   557 _LCD0D7	=	0x0092
                           000093   558 _LCD0D8	=	0x0093
                           000094   559 _LCD0D9	=	0x0094
                           000095   560 _LCD0DA	=	0x0095
                           000096   561 _LCD0DB	=	0x0096
                           000097   562 _LCD0DC	=	0x0097
                           000099   563 _LCD0DD	=	0x0099
                           00009A   564 _LCD0DE	=	0x009a
                           00009B   565 _LCD0DF	=	0x009b
                           00009C   566 _LCD0CNTRST	=	0x009c
                           00009D   567 _LCD0CN	=	0x009d
                           00009E   568 _LCD0BLINK	=	0x009e
                           00009F   569 _LCD0TOGR	=	0x009f
                           0000A1   570 _SPI1CFG	=	0x00a1
                           0000A2   571 _SPI1CKR	=	0x00a2
                           0000A3   572 _SPI1DAT	=	0x00a3
                           0000A4   573 _LCD0PWR	=	0x00a4
                           0000A5   574 _LCD0CF	=	0x00a5
                           0000A6   575 _LCD0VBMCN	=	0x00a6
                           0000A9   576 _LCD0CLKDIVL	=	0x00a9
                           0000AA   577 _LCD0CLKDIVH	=	0x00aa
                           0000AB   578 _LCD0MSCN	=	0x00ab
                           0000AC   579 _LCD0MSCF	=	0x00ac
                           0000AD   580 _LCD0CHPCF	=	0x00ad
                           0000AE   581 _LCD0CHPMD	=	0x00ae
                           0000AF   582 _LCD0VBMCF	=	0x00af
                           0000B1   583 _DC0CN	=	0x00b1
                           0000B2   584 _DC0CF	=	0x00b2
                           0000B3   585 _DC0MD	=	0x00b3
                           0000B5   586 _LCD0CHPCN	=	0x00b5
                           0000B6   587 _LCD0BUFMD	=	0x00b6
                           0000B9   588 _CRC1IN	=	0x00b9
                           0000BA   589 _CRC1OUTL	=	0x00ba
                           0000BB   590 _CRC1OUTH	=	0x00bb
                           0000BC   591 _CRC1POLL	=	0x00bc
                           0000BD   592 _CRC1POLH	=	0x00bd
                           0000BE   593 _CRC1CN	=	0x00be
                           0000C1   594 _PC0STAT	=	0x00c1
                           0000C2   595 _ENC0L	=	0x00c2
                           0000C3   596 _ENC0M	=	0x00c3
                           0000C4   597 _ENC0H	=	0x00c4
                           0000C5   598 _ENC0CN	=	0x00c5
                           0000C6   599 _VREGINSDL	=	0x00c6
                           0000C7   600 _VREGINSDH	=	0x00c7
                           0000C9   601 _DMA0NCF	=	0x00c9
                           0000CA   602 _DMA0NBAL	=	0x00ca
                           0000CB   603 _DMA0NBAH	=	0x00cb
                           0000CC   604 _DMA0NAOL	=	0x00cc
                           0000CD   605 _DMA0NAOH	=	0x00cd
                           0000CE   606 _DMA0NSZL	=	0x00ce
                           0000CF   607 _DMA0NSZH	=	0x00cf
                           0000D1   608 _DMA0SEL	=	0x00d1
                           0000D2   609 _DMA0EN	=	0x00d2
                           0000D3   610 _DMA0INT	=	0x00d3
                           0000D4   611 _DMA0MINT	=	0x00d4
                           0000D5   612 _DMA0BUSY	=	0x00d5
                           0000D6   613 _DMA0NMD	=	0x00d6
                           0000D7   614 _PC0PCF	=	0x00d7
                           0000D9   615 _PC0MD	=	0x00d9
                           0000DA   616 _PC0CTR0L	=	0x00da
                           0000DB   617 _PC0CTR0M	=	0x00db
                           0000DC   618 _PC0CTR0H	=	0x00dc
                           0000DD   619 _PC0CTR1L	=	0x00dd
                           0000DE   620 _PC0CTR1M	=	0x00de
                           0000DF   621 _PC0CTR1H	=	0x00df
                           0000E1   622 _PC0CMP0L	=	0x00e1
                           0000E2   623 _PC0CMP0M	=	0x00e2
                           0000E3   624 _PC0CMP0H	=	0x00e3
                           0000E4   625 _PC0TH	=	0x00e4
                           0000E9   626 _AES0BCFG	=	0x00e9
                           0000EA   627 _AES0DCFG	=	0x00ea
                           0000EB   628 _AES0BIN	=	0x00eb
                           0000EC   629 _AES0XIN	=	0x00ec
                           0000ED   630 _AES0KIN	=	0x00ed
                           0000EE   631 _AES0DBA	=	0x00ee
                           0000EF   632 _AES0KBA	=	0x00ef
                           0000F1   633 _PC0CMP1L	=	0x00f1
                           0000F2   634 _PC0CMP1M	=	0x00f2
                           0000F3   635 _PC0CMP1H	=	0x00f3
                           0000F4   636 _PC0HIST	=	0x00f4
                           0000F5   637 _AES0YOUT	=	0x00f5
                           0000F8   638 _SPI1CN	=	0x00f8
                           0000F9   639 _PC0DCL	=	0x00f9
                           0000FA   640 _PC0DCH	=	0x00fa
                           0000FB   641 _PC0INT0	=	0x00fb
                           0000FC   642 _PC0INT1	=	0x00fc
                           0000FD   643 _DC0RDY	=	0x00fd
                           00008E   644 _SFRPGCN	=	0x008e
                           000091   645 _CRC0DAT	=	0x0091
                           000092   646 _CRC0CN	=	0x0092
                           000093   647 _CRC0IN	=	0x0093
                           000094   648 _CRC0FLIP	=	0x0094
                           000096   649 _CRC0AUTO	=	0x0096
                           000097   650 _CRC0CNT	=	0x0097
                           00009C   651 _LCD0BUFCN	=	0x009c
                           0000A1   652 _P3DRV	=	0x00a1
                           0000A2   653 _P4DRV	=	0x00a2
                           0000A3   654 _P5DRV	=	0x00a3
                           0000A4   655 _P0DRV	=	0x00a4
                           0000A5   656 _P1DRV	=	0x00a5
                           0000A6   657 _P2DRV	=	0x00a6
                           0000AA   658 _P6DRV	=	0x00aa
                           0000AB   659 _P7DRV	=	0x00ab
                           0000AC   660 _LCD0BUFCF	=	0x00ac
                           0000B1   661 _P3MDOUT	=	0x00b1
                           0000B2   662 _OSCIFL	=	0x00b2
                           0000B3   663 _OSCICL	=	0x00b3
                           0000B6   664 _FLSCL	=	0x00b6
                           0000B9   665 _IREF0CF	=	0x00b9
                           0000BB   666 _ADC0PWR	=	0x00bb
                           0000BC   667 _ADC0TK	=	0x00bc
                           0000BD   668 _TOFFL	=	0x00bd
                           0000BE   669 _TOFFH	=	0x00be
                           0000D9   670 _P4	=	0x00d9
                           0000DA   671 _P5	=	0x00da
                           0000DB   672 _P6	=	0x00db
                           0000DC   673 _P7	=	0x00dc
                           0000E9   674 _HWID	=	0x00e9
                           0000EA   675 _REVID	=	0x00ea
                           0000EB   676 _DEVICEID	=	0x00eb
                           0000F1   677 _P3MDIN	=	0x00f1
                           0000F2   678 _P4MDIN	=	0x00f2
                           0000F3   679 _P5MDIN	=	0x00f3
                           0000F4   680 _P6MDIN	=	0x00f4
                           0000F5   681 _PCLKACT	=	0x00f5
                           0000F9   682 _P4MDOUT	=	0x00f9
                           0000FA   683 _P5MDOUT	=	0x00fa
                           0000FB   684 _P6MDOUT	=	0x00fb
                           0000FC   685 _P7MDOUT	=	0x00fc
                           0000FD   686 _CLKMODE	=	0x00fd
                           0000FE   687 _PCLKEN	=	0x00fe
                           008382   688 _DP	=	0x8382
                           008685   689 _TOFF	=	0x8685
                           009392   690 _TMR3RL	=	0x9392
                           009594   691 _TMR3	=	0x9594
                           00BEBD   692 _ADC0	=	0xbebd
                           00C4C3   693 _ADC0GT	=	0xc4c3
                           00C6C5   694 _ADC0LT	=	0xc6c5
                           00CBCA   695 _TMR2RL	=	0xcbca
                           00CDCC   696 _TMR2	=	0xcdcc
                           00D3D2   697 _PCA0CP5	=	0xd3d2
                           00EAE9   698 _PCA0CP1	=	0xeae9
                           00ECEB   699 _PCA0CP2	=	0xeceb
                           00EEED   700 _PCA0CP3	=	0xeeed
                           00FAF9   701 _PCA0	=	0xfaf9
                           00FCFB   702 _PCA0CP0	=	0xfcfb
                           00FEFD   703 _PCA0CP4	=	0xfefd
                           0000AA   704 __XPAGE	=	0x00aa
                                    705 ;--------------------------------------------------------
                                    706 ; special function bits
                                    707 ;--------------------------------------------------------
                                    708 	.area RSEG    (ABS,DATA)
      000000                        709 	.org 0x0000
                           00008F   710 _TF1	=	0x008f
                           00008E   711 _TR1	=	0x008e
                           00008D   712 _TF0	=	0x008d
                           00008C   713 _TR0	=	0x008c
                           00008B   714 _IE1	=	0x008b
                           00008A   715 _IT1	=	0x008a
                           000089   716 _IE0	=	0x0089
                           000088   717 _IT0	=	0x0088
                           00009F   718 _S0MODE	=	0x009f
                           00009D   719 _MCE0	=	0x009d
                           00009C   720 _REN0	=	0x009c
                           00009B   721 _TB80	=	0x009b
                           00009A   722 _RB80	=	0x009a
                           000099   723 _TI0	=	0x0099
                           000098   724 _RI0	=	0x0098
                           0000AF   725 _EA	=	0x00af
                           0000AE   726 _ESPI0	=	0x00ae
                           0000AD   727 _ET2	=	0x00ad
                           0000AC   728 _ES0	=	0x00ac
                           0000AB   729 _ET1	=	0x00ab
                           0000AA   730 _EX1	=	0x00aa
                           0000A9   731 _ET0	=	0x00a9
                           0000A8   732 _EX0	=	0x00a8
                           0000BE   733 _PSPI0	=	0x00be
                           0000BD   734 _PT2	=	0x00bd
                           0000BC   735 _PS0	=	0x00bc
                           0000BB   736 _PT1	=	0x00bb
                           0000BA   737 _PX1	=	0x00ba
                           0000B9   738 _PT0	=	0x00b9
                           0000B8   739 _PX0	=	0x00b8
                           0000C7   740 _MASTER	=	0x00c7
                           0000C6   741 _TXMODE	=	0x00c6
                           0000C5   742 _STA	=	0x00c5
                           0000C4   743 _STO	=	0x00c4
                           0000C3   744 _ACKRQ	=	0x00c3
                           0000C2   745 _ARBLOST	=	0x00c2
                           0000C1   746 _ACK	=	0x00c1
                           0000C0   747 _SI	=	0x00c0
                           0000CF   748 _TF2H	=	0x00cf
                           0000CE   749 _TF2L	=	0x00ce
                           0000CD   750 _TF2LEN	=	0x00cd
                           0000CC   751 _TF2CEN	=	0x00cc
                           0000CB   752 _T2SPLIT	=	0x00cb
                           0000CA   753 _TR2	=	0x00ca
                           0000C9   754 _T2RCLK	=	0x00c9
                           0000C8   755 _T2XCLK	=	0x00c8
                           0000D7   756 _CY	=	0x00d7
                           0000D6   757 _AC	=	0x00d6
                           0000D5   758 _F0	=	0x00d5
                           0000D4   759 _RS1	=	0x00d4
                           0000D3   760 _RS0	=	0x00d3
                           0000D2   761 _OV	=	0x00d2
                           0000D1   762 _F1	=	0x00d1
                           0000D0   763 _P	=	0x00d0
                           0000DF   764 _CF	=	0x00df
                           0000DE   765 _CR	=	0x00de
                           0000DD   766 _CCF5	=	0x00dd
                           0000DC   767 _CCF4	=	0x00dc
                           0000DB   768 _CCF3	=	0x00db
                           0000DA   769 _CCF2	=	0x00da
                           0000D9   770 _CCF1	=	0x00d9
                           0000D8   771 _CCF0	=	0x00d8
                           0000EF   772 _AD0EN	=	0x00ef
                           0000EE   773 _BURSTEN	=	0x00ee
                           0000ED   774 _AD0INT	=	0x00ed
                           0000EC   775 _AD0BUSY	=	0x00ec
                           0000EB   776 _AD0WINT	=	0x00eb
                           0000EA   777 _AD0CM2	=	0x00ea
                           0000E9   778 _AD0CM1	=	0x00e9
                           0000E8   779 _AD0CM0	=	0x00e8
                           0000FF   780 _SPIF0	=	0x00ff
                           0000FE   781 _WCOL0	=	0x00fe
                           0000FD   782 _MODF0	=	0x00fd
                           0000FC   783 _RXOVRN0	=	0x00fc
                           0000FB   784 _NSS0MD1	=	0x00fb
                           0000FA   785 _NSS0MD0	=	0x00fa
                           0000F9   786 _TXBMT0	=	0x00f9
                           0000F8   787 _SPI0EN	=	0x00f8
                           0000FF   788 _SPIF1	=	0x00ff
                           0000FE   789 _WCOL1	=	0x00fe
                           0000FD   790 _MODF1	=	0x00fd
                           0000FC   791 _RXOVRN1	=	0x00fc
                           0000FB   792 _NSS1MD1	=	0x00fb
                           0000FA   793 _NSS1MD0	=	0x00fa
                           0000F9   794 _TXBMT1	=	0x00f9
                           0000F8   795 _SPI1EN	=	0x00f8
                           0000B6   796 _LED_RED	=	0x00b6
                           0000B7   797 _LED_GREEN	=	0x00b7
                           000082   798 _PIN_CONFIG	=	0x0082
                           000083   799 _PIN_ENABLE	=	0x0083
                           000081   800 _IRQ	=	0x0081
                           0000A3   801 _NSS1	=	0x00a3
                                    802 ;--------------------------------------------------------
                                    803 ; overlayable register banks
                                    804 ;--------------------------------------------------------
                                    805 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        806 	.ds 8
                                    807 ;--------------------------------------------------------
                                    808 ; overlayable bit register bank
                                    809 ;--------------------------------------------------------
                                    810 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        811 bits:
      000000                        812 	.ds 1
                           008000   813 	b0 = bits[0]
                           008100   814 	b1 = bits[1]
                           008200   815 	b2 = bits[2]
                           008300   816 	b3 = bits[3]
                           008400   817 	b4 = bits[4]
                           008500   818 	b5 = bits[5]
                           008600   819 	b6 = bits[6]
                           008700   820 	b7 = bits[7]
                                    821 ;--------------------------------------------------------
                                    822 ; internal ram data
                                    823 ;--------------------------------------------------------
                                    824 	.area DSEG    (DATA)
                                    825 ;--------------------------------------------------------
                                    826 ; overlayable items in internal ram 
                                    827 ;--------------------------------------------------------
                                    828 	.area	OSEG    (OVR,DATA)
                                    829 ;--------------------------------------------------------
                                    830 ; indirectly addressable internal ram data
                                    831 ;--------------------------------------------------------
                                    832 	.area ISEG    (DATA)
                                    833 ;--------------------------------------------------------
                                    834 ; absolute internal ram data
                                    835 ;--------------------------------------------------------
                                    836 	.area IABS    (ABS,DATA)
                                    837 	.area IABS    (ABS,DATA)
                                    838 ;--------------------------------------------------------
                                    839 ; bit data
                                    840 ;--------------------------------------------------------
                                    841 	.area BSEG    (BIT)
      000000                        842 _packet_received:
      000000                        843 	.ds 1
      000001                        844 _preamble_detected:
      000001                        845 	.ds 1
      000002                        846 _radio_preamble_detected_EX0_saved_1_156:
      000002                        847 	.ds 1
      000003                        848 _radio_transmit_simple_transmit_started_1_169:
      000003                        849 	.ds 1
      000004                        850 _radio_transmit_ret_1_185:
      000004                        851 	.ds 1
      000005                        852 _radio_transmit_EX0_saved_1_185:
      000005                        853 	.ds 1
      000006                        854 _radio_initialise_sloc0_1_0:
      000006                        855 	.ds 1
                                    856 ;--------------------------------------------------------
                                    857 ; paged external ram data
                                    858 ;--------------------------------------------------------
                                    859 	.area PSEG    (PAG,XDATA)
      000000                        860 _receive_packet_length::
      000000                        861 	.ds 1
      000001                        862 _partial_packet_length::
      000001                        863 	.ds 1
      000002                        864 _last_rssi::
      000002                        865 	.ds 1
      000003                        866 _netid::
      000003                        867 	.ds 2
      000005                        868 _settings::
      000005                        869 	.ds 12
      000011                        870 _radio_receive_packet_PARM_2:
      000011                        871 	.ds 2
      000013                        872 _radio_write_transmit_fifo_PARM_2:
      000013                        873 	.ds 2
      000015                        874 _radio_transmit_simple_PARM_2:
      000015                        875 	.ds 2
      000017                        876 _radio_transmit_simple_PARM_3:
      000017                        877 	.ds 2
      000019                        878 _radio_transmit_PARM_2:
      000019                        879 	.ds 2
      00001B                        880 _radio_transmit_PARM_3:
      00001B                        881 	.ds 2
      00001D                        882 _scale_uint32_PARM_2:
      00001D                        883 	.ds 4
      000021                        884 _scale_uint32_value_1_240:
      000021                        885 	.ds 4
      000025                        886 _set_frequency_registers_frequency_1_248:
      000025                        887 	.ds 4
                                    888 ;--------------------------------------------------------
                                    889 ; external ram data
                                    890 ;--------------------------------------------------------
                                    891 	.area XSEG    (XDATA)
      000000                        892 _radio_buffer::
      000000                        893 	.ds 252
      0000FC                        894 _radio_receive_packet_length_1_142:
      0000FC                        895 	.ds 3
      0000FF                        896 _radio_transmit_length_1_184:
      0000FF                        897 	.ds 1
      000100                        898 _radio_set_channel_channel_1_198:
      000100                        899 	.ds 1
      000101                        900 _radio_set_transmit_power_power_1_222:
      000101                        901 	.ds 1
      000102                        902 _radio_set_transmit_power_i_1_223:
      000102                        903 	.ds 1
      000103                        904 _radio_set_network_id_id_1_228:
      000103                        905 	.ds 2
      000105                        906 _set_frequency_registers_band_1_249:
      000105                        907 	.ds 1
      000106                        908 _radio_set_diversity_state_1_254:
      000106                        909 	.ds 1
                                    910 ;--------------------------------------------------------
                                    911 ; absolute external ram data
                                    912 ;--------------------------------------------------------
                                    913 	.area XABS    (ABS,XDATA)
                                    914 ;--------------------------------------------------------
                                    915 ; external initialized ram data
                                    916 ;--------------------------------------------------------
                                    917 	.area XISEG   (XDATA)
                                    918 	.area HOME    (CODE)
                                    919 	.area GSINIT0 (CODE)
                                    920 	.area GSINIT1 (CODE)
                                    921 	.area GSINIT2 (CODE)
                                    922 	.area GSINIT3 (CODE)
                                    923 	.area GSINIT4 (CODE)
                                    924 	.area GSINIT5 (CODE)
                                    925 	.area GSINIT  (CODE)
                                    926 	.area GSFINAL (CODE)
                                    927 	.area CSEG    (CODE)
                                    928 ;--------------------------------------------------------
                                    929 ; global & static initialisations
                                    930 ;--------------------------------------------------------
                                    931 	.area HOME    (CODE)
                                    932 	.area GSINIT  (CODE)
                                    933 	.area GSFINAL (CODE)
                                    934 	.area GSINIT  (CODE)
                                    935 ;--------------------------------------------------------
                                    936 ; Home
                                    937 ;--------------------------------------------------------
                                    938 	.area HOME    (CODE)
                                    939 	.area HOME    (CODE)
                                    940 ;--------------------------------------------------------
                                    941 ; code
                                    942 ;--------------------------------------------------------
                                    943 	.area CSEG    (CODE)
                                    944 ;------------------------------------------------------------
                                    945 ;Allocation info for local variables in function 'radio_receive_packet'
                                    946 ;------------------------------------------------------------
                                    947 ;length                    Allocated with name '_radio_receive_packet_length_1_142'
                                    948 ;------------------------------------------------------------
                                    949 ;	radio/radio.c:78: radio_receive_packet(uint8_t *length, __xdata uint8_t * __pdata buf)
                                    950 ;	-----------------------------------------
                                    951 ;	 function radio_receive_packet
                                    952 ;	-----------------------------------------
      000000                        953 _radio_receive_packet:
                           000007   954 	ar7 = 0x07
                           000006   955 	ar6 = 0x06
                           000005   956 	ar5 = 0x05
                           000004   957 	ar4 = 0x04
                           000003   958 	ar3 = 0x03
                           000002   959 	ar2 = 0x02
                           000001   960 	ar1 = 0x01
                           000000   961 	ar0 = 0x00
      000000 AF F0            [24]  962 	mov	r7,b
      000002 AE 83            [24]  963 	mov	r6,dph
      000004 E5 82            [12]  964 	mov	a,dpl
      000006 90r00rFC         [24]  965 	mov	dptr,#_radio_receive_packet_length_1_142
      000009 F0               [24]  966 	movx	@dptr,a
      00000A EE               [12]  967 	mov	a,r6
      00000B A3               [24]  968 	inc	dptr
      00000C F0               [24]  969 	movx	@dptr,a
      00000D EF               [12]  970 	mov	a,r7
      00000E A3               [24]  971 	inc	dptr
      00000F F0               [24]  972 	movx	@dptr,a
                                    973 ;	radio/radio.c:87: if (!packet_received) {
      000010 20*00 02         [24]  974 	jb	_packet_received,00102$
                                    975 ;	radio/radio.c:88: return false;
      000013 C3               [12]  976 	clr	c
      000014 22               [24]  977 	ret
      000015                        978 00102$:
                                    979 ;	radio/radio.c:91: if (receive_packet_length > MAX_PACKET_LENGTH) {
      000015 78r00            [12]  980 	mov	r0,#_receive_packet_length
      000017 C3               [12]  981 	clr	c
      000018 E2               [24]  982 	movx	a,@r0
      000019 F5 F0            [12]  983 	mov	b,a
      00001B 74 FC            [12]  984 	mov	a,#0xFC
      00001D 95 F0            [12]  985 	subb	a,b
      00001F 50 05            [24]  986 	jnc	00104$
                                    987 ;	radio/radio.c:92: radio_receiver_on();
      000021 12r03r75         [24]  988 	lcall	_radio_receiver_on
                                    989 ;	radio/radio.c:93: goto failed;
      000024 80 45            [24]  990 	sjmp	00105$
      000026                        991 00104$:
                                    992 ;	radio/radio.c:108: *length = receive_packet_length;
      000026 90r00rFC         [24]  993 	mov	dptr,#_radio_receive_packet_length_1_142
      000029 E0               [24]  994 	movx	a,@dptr
      00002A FD               [12]  995 	mov	r5,a
      00002B A3               [24]  996 	inc	dptr
      00002C E0               [24]  997 	movx	a,@dptr
      00002D FE               [12]  998 	mov	r6,a
      00002E A3               [24]  999 	inc	dptr
      00002F E0               [24] 1000 	movx	a,@dptr
      000030 FF               [12] 1001 	mov	r7,a
      000031 8D 82            [24] 1002 	mov	dpl,r5
      000033 8E 83            [24] 1003 	mov	dph,r6
      000035 8F F0            [24] 1004 	mov	b,r7
      000037 78r00            [12] 1005 	mov	r0,#_receive_packet_length
      000039 E2               [24] 1006 	movx	a,@r0
      00003A 12r00r00         [24] 1007 	lcall	__gptrput
                                   1008 ;	radio/radio.c:109: memcpy(buf, radio_buffer, receive_packet_length);
      00003D 78r11            [12] 1009 	mov	r0,#_radio_receive_packet_PARM_2
      00003F E2               [24] 1010 	movx	a,@r0
      000040 FD               [12] 1011 	mov	r5,a
      000041 08               [12] 1012 	inc	r0
      000042 E2               [24] 1013 	movx	a,@r0
      000043 FE               [12] 1014 	mov	r6,a
      000044 7F 00            [12] 1015 	mov	r7,#0x00
      000046 90r00r00         [24] 1016 	mov	dptr,#_memcpy_PARM_2
      000049 74r00            [12] 1017 	mov	a,#_radio_buffer
      00004B F0               [24] 1018 	movx	@dptr,a
      00004C 74s00            [12] 1019 	mov	a,#(_radio_buffer >> 8)
      00004E A3               [24] 1020 	inc	dptr
      00004F F0               [24] 1021 	movx	@dptr,a
      000050 E4               [12] 1022 	clr	a
      000051 A3               [24] 1023 	inc	dptr
      000052 F0               [24] 1024 	movx	@dptr,a
      000053 78r00            [12] 1025 	mov	r0,#_receive_packet_length
      000055 90r00r00         [24] 1026 	mov	dptr,#_memcpy_PARM_3
      000058 E2               [24] 1027 	movx	a,@r0
      000059 F0               [24] 1028 	movx	@dptr,a
      00005A E4               [12] 1029 	clr	a
      00005B A3               [24] 1030 	inc	dptr
      00005C F0               [24] 1031 	movx	@dptr,a
      00005D 8D 82            [24] 1032 	mov	dpl,r5
      00005F 8E 83            [24] 1033 	mov	dph,r6
      000061 8F F0            [24] 1034 	mov	b,r7
      000063 12r00r00         [24] 1035 	lcall	_memcpy
                                   1036 ;	radio/radio.c:112: radio_receiver_on();
      000066 12r03r75         [24] 1037 	lcall	_radio_receiver_on
                                   1038 ;	radio/radio.c:113: return true;
      000069 D3               [12] 1039 	setb	c
                                   1040 ;	radio/radio.c:187: failed:
      00006A 22               [24] 1041 	ret
      00006B                       1042 00105$:
                                   1043 ;	radio/radio.c:188: if (errors.rx_errors != 0xFFFF) {
      00006B 78r00            [12] 1044 	mov	r0,#_errors
      00006D E2               [24] 1045 	movx	a,@r0
      00006E FE               [12] 1046 	mov	r6,a
      00006F 08               [12] 1047 	inc	r0
      000070 E2               [24] 1048 	movx	a,@r0
      000071 FF               [12] 1049 	mov	r7,a
      000072 BE FF 05         [24] 1050 	cjne	r6,#0xFF,00121$
      000075 BF FF 02         [24] 1051 	cjne	r7,#0xFF,00121$
      000078 80 0C            [24] 1052 	sjmp	00107$
      00007A                       1053 00121$:
                                   1054 ;	radio/radio.c:189: errors.rx_errors++;
      00007A 0E               [12] 1055 	inc	r6
      00007B BE 00 01         [24] 1056 	cjne	r6,#0x00,00122$
      00007E 0F               [12] 1057 	inc	r7
      00007F                       1058 00122$:
      00007F 78r00            [12] 1059 	mov	r0,#_errors
      000081 EE               [12] 1060 	mov	a,r6
      000082 F2               [24] 1061 	movx	@r0,a
      000083 08               [12] 1062 	inc	r0
      000084 EF               [12] 1063 	mov	a,r7
      000085 F2               [24] 1064 	movx	@r0,a
      000086                       1065 00107$:
                                   1066 ;	radio/radio.c:191: return false;
      000086 C3               [12] 1067 	clr	c
      000087 22               [24] 1068 	ret
                                   1069 ;------------------------------------------------------------
                                   1070 ;Allocation info for local variables in function 'radio_write_transmit_fifo'
                                   1071 ;------------------------------------------------------------
                                   1072 ;n                         Allocated to registers r7 
                                   1073 ;------------------------------------------------------------
                                   1074 ;	radio/radio.c:198: radio_write_transmit_fifo(register uint8_t n, __xdata uint8_t * __pdata buffer)
                                   1075 ;	-----------------------------------------
                                   1076 ;	 function radio_write_transmit_fifo
                                   1077 ;	-----------------------------------------
      000088                       1078 _radio_write_transmit_fifo:
      000088 AF 82            [24] 1079 	mov	r7,dpl
                                   1080 ;	radio/radio.c:200: RADIO_PAGE();
      00008A 75 A7 02         [24] 1081 	mov	_SFRPAGE,#0x02
                                   1082 ;	radio/radio.c:202: NSS1 = 0;
      00008D C2 A3            [12] 1083 	clr	_NSS1
                                   1084 ;	radio/radio.c:203: SPIF1 = 0;
      00008F C2 FF            [12] 1085 	clr	_SPIF1
                                   1086 ;	radio/radio.c:204: SPI1DAT = (0x80 | EZRADIOPRO_FIFO_ACCESS);
      000091 75 A3 FF         [24] 1087 	mov	_SPI1DAT,#0xFF
                                   1088 ;	radio/radio.c:206: while (n--) {
      000094 78r13            [12] 1089 	mov	r0,#_radio_write_transmit_fifo_PARM_2
      000096 E2               [24] 1090 	movx	a,@r0
      000097 FD               [12] 1091 	mov	r5,a
      000098 08               [12] 1092 	inc	r0
      000099 E2               [24] 1093 	movx	a,@r0
      00009A FE               [12] 1094 	mov	r6,a
      00009B                       1095 00104$:
      00009B 8F 04            [24] 1096 	mov	ar4,r7
      00009D 1F               [12] 1097 	dec	r7
      00009E EC               [12] 1098 	mov	a,r4
      00009F 60 11            [24] 1099 	jz	00107$
                                   1100 ;	radio/radio.c:207: while (!TXBMT1) /* noop */;
      0000A1                       1101 00101$:
      0000A1 30 F9 FD         [24] 1102 	jnb	_TXBMT1,00101$
                                   1103 ;	radio/radio.c:208: SPI1DAT = *buffer++;
      0000A4 8D 82            [24] 1104 	mov	dpl,r5
      0000A6 8E 83            [24] 1105 	mov	dph,r6
      0000A8 E0               [24] 1106 	movx	a,@dptr
      0000A9 F5 A3            [12] 1107 	mov	_SPI1DAT,a
      0000AB A3               [24] 1108 	inc	dptr
      0000AC AD 82            [24] 1109 	mov	r5,dpl
      0000AE AE 83            [24] 1110 	mov	r6,dph
                                   1111 ;	radio/radio.c:211: while (!TXBMT1) /* noop */;
      0000B0 80 E9            [24] 1112 	sjmp	00104$
      0000B2                       1113 00107$:
      0000B2 30 F9 FD         [24] 1114 	jnb	_TXBMT1,00107$
                                   1115 ;	radio/radio.c:212: while ((SPI1CFG & 0x80) == 0x80);
      0000B5                       1116 00110$:
      0000B5 74 80            [12] 1117 	mov	a,#0x80
      0000B7 55 A1            [12] 1118 	anl	a,_SPI1CFG
      0000B9 FF               [12] 1119 	mov	r7,a
      0000BA BF 80 02         [24] 1120 	cjne	r7,#0x80,00137$
      0000BD 80 F6            [24] 1121 	sjmp	00110$
      0000BF                       1122 00137$:
                                   1123 ;	radio/radio.c:214: SPIF1 = 0;
      0000BF C2 FF            [12] 1124 	clr	_SPIF1
                                   1125 ;	radio/radio.c:215: NSS1 = 1;
      0000C1 D2 A3            [12] 1126 	setb	_NSS1
                                   1127 ;	radio/radio.c:217: SFRPAGE = LEGACY_PAGE;
      0000C3 75 A7 00         [24] 1128 	mov	_SFRPAGE,#0x00
      0000C6 22               [24] 1129 	ret
                                   1130 ;------------------------------------------------------------
                                   1131 ;Allocation info for local variables in function 'radio_receive_in_progress'
                                   1132 ;------------------------------------------------------------
                                   1133 ;	radio/radio.c:223: radio_receive_in_progress(void)
                                   1134 ;	-----------------------------------------
                                   1135 ;	 function radio_receive_in_progress
                                   1136 ;	-----------------------------------------
      0000C7                       1137 _radio_receive_in_progress:
                                   1138 ;	radio/radio.c:225: if (packet_received ||
      0000C7 20*00 05         [24] 1139 	jb	_packet_received,00101$
                                   1140 ;	radio/radio.c:226: partial_packet_length != 0) {
      0000CA 78r01            [12] 1141 	mov	r0,#_partial_packet_length
      0000CC E2               [24] 1142 	movx	a,@r0
      0000CD 60 02            [24] 1143 	jz	00102$
      0000CF                       1144 00101$:
                                   1145 ;	radio/radio.c:227: return true;
      0000CF D3               [12] 1146 	setb	c
      0000D0 22               [24] 1147 	ret
      0000D1                       1148 00102$:
                                   1149 ;	radio/radio.c:231: if (register_read(EZRADIOPRO_EZMAC_STATUS) & EZRADIOPRO_PKRX) {
      0000D1 75 82 31         [24] 1150 	mov	dpl,#0x31
      0000D4 12r08r4A         [24] 1151 	lcall	_register_read
      0000D7 E5 82            [12] 1152 	mov	a,dpl
      0000D9 30 E4 02         [24] 1153 	jnb	acc.4,00105$
                                   1154 ;	radio/radio.c:232: return true;
      0000DC D3               [12] 1155 	setb	c
      0000DD 22               [24] 1156 	ret
      0000DE                       1157 00105$:
                                   1158 ;	radio/radio.c:234: return false;
      0000DE C3               [12] 1159 	clr	c
      0000DF 22               [24] 1160 	ret
                                   1161 ;------------------------------------------------------------
                                   1162 ;Allocation info for local variables in function 'radio_preamble_detected'
                                   1163 ;------------------------------------------------------------
                                   1164 ;	radio/radio.c:241: radio_preamble_detected(void)
                                   1165 ;	-----------------------------------------
                                   1166 ;	 function radio_preamble_detected
                                   1167 ;	-----------------------------------------
      0000E0                       1168 _radio_preamble_detected:
                                   1169 ;	radio/radio.c:243: EX0_SAVE_DISABLE;
      0000E0 A2 A8            [12] 1170 	mov	c,_EX0
      0000E2 92*02            [24] 1171 	mov	_radio_preamble_detected_EX0_saved_1_156,c
      0000E4 C2 A8            [12] 1172 	clr	_EX0
                                   1173 ;	radio/radio.c:244: if (preamble_detected) {
                                   1174 ;	radio/radio.c:245: preamble_detected = 0;
      0000E6 10*01 02         [24] 1175 	jbc	_preamble_detected,00108$
      0000E9 80 06            [24] 1176 	sjmp	00102$
      0000EB                       1177 00108$:
                                   1178 ;	radio/radio.c:246: EX0_RESTORE;
      0000EB A2*02            [12] 1179 	mov	c,_radio_preamble_detected_EX0_saved_1_156
      0000ED 92 A8            [24] 1180 	mov	_EX0,c
                                   1181 ;	radio/radio.c:247: return true;
      0000EF D3               [12] 1182 	setb	c
      0000F0 22               [24] 1183 	ret
      0000F1                       1184 00102$:
                                   1185 ;	radio/radio.c:249: EX0_RESTORE;
      0000F1 A2*02            [12] 1186 	mov	c,_radio_preamble_detected_EX0_saved_1_156
      0000F3 92 A8            [24] 1187 	mov	_EX0,c
                                   1188 ;	radio/radio.c:250: return false;
      0000F5 C3               [12] 1189 	clr	c
      0000F6 22               [24] 1190 	ret
                                   1191 ;------------------------------------------------------------
                                   1192 ;Allocation info for local variables in function 'radio_last_rssi'
                                   1193 ;------------------------------------------------------------
                                   1194 ;	radio/radio.c:258: radio_last_rssi(void)
                                   1195 ;	-----------------------------------------
                                   1196 ;	 function radio_last_rssi
                                   1197 ;	-----------------------------------------
      0000F7                       1198 _radio_last_rssi:
                                   1199 ;	radio/radio.c:260: return last_rssi;
      0000F7 78r02            [12] 1200 	mov	r0,#_last_rssi
      0000F9 E2               [24] 1201 	movx	a,@r0
      0000FA F5 82            [12] 1202 	mov	dpl,a
      0000FC 22               [24] 1203 	ret
                                   1204 ;------------------------------------------------------------
                                   1205 ;Allocation info for local variables in function 'radio_current_rssi'
                                   1206 ;------------------------------------------------------------
                                   1207 ;	radio/radio.c:266: radio_current_rssi(void)
                                   1208 ;	-----------------------------------------
                                   1209 ;	 function radio_current_rssi
                                   1210 ;	-----------------------------------------
      0000FD                       1211 _radio_current_rssi:
                                   1212 ;	radio/radio.c:268: return register_read(EZRADIOPRO_RECEIVED_SIGNAL_STRENGTH_INDICATOR);
      0000FD 75 82 26         [24] 1213 	mov	dpl,#0x26
      000100 02r08r4A         [24] 1214 	ljmp	_register_read
                                   1215 ;------------------------------------------------------------
                                   1216 ;Allocation info for local variables in function 'radio_air_rate'
                                   1217 ;------------------------------------------------------------
                                   1218 ;	radio/radio.c:274: radio_air_rate(void)
                                   1219 ;	-----------------------------------------
                                   1220 ;	 function radio_air_rate
                                   1221 ;	-----------------------------------------
      000103                       1222 _radio_air_rate:
                                   1223 ;	radio/radio.c:276: return settings.air_data_rate;
      000103 78r0D            [12] 1224 	mov	r0,#(_settings + 0x0008)
      000105 E2               [24] 1225 	movx	a,@r0
      000106 F5 82            [12] 1226 	mov	dpl,a
      000108 22               [24] 1227 	ret
                                   1228 ;------------------------------------------------------------
                                   1229 ;Allocation info for local variables in function 'radio_clear_transmit_fifo'
                                   1230 ;------------------------------------------------------------
                                   1231 ;control                   Allocated to registers r7 
                                   1232 ;------------------------------------------------------------
                                   1233 ;	radio/radio.c:282: radio_clear_transmit_fifo(void)
                                   1234 ;	-----------------------------------------
                                   1235 ;	 function radio_clear_transmit_fifo
                                   1236 ;	-----------------------------------------
      000109                       1237 _radio_clear_transmit_fifo:
                                   1238 ;	radio/radio.c:285: control = register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2);
      000109 75 82 08         [24] 1239 	mov	dpl,#0x08
      00010C 12r08r4A         [24] 1240 	lcall	_register_read
      00010F AF 82            [24] 1241 	mov	r7,dpl
                                   1242 ;	radio/radio.c:286: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control | EZRADIOPRO_FFCLRTX);
      000111 74 01            [12] 1243 	mov	a,#0x01
      000113 4F               [12] 1244 	orl	a,r7
      000114 FE               [12] 1245 	mov	r6,a
      000115 C0 07            [24] 1246 	push	ar7
      000117 C0 06            [24] 1247 	push	ar6
      000119 75 82 08         [24] 1248 	mov	dpl,#0x08
      00011C 12r08r14         [24] 1249 	lcall	_register_write
      00011F 15 81            [12] 1250 	dec	sp
      000121 D0 07            [24] 1251 	pop	ar7
                                   1252 ;	radio/radio.c:287: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control & ~EZRADIOPRO_FFCLRTX);
      000123 53 07 FE         [24] 1253 	anl	ar7,#0xFE
      000126 C0 07            [24] 1254 	push	ar7
      000128 75 82 08         [24] 1255 	mov	dpl,#0x08
      00012B 12r08r14         [24] 1256 	lcall	_register_write
      00012E 15 81            [12] 1257 	dec	sp
      000130 22               [24] 1258 	ret
                                   1259 ;------------------------------------------------------------
                                   1260 ;Allocation info for local variables in function 'radio_clear_receive_fifo'
                                   1261 ;------------------------------------------------------------
                                   1262 ;control                   Allocated to registers r7 
                                   1263 ;------------------------------------------------------------
                                   1264 ;	radio/radio.c:294: radio_clear_receive_fifo(void) __reentrant
                                   1265 ;	-----------------------------------------
                                   1266 ;	 function radio_clear_receive_fifo
                                   1267 ;	-----------------------------------------
      000131                       1268 _radio_clear_receive_fifo:
                                   1269 ;	radio/radio.c:297: control = register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2);
      000131 75 82 08         [24] 1270 	mov	dpl,#0x08
      000134 12r08r4A         [24] 1271 	lcall	_register_read
      000137 AF 82            [24] 1272 	mov	r7,dpl
                                   1273 ;	radio/radio.c:298: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control | EZRADIOPRO_FFCLRRX);
      000139 74 02            [12] 1274 	mov	a,#0x02
      00013B 4F               [12] 1275 	orl	a,r7
      00013C FE               [12] 1276 	mov	r6,a
      00013D C0 07            [24] 1277 	push	ar7
      00013F C0 06            [24] 1278 	push	ar6
      000141 75 82 08         [24] 1279 	mov	dpl,#0x08
      000144 12r08r14         [24] 1280 	lcall	_register_write
      000147 15 81            [12] 1281 	dec	sp
      000149 D0 07            [24] 1282 	pop	ar7
                                   1283 ;	radio/radio.c:299: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control & ~EZRADIOPRO_FFCLRRX);
      00014B 53 07 FD         [24] 1284 	anl	ar7,#0xFD
      00014E C0 07            [24] 1285 	push	ar7
      000150 75 82 08         [24] 1286 	mov	dpl,#0x08
      000153 12r08r14         [24] 1287 	lcall	_register_write
      000156 15 81            [12] 1288 	dec	sp
      000158 22               [24] 1289 	ret
                                   1290 ;------------------------------------------------------------
                                   1291 ;Allocation info for local variables in function 'radio_transmit_simple'
                                   1292 ;------------------------------------------------------------
                                   1293 ;length                    Allocated to registers r7 
                                   1294 ;n                         Allocated to registers r6 
                                   1295 ;status                    Allocated to registers r3 
                                   1296 ;------------------------------------------------------------
                                   1297 ;	radio/radio.c:311: radio_transmit_simple(__data uint8_t length, __xdata uint8_t * __pdata buf, __pdata uint16_t timeout_ticks)
                                   1298 ;	-----------------------------------------
                                   1299 ;	 function radio_transmit_simple
                                   1300 ;	-----------------------------------------
      000159                       1301 _radio_transmit_simple:
                                   1302 ;	radio/radio.c:317: if (length > sizeof(radio_buffer)) {
      000159 E5 82            [12] 1303 	mov	a,dpl
      00015B FF               [12] 1304 	mov	r7,a
      00015C 24 03            [12] 1305 	add	a,#0xff - 0xFC
      00015E 50 19            [24] 1306 	jnc	00102$
                                   1307 ;	radio/radio.c:318: panic("oversized packet");
      000160 C0 07            [24] 1308 	push	ar7
      000162 74r00            [12] 1309 	mov	a,#___str_0
      000164 C0 E0            [24] 1310 	push	acc
      000166 74s00            [12] 1311 	mov	a,#(___str_0 >> 8)
      000168 C0 E0            [24] 1312 	push	acc
      00016A 74 80            [12] 1313 	mov	a,#0x80
      00016C C0 E0            [24] 1314 	push	acc
      00016E 12r00r00         [24] 1315 	lcall	_panic
      000171 15 81            [12] 1316 	dec	sp
      000173 15 81            [12] 1317 	dec	sp
      000175 15 81            [12] 1318 	dec	sp
      000177 D0 07            [24] 1319 	pop	ar7
      000179                       1320 00102$:
                                   1321 ;	radio/radio.c:321: radio_clear_transmit_fifo();
      000179 C0 07            [24] 1322 	push	ar7
      00017B 12r01r09         [24] 1323 	lcall	_radio_clear_transmit_fifo
      00017E D0 07            [24] 1324 	pop	ar7
                                   1325 ;	radio/radio.c:323: register_write(EZRADIOPRO_TRANSMIT_PACKET_LENGTH, length);
      000180 C0 07            [24] 1326 	push	ar7
      000182 C0 07            [24] 1327 	push	ar7
      000184 75 82 3E         [24] 1328 	mov	dpl,#0x3E
      000187 12r08r14         [24] 1329 	lcall	_register_write
      00018A 15 81            [12] 1330 	dec	sp
      00018C D0 07            [24] 1331 	pop	ar7
                                   1332 ;	radio/radio.c:326: n = length;
                                   1333 ;	radio/radio.c:327: if (n > TX_FIFO_THRESHOLD_LOW) {
      00018E EF               [12] 1334 	mov	a,r7
      00018F FE               [12] 1335 	mov	r6,a
      000190 24 DF            [12] 1336 	add	a,#0xff - 0x20
      000192 50 02            [24] 1337 	jnc	00104$
                                   1338 ;	radio/radio.c:328: n = TX_FIFO_THRESHOLD_LOW;
      000194 7E 20            [12] 1339 	mov	r6,#0x20
      000196                       1340 00104$:
                                   1341 ;	radio/radio.c:330: radio_write_transmit_fifo(n, buf);
      000196 78r15            [12] 1342 	mov	r0,#_radio_transmit_simple_PARM_2
      000198 79r13            [12] 1343 	mov	r1,#_radio_write_transmit_fifo_PARM_2
      00019A E2               [24] 1344 	movx	a,@r0
      00019B F3               [24] 1345 	movx	@r1,a
      00019C 08               [12] 1346 	inc	r0
      00019D E2               [24] 1347 	movx	a,@r0
      00019E 09               [12] 1348 	inc	r1
      00019F F3               [24] 1349 	movx	@r1,a
      0001A0 8E 82            [24] 1350 	mov	dpl,r6
      0001A2 C0 07            [24] 1351 	push	ar7
      0001A4 C0 06            [24] 1352 	push	ar6
      0001A6 12r00r88         [24] 1353 	lcall	_radio_write_transmit_fifo
      0001A9 D0 06            [24] 1354 	pop	ar6
      0001AB D0 07            [24] 1355 	pop	ar7
                                   1356 ;	radio/radio.c:331: length -= n;
      0001AD EF               [12] 1357 	mov	a,r7
      0001AE C3               [12] 1358 	clr	c
      0001AF 9E               [12] 1359 	subb	a,r6
      0001B0 FF               [12] 1360 	mov	r7,a
                                   1361 ;	radio/radio.c:332: buf += n;
      0001B1 78r15            [12] 1362 	mov	r0,#_radio_transmit_simple_PARM_2
      0001B3 E2               [24] 1363 	movx	a,@r0
      0001B4 2E               [12] 1364 	add	a,r6
      0001B5 F2               [24] 1365 	movx	@r0,a
      0001B6 08               [12] 1366 	inc	r0
      0001B7 E2               [24] 1367 	movx	a,@r0
      0001B8 34 00            [12] 1368 	addc	a,#0x00
      0001BA F2               [24] 1369 	movx	@r0,a
                                   1370 ;	radio/radio.c:335: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      0001BB C0 07            [24] 1371 	push	ar7
      0001BD E4               [12] 1372 	clr	a
      0001BE C0 E0            [24] 1373 	push	acc
      0001C0 75 82 05         [24] 1374 	mov	dpl,#0x05
      0001C3 12r08r14         [24] 1375 	lcall	_register_write
      0001C6 15 81            [12] 1376 	dec	sp
                                   1377 ;	radio/radio.c:336: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0);
      0001C8 E4               [12] 1378 	clr	a
      0001C9 C0 E0            [24] 1379 	push	acc
      0001CB 75 82 06         [24] 1380 	mov	dpl,#0x06
      0001CE 12r08r14         [24] 1381 	lcall	_register_write
      0001D1 15 81            [12] 1382 	dec	sp
                                   1383 ;	radio/radio.c:338: preamble_detected = 0;
      0001D3 C2*01            [12] 1384 	clr	_preamble_detected
                                   1385 ;	radio/radio.c:339: transmit_started = false;
      0001D5 C2*03            [12] 1386 	clr	_radio_transmit_simple_transmit_started_1_169
                                   1387 ;	radio/radio.c:342: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, EZRADIOPRO_TXON | EZRADIOPRO_XTON);
      0001D7 74 09            [12] 1388 	mov	a,#0x09
      0001D9 C0 E0            [24] 1389 	push	acc
      0001DB 75 82 07         [24] 1390 	mov	dpl,#0x07
      0001DE 12r08r14         [24] 1391 	lcall	_register_write
      0001E1 15 81            [12] 1392 	dec	sp
                                   1393 ;	radio/radio.c:348: tstart = timer2_tick();
      0001E3 12r00r00         [24] 1394 	lcall	_timer2_tick
      0001E6 AC 82            [24] 1395 	mov	r4,dpl
      0001E8 AD 83            [24] 1396 	mov	r5,dph
      0001EA D0 07            [24] 1397 	pop	ar7
                                   1398 ;	radio/radio.c:349: while ((uint16_t)(timer2_tick() - tstart) < timeout_ticks) {
      0001EC                       1399 00130$:
      0001EC C0 07            [24] 1400 	push	ar7
      0001EE C0 05            [24] 1401 	push	ar5
      0001F0 C0 04            [24] 1402 	push	ar4
      0001F2 12r00r00         [24] 1403 	lcall	_timer2_tick
      0001F5 AA 82            [24] 1404 	mov	r2,dpl
      0001F7 AB 83            [24] 1405 	mov	r3,dph
      0001F9 D0 04            [24] 1406 	pop	ar4
      0001FB D0 05            [24] 1407 	pop	ar5
      0001FD D0 07            [24] 1408 	pop	ar7
      0001FF EA               [12] 1409 	mov	a,r2
      000200 C3               [12] 1410 	clr	c
      000201 9C               [12] 1411 	subb	a,r4
      000202 FA               [12] 1412 	mov	r2,a
      000203 EB               [12] 1413 	mov	a,r3
      000204 9D               [12] 1414 	subb	a,r5
      000205 FB               [12] 1415 	mov	r3,a
      000206 78r17            [12] 1416 	mov	r0,#_radio_transmit_simple_PARM_3
      000208 C3               [12] 1417 	clr	c
      000209 E2               [24] 1418 	movx	a,@r0
      00020A F5 F0            [12] 1419 	mov	b,a
      00020C EA               [12] 1420 	mov	a,r2
      00020D 95 F0            [12] 1421 	subb	a,b
      00020F 08               [12] 1422 	inc	r0
      000210 E2               [24] 1423 	movx	a,@r0
      000211 F5 F0            [12] 1424 	mov	b,a
      000213 EB               [12] 1425 	mov	a,r3
      000214 95 F0            [12] 1426 	subb	a,b
      000216 40 03            [24] 1427 	jc	00199$
      000218 02r03r25         [24] 1428 	ljmp	00132$
      00021B                       1429 00199$:
                                   1430 ;	radio/radio.c:353: status = register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      00021B 75 82 03         [24] 1431 	mov	dpl,#0x03
      00021E C0 07            [24] 1432 	push	ar7
      000220 C0 05            [24] 1433 	push	ar5
      000222 C0 04            [24] 1434 	push	ar4
      000224 12r08r4A         [24] 1435 	lcall	_register_read
      000227 AB 82            [24] 1436 	mov	r3,dpl
      000229 D0 04            [24] 1437 	pop	ar4
      00022B D0 05            [24] 1438 	pop	ar5
      00022D D0 07            [24] 1439 	pop	ar7
                                   1440 ;	radio/radio.c:354: if (transmit_started && length != 0 && (status & EZRADIOPRO_ITXFFAEM)) {
      00022F 30*03 40         [24] 1441 	jnb	_radio_transmit_simple_transmit_started_1_169,00108$
      000232 EF               [12] 1442 	mov	a,r7
      000233 60 3D            [24] 1443 	jz	00108$
      000235 EB               [12] 1444 	mov	a,r3
      000236 30 E5 39         [24] 1445 	jnb	acc.5,00108$
                                   1446 ;	radio/radio.c:361: n = 4;
      000239 7E 04            [12] 1447 	mov	r6,#0x04
                                   1448 ;	radio/radio.c:362: if (n > length) {
      00023B BF 04 00         [24] 1449 	cjne	r7,#0x04,00203$
      00023E                       1450 00203$:
      00023E 50 02            [24] 1451 	jnc	00106$
                                   1452 ;	radio/radio.c:363: n = length;
      000240 8F 06            [24] 1453 	mov	ar6,r7
      000242                       1454 00106$:
                                   1455 ;	radio/radio.c:365: radio_write_transmit_fifo(n, buf);
      000242 78r15            [12] 1456 	mov	r0,#_radio_transmit_simple_PARM_2
      000244 79r13            [12] 1457 	mov	r1,#_radio_write_transmit_fifo_PARM_2
      000246 E2               [24] 1458 	movx	a,@r0
      000247 F3               [24] 1459 	movx	@r1,a
      000248 08               [12] 1460 	inc	r0
      000249 E2               [24] 1461 	movx	a,@r0
      00024A 09               [12] 1462 	inc	r1
      00024B F3               [24] 1463 	movx	@r1,a
      00024C 8E 82            [24] 1464 	mov	dpl,r6
      00024E C0 07            [24] 1465 	push	ar7
      000250 C0 06            [24] 1466 	push	ar6
      000252 C0 05            [24] 1467 	push	ar5
      000254 C0 04            [24] 1468 	push	ar4
      000256 12r00r88         [24] 1469 	lcall	_radio_write_transmit_fifo
      000259 D0 04            [24] 1470 	pop	ar4
      00025B D0 05            [24] 1471 	pop	ar5
      00025D D0 06            [24] 1472 	pop	ar6
      00025F D0 07            [24] 1473 	pop	ar7
                                   1474 ;	radio/radio.c:366: length -= n;
      000261 EF               [12] 1475 	mov	a,r7
      000262 C3               [12] 1476 	clr	c
      000263 9E               [12] 1477 	subb	a,r6
      000264 FF               [12] 1478 	mov	r7,a
                                   1479 ;	radio/radio.c:367: buf += n;
      000265 78r15            [12] 1480 	mov	r0,#_radio_transmit_simple_PARM_2
      000267 E2               [24] 1481 	movx	a,@r0
      000268 2E               [12] 1482 	add	a,r6
      000269 F2               [24] 1483 	movx	@r0,a
      00026A 08               [12] 1484 	inc	r0
      00026B E2               [24] 1485 	movx	a,@r0
      00026C 34 00            [12] 1486 	addc	a,#0x00
      00026E F2               [24] 1487 	movx	@r0,a
                                   1488 ;	radio/radio.c:368: continue;
      00026F 02r01rEC         [24] 1489 	ljmp	00130$
      000272                       1490 00108$:
                                   1491 ;	radio/radio.c:370: if (transmit_started && length != 0 && (status & EZRADIOPRO_ITXFFAFULL) == 0) {
      000272 30*03 40         [24] 1492 	jnb	_radio_transmit_simple_transmit_started_1_169,00114$
      000275 EF               [12] 1493 	mov	a,r7
      000276 60 3D            [24] 1494 	jz	00114$
      000278 EB               [12] 1495 	mov	a,r3
      000279 20 E6 39         [24] 1496 	jb	acc.6,00114$
                                   1497 ;	radio/radio.c:374: n = 4;
      00027C 7E 04            [12] 1498 	mov	r6,#0x04
                                   1499 ;	radio/radio.c:375: if (n > length) {
      00027E BF 04 00         [24] 1500 	cjne	r7,#0x04,00208$
      000281                       1501 00208$:
      000281 50 02            [24] 1502 	jnc	00112$
                                   1503 ;	radio/radio.c:376: n = length;
      000283 8F 06            [24] 1504 	mov	ar6,r7
      000285                       1505 00112$:
                                   1506 ;	radio/radio.c:378: radio_write_transmit_fifo(n, buf);
      000285 78r15            [12] 1507 	mov	r0,#_radio_transmit_simple_PARM_2
      000287 79r13            [12] 1508 	mov	r1,#_radio_write_transmit_fifo_PARM_2
      000289 E2               [24] 1509 	movx	a,@r0
      00028A F3               [24] 1510 	movx	@r1,a
      00028B 08               [12] 1511 	inc	r0
      00028C E2               [24] 1512 	movx	a,@r0
      00028D 09               [12] 1513 	inc	r1
      00028E F3               [24] 1514 	movx	@r1,a
      00028F 8E 82            [24] 1515 	mov	dpl,r6
      000291 C0 07            [24] 1516 	push	ar7
      000293 C0 06            [24] 1517 	push	ar6
      000295 C0 05            [24] 1518 	push	ar5
      000297 C0 04            [24] 1519 	push	ar4
      000299 12r00r88         [24] 1520 	lcall	_radio_write_transmit_fifo
      00029C D0 04            [24] 1521 	pop	ar4
      00029E D0 05            [24] 1522 	pop	ar5
      0002A0 D0 06            [24] 1523 	pop	ar6
      0002A2 D0 07            [24] 1524 	pop	ar7
                                   1525 ;	radio/radio.c:379: length -= n;
      0002A4 EF               [12] 1526 	mov	a,r7
      0002A5 C3               [12] 1527 	clr	c
      0002A6 9E               [12] 1528 	subb	a,r6
      0002A7 FF               [12] 1529 	mov	r7,a
                                   1530 ;	radio/radio.c:380: buf += n;
      0002A8 78r15            [12] 1531 	mov	r0,#_radio_transmit_simple_PARM_2
      0002AA E2               [24] 1532 	movx	a,@r0
      0002AB 2E               [12] 1533 	add	a,r6
      0002AC F2               [24] 1534 	movx	@r0,a
      0002AD 08               [12] 1535 	inc	r0
      0002AE E2               [24] 1536 	movx	a,@r0
      0002AF 34 00            [12] 1537 	addc	a,#0x00
      0002B1 F2               [24] 1538 	movx	@r0,a
                                   1539 ;	radio/radio.c:381: continue;
      0002B2 02r01rEC         [24] 1540 	ljmp	00130$
      0002B5                       1541 00114$:
                                   1542 ;	radio/radio.c:384: if (status & EZRADIOPRO_IFFERR) {
      0002B5 EB               [12] 1543 	mov	a,r3
      0002B6 30 E7 20         [24] 1544 	jnb	acc.7,00120$
                                   1545 ;	radio/radio.c:386: radio_clear_transmit_fifo();
      0002B9 12r01r09         [24] 1546 	lcall	_radio_clear_transmit_fifo
                                   1547 ;	radio/radio.c:388: if (errors.tx_errors != 0xFFFF) {
      0002BC 78r02            [12] 1548 	mov	r0,#(_errors + 0x0002)
      0002BE E2               [24] 1549 	movx	a,@r0
      0002BF FA               [12] 1550 	mov	r2,a
      0002C0 08               [12] 1551 	inc	r0
      0002C1 E2               [24] 1552 	movx	a,@r0
      0002C2 FE               [12] 1553 	mov	r6,a
      0002C3 BA FF 05         [24] 1554 	cjne	r2,#0xFF,00211$
      0002C6 BE FF 02         [24] 1555 	cjne	r6,#0xFF,00211$
      0002C9 80 0C            [24] 1556 	sjmp	00118$
      0002CB                       1557 00211$:
                                   1558 ;	radio/radio.c:389: errors.tx_errors++;
      0002CB 0A               [12] 1559 	inc	r2
      0002CC BA 00 01         [24] 1560 	cjne	r2,#0x00,00212$
      0002CF 0E               [12] 1561 	inc	r6
      0002D0                       1562 00212$:
      0002D0 78r02            [12] 1563 	mov	r0,#(_errors + 0x0002)
      0002D2 EA               [12] 1564 	mov	a,r2
      0002D3 F2               [24] 1565 	movx	@r0,a
      0002D4 08               [12] 1566 	inc	r0
      0002D5 EE               [12] 1567 	mov	a,r6
      0002D6 F2               [24] 1568 	movx	@r0,a
      0002D7                       1569 00118$:
                                   1570 ;	radio/radio.c:394: return false;
      0002D7 C3               [12] 1571 	clr	c
      0002D8 22               [24] 1572 	ret
      0002D9                       1573 00120$:
                                   1574 ;	radio/radio.c:399: status = register_read(EZRADIOPRO_DEVICE_STATUS);
      0002D9 75 82 02         [24] 1575 	mov	dpl,#0x02
      0002DC C0 07            [24] 1576 	push	ar7
      0002DE C0 05            [24] 1577 	push	ar5
      0002E0 C0 04            [24] 1578 	push	ar4
      0002E2 12r08r4A         [24] 1579 	lcall	_register_read
      0002E5 AB 82            [24] 1580 	mov	r3,dpl
      0002E7 D0 04            [24] 1581 	pop	ar4
      0002E9 D0 05            [24] 1582 	pop	ar5
      0002EB D0 07            [24] 1583 	pop	ar7
                                   1584 ;	radio/radio.c:400: if (status & 0x02) {
      0002ED EB               [12] 1585 	mov	a,r3
      0002EE 30 E1 05         [24] 1586 	jnb	acc.1,00122$
                                   1587 ;	radio/radio.c:402: transmit_started = true;
      0002F1 D2*03            [12] 1588 	setb	_radio_transmit_simple_transmit_started_1_169
                                   1589 ;	radio/radio.c:403: continue;
      0002F3 02r01rEC         [24] 1590 	ljmp	00130$
      0002F6                       1591 00122$:
                                   1592 ;	radio/radio.c:405: if (transmit_started && (status & 0x02) == 0) {
      0002F6 20*03 03         [24] 1593 	jb	_radio_transmit_simple_transmit_started_1_169,00214$
      0002F9 02r01rEC         [24] 1594 	ljmp	00130$
      0002FC                       1595 00214$:
      0002FC EB               [12] 1596 	mov	a,r3
      0002FD 30 E1 03         [24] 1597 	jnb	acc.1,00215$
      000300 02r01rEC         [24] 1598 	ljmp	00130$
      000303                       1599 00215$:
                                   1600 ;	radio/radio.c:408: if (length != 0) {
      000303 EF               [12] 1601 	mov	a,r7
      000304 60 1D            [24] 1602 	jz	00126$
                                   1603 ;	radio/radio.c:410: if (errors.tx_errors != 0xFFFF) {
      000306 78r02            [12] 1604 	mov	r0,#(_errors + 0x0002)
      000308 E2               [24] 1605 	movx	a,@r0
      000309 FE               [12] 1606 	mov	r6,a
      00030A 08               [12] 1607 	inc	r0
      00030B E2               [24] 1608 	movx	a,@r0
      00030C FF               [12] 1609 	mov	r7,a
      00030D BE FF 05         [24] 1610 	cjne	r6,#0xFF,00217$
      000310 BF FF 02         [24] 1611 	cjne	r7,#0xFF,00217$
      000313 80 0C            [24] 1612 	sjmp	00124$
      000315                       1613 00217$:
                                   1614 ;	radio/radio.c:411: errors.tx_errors++;
      000315 0E               [12] 1615 	inc	r6
      000316 BE 00 01         [24] 1616 	cjne	r6,#0x00,00218$
      000319 0F               [12] 1617 	inc	r7
      00031A                       1618 00218$:
      00031A 78r02            [12] 1619 	mov	r0,#(_errors + 0x0002)
      00031C EE               [12] 1620 	mov	a,r6
      00031D F2               [24] 1621 	movx	@r0,a
      00031E 08               [12] 1622 	inc	r0
      00031F EF               [12] 1623 	mov	a,r7
      000320 F2               [24] 1624 	movx	@r0,a
      000321                       1625 00124$:
                                   1626 ;	radio/radio.c:416: return false;
      000321 C3               [12] 1627 	clr	c
      000322 22               [24] 1628 	ret
      000323                       1629 00126$:
                                   1630 ;	radio/radio.c:421: return true;
      000323 D3               [12] 1631 	setb	c
      000324 22               [24] 1632 	ret
      000325                       1633 00132$:
                                   1634 ;	radio/radio.c:435: if (errors.tx_errors != 0xFFFF) {
      000325 78r02            [12] 1635 	mov	r0,#(_errors + 0x0002)
      000327 E2               [24] 1636 	movx	a,@r0
      000328 FE               [12] 1637 	mov	r6,a
      000329 08               [12] 1638 	inc	r0
      00032A E2               [24] 1639 	movx	a,@r0
      00032B FF               [12] 1640 	mov	r7,a
      00032C BE FF 05         [24] 1641 	cjne	r6,#0xFF,00219$
      00032F BF FF 02         [24] 1642 	cjne	r7,#0xFF,00219$
      000332 80 0C            [24] 1643 	sjmp	00134$
      000334                       1644 00219$:
                                   1645 ;	radio/radio.c:436: errors.tx_errors++;
      000334 0E               [12] 1646 	inc	r6
      000335 BE 00 01         [24] 1647 	cjne	r6,#0x00,00220$
      000338 0F               [12] 1648 	inc	r7
      000339                       1649 00220$:
      000339 78r02            [12] 1650 	mov	r0,#(_errors + 0x0002)
      00033B EE               [12] 1651 	mov	a,r6
      00033C F2               [24] 1652 	movx	@r0,a
      00033D 08               [12] 1653 	inc	r0
      00033E EF               [12] 1654 	mov	a,r7
      00033F F2               [24] 1655 	movx	@r0,a
      000340                       1656 00134$:
                                   1657 ;	radio/radio.c:439: return false;
      000340 C3               [12] 1658 	clr	c
      000341 22               [24] 1659 	ret
                                   1660 ;------------------------------------------------------------
                                   1661 ;Allocation info for local variables in function 'radio_transmit'
                                   1662 ;------------------------------------------------------------
                                   1663 ;length                    Allocated with name '_radio_transmit_length_1_184'
                                   1664 ;------------------------------------------------------------
                                   1665 ;	radio/radio.c:503: radio_transmit(uint8_t length, __xdata uint8_t * __pdata buf, __pdata uint16_t timeout_ticks)
                                   1666 ;	-----------------------------------------
                                   1667 ;	 function radio_transmit
                                   1668 ;	-----------------------------------------
      000342                       1669 _radio_transmit:
      000342 E5 82            [12] 1670 	mov	a,dpl
      000344 90r00rFF         [24] 1671 	mov	dptr,#_radio_transmit_length_1_184
      000347 F0               [24] 1672 	movx	@dptr,a
                                   1673 ;	radio/radio.c:507: EX0_SAVE_DISABLE;
      000348 A2 A8            [12] 1674 	mov	c,_EX0
      00034A 92*05            [24] 1675 	mov	_radio_transmit_EX0_saved_1_185,c
      00034C C2 A8            [12] 1676 	clr	_EX0
                                   1677 ;	radio/radio.c:520: ret = radio_transmit_simple(length, buf, timeout_ticks);
      00034E 90r00rFF         [24] 1678 	mov	dptr,#_radio_transmit_length_1_184
      000351 E0               [24] 1679 	movx	a,@dptr
      000352 FF               [12] 1680 	mov	r7,a
      000353 78r19            [12] 1681 	mov	r0,#_radio_transmit_PARM_2
      000355 79r15            [12] 1682 	mov	r1,#_radio_transmit_simple_PARM_2
      000357 E2               [24] 1683 	movx	a,@r0
      000358 F3               [24] 1684 	movx	@r1,a
      000359 08               [12] 1685 	inc	r0
      00035A E2               [24] 1686 	movx	a,@r0
      00035B 09               [12] 1687 	inc	r1
      00035C F3               [24] 1688 	movx	@r1,a
      00035D 78r1B            [12] 1689 	mov	r0,#_radio_transmit_PARM_3
      00035F 79r17            [12] 1690 	mov	r1,#_radio_transmit_simple_PARM_3
      000361 E2               [24] 1691 	movx	a,@r0
      000362 F3               [24] 1692 	movx	@r1,a
      000363 08               [12] 1693 	inc	r0
      000364 E2               [24] 1694 	movx	a,@r0
      000365 09               [12] 1695 	inc	r1
      000366 F3               [24] 1696 	movx	@r1,a
      000367 8F 82            [24] 1697 	mov	dpl,r7
      000369 12r01r59         [24] 1698 	lcall	_radio_transmit_simple
      00036C 92*04            [24] 1699 	mov	_radio_transmit_ret_1_185,c
                                   1700 ;	radio/radio.c:526: EX0_RESTORE;
      00036E A2*05            [12] 1701 	mov	c,_radio_transmit_EX0_saved_1_185
      000370 92 A8            [24] 1702 	mov	_EX0,c
                                   1703 ;	radio/radio.c:527: return ret;
      000372 A2*04            [12] 1704 	mov	c,_radio_transmit_ret_1_185
      000374 22               [24] 1705 	ret
                                   1706 ;------------------------------------------------------------
                                   1707 ;Allocation info for local variables in function 'radio_receiver_on'
                                   1708 ;------------------------------------------------------------
                                   1709 ;	radio/radio.c:534: radio_receiver_on(void)
                                   1710 ;	-----------------------------------------
                                   1711 ;	 function radio_receiver_on
                                   1712 ;	-----------------------------------------
      000375                       1713 _radio_receiver_on:
                                   1714 ;	radio/radio.c:536: EX0 = 0;
      000375 C2 A8            [12] 1715 	clr	_EX0
                                   1716 ;	radio/radio.c:538: packet_received = 0;
      000377 C2*00            [12] 1717 	clr	_packet_received
                                   1718 ;	radio/radio.c:539: receive_packet_length = 0;
      000379 78r00            [12] 1719 	mov	r0,#_receive_packet_length
      00037B E4               [12] 1720 	clr	a
      00037C F2               [24] 1721 	movx	@r0,a
                                   1722 ;	radio/radio.c:540: preamble_detected = 0;
      00037D C2*01            [12] 1723 	clr	_preamble_detected
                                   1724 ;	radio/radio.c:541: partial_packet_length = 0;
      00037F 78r01            [12] 1725 	mov	r0,#_partial_packet_length
      000381 E4               [12] 1726 	clr	a
      000382 F2               [24] 1727 	movx	@r0,a
                                   1728 ;	radio/radio.c:544: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, RADIO_RX_INTERRUPTS);
      000383 74 13            [12] 1729 	mov	a,#0x13
      000385 C0 E0            [24] 1730 	push	acc
      000387 75 82 05         [24] 1731 	mov	dpl,#0x05
      00038A 12r08r14         [24] 1732 	lcall	_register_write
      00038D 15 81            [12] 1733 	dec	sp
                                   1734 ;	radio/radio.c:545: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, EZRADIOPRO_ENPREAVAL);
      00038F 74 40            [12] 1735 	mov	a,#0x40
      000391 C0 E0            [24] 1736 	push	acc
      000393 75 82 06         [24] 1737 	mov	dpl,#0x06
      000396 12r08r14         [24] 1738 	lcall	_register_write
      000399 15 81            [12] 1739 	dec	sp
                                   1740 ;	radio/radio.c:547: clear_status_registers();
      00039B 12r08rBE         [24] 1741 	lcall	_clear_status_registers
                                   1742 ;	radio/radio.c:548: radio_clear_transmit_fifo();
      00039E 12r01r09         [24] 1743 	lcall	_radio_clear_transmit_fifo
                                   1744 ;	radio/radio.c:549: radio_clear_receive_fifo();
      0003A1 12r01r31         [24] 1745 	lcall	_radio_clear_receive_fifo
                                   1746 ;	radio/radio.c:552: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, EZRADIOPRO_RXON | EZRADIOPRO_XTON);
      0003A4 74 05            [12] 1747 	mov	a,#0x05
      0003A6 C0 E0            [24] 1748 	push	acc
      0003A8 75 82 07         [24] 1749 	mov	dpl,#0x07
      0003AB 12r08r14         [24] 1750 	lcall	_register_write
      0003AE 15 81            [12] 1751 	dec	sp
                                   1752 ;	radio/radio.c:555: EX0 = 1;
      0003B0 D2 A8            [12] 1753 	setb	_EX0
                                   1754 ;	radio/radio.c:557: return true;
      0003B2 D3               [12] 1755 	setb	c
      0003B3 22               [24] 1756 	ret
                                   1757 ;------------------------------------------------------------
                                   1758 ;Allocation info for local variables in function 'radio_initialise'
                                   1759 ;------------------------------------------------------------
                                   1760 ;status                    Allocated with name '_radio_initialise_status_1_189'
                                   1761 ;------------------------------------------------------------
                                   1762 ;	radio/radio.c:564: radio_initialise(void)
                                   1763 ;	-----------------------------------------
                                   1764 ;	 function radio_initialise
                                   1765 ;	-----------------------------------------
      0003B4                       1766 _radio_initialise:
                                   1767 ;	radio/radio.c:568: delay_msec(50);
      0003B4 90 00 32         [24] 1768 	mov	dptr,#0x0032
      0003B7 12r00r00         [24] 1769 	lcall	_delay_msec
                                   1770 ;	radio/radio.c:571: status = register_read(EZRADIOPRO_DEVICE_VERSION);
      0003BA 75 82 01         [24] 1771 	mov	dpl,#0x01
      0003BD 12r08r4A         [24] 1772 	lcall	_register_read
      0003C0 AF 82            [24] 1773 	mov	r7,dpl
                                   1774 ;	radio/radio.c:572: if (status == 0xFF || status < 5) {
      0003C2 BF FF 02         [24] 1775 	cjne	r7,#0xFF,00119$
      0003C5 80 05            [24] 1776 	sjmp	00101$
      0003C7                       1777 00119$:
      0003C7 BF 05 00         [24] 1778 	cjne	r7,#0x05,00120$
      0003CA                       1779 00120$:
      0003CA 50 02            [24] 1780 	jnc	00102$
      0003CC                       1781 00101$:
                                   1782 ;	radio/radio.c:574: return false;
      0003CC C3               [12] 1783 	clr	c
      0003CD 22               [24] 1784 	ret
      0003CE                       1785 00102$:
                                   1786 ;	radio/radio.c:578: software_reset();
      0003CE 12r09r1E         [24] 1787 	lcall	_software_reset
                                   1788 ;	radio/radio.c:580: status = register_read(EZRADIOPRO_DEVICE_VERSION);
      0003D1 75 82 01         [24] 1789 	mov	dpl,#0x01
      0003D4 12r08r4A         [24] 1790 	lcall	_register_read
                                   1791 ;	radio/radio.c:582: if ((status & EZRADIOPRO_IPOR) == 0) {
      0003D7 E5 82            [12] 1792 	mov	a,dpl
      0003D9 FF               [12] 1793 	mov	r7,a
      0003DA 20 E0 06         [24] 1794 	jb	acc.0,00105$
                                   1795 ;	radio/radio.c:584: return software_reset();
      0003DD 12r09r1E         [24] 1796 	lcall	_software_reset
      0003E0 92*06            [24] 1797 	mov  _radio_initialise_sloc0_1_0,c
      0003E2 22               [24] 1798 	ret
      0003E3                       1799 00105$:
                                   1800 ;	radio/radio.c:587: if (status & EZRADIOPRO_ICHIPRDY) {
      0003E3 EF               [12] 1801 	mov	a,r7
      0003E4 30 E1 02         [24] 1802 	jnb	acc.1,00107$
                                   1803 ;	radio/radio.c:589: return true;
      0003E7 D3               [12] 1804 	setb	c
      0003E8 22               [24] 1805 	ret
      0003E9                       1806 00107$:
                                   1807 ;	radio/radio.c:592: return false;
      0003E9 C3               [12] 1808 	clr	c
      0003EA 22               [24] 1809 	ret
                                   1810 ;------------------------------------------------------------
                                   1811 ;Allocation info for local variables in function 'radio_set_frequency'
                                   1812 ;------------------------------------------------------------
                                   1813 ;	radio/radio.c:599: radio_set_frequency(__pdata uint32_t value)
                                   1814 ;	-----------------------------------------
                                   1815 ;	 function radio_set_frequency
                                   1816 ;	-----------------------------------------
      0003EB                       1817 _radio_set_frequency:
      0003EB AC 82            [24] 1818 	mov	r4,dpl
      0003ED AD 83            [24] 1819 	mov	r5,dph
      0003EF AE F0            [24] 1820 	mov	r6,b
      0003F1 FF               [12] 1821 	mov	r7,a
                                   1822 ;	radio/radio.c:601: if (value < 240000000UL || value > 935000000UL) {
      0003F2 C3               [12] 1823 	clr	c
      0003F3 ED               [12] 1824 	mov	a,r5
      0003F4 94 1C            [12] 1825 	subb	a,#0x1C
      0003F6 EE               [12] 1826 	mov	a,r6
      0003F7 94 4E            [12] 1827 	subb	a,#0x4E
      0003F9 EF               [12] 1828 	mov	a,r7
      0003FA 94 0E            [12] 1829 	subb	a,#0x0E
      0003FC 40 0E            [24] 1830 	jc	00101$
      0003FE 74 C0            [12] 1831 	mov	a,#0xC0
      000400 9C               [12] 1832 	subb	a,r4
      000401 74 F7            [12] 1833 	mov	a,#0xF7
      000403 9D               [12] 1834 	subb	a,r5
      000404 74 BA            [12] 1835 	mov	a,#0xBA
      000406 9E               [12] 1836 	subb	a,r6
      000407 74 37            [12] 1837 	mov	a,#0x37
      000409 9F               [12] 1838 	subb	a,r7
      00040A 50 02            [24] 1839 	jnc	00102$
      00040C                       1840 00101$:
                                   1841 ;	radio/radio.c:602: return false;
      00040C C3               [12] 1842 	clr	c
      00040D 22               [24] 1843 	ret
      00040E                       1844 00102$:
                                   1845 ;	radio/radio.c:604: settings.frequency = value;
      00040E 78r05            [12] 1846 	mov	r0,#_settings
      000410 EC               [12] 1847 	mov	a,r4
      000411 F2               [24] 1848 	movx	@r0,a
      000412 08               [12] 1849 	inc	r0
      000413 ED               [12] 1850 	mov	a,r5
      000414 F2               [24] 1851 	movx	@r0,a
      000415 08               [12] 1852 	inc	r0
      000416 EE               [12] 1853 	mov	a,r6
      000417 F2               [24] 1854 	movx	@r0,a
      000418 08               [12] 1855 	inc	r0
      000419 EF               [12] 1856 	mov	a,r7
      00041A F2               [24] 1857 	movx	@r0,a
                                   1858 ;	radio/radio.c:605: set_frequency_registers(value);
      00041B 8C 82            [24] 1859 	mov	dpl,r4
      00041D 8D 83            [24] 1860 	mov	dph,r5
      00041F 8E F0            [24] 1861 	mov	b,r6
      000421 EF               [12] 1862 	mov	a,r7
      000422 12r09r8A         [24] 1863 	lcall	_set_frequency_registers
                                   1864 ;	radio/radio.c:606: return true;
      000425 D3               [12] 1865 	setb	c
      000426 22               [24] 1866 	ret
                                   1867 ;------------------------------------------------------------
                                   1868 ;Allocation info for local variables in function 'radio_set_channel_spacing'
                                   1869 ;------------------------------------------------------------
                                   1870 ;	radio/radio.c:613: radio_set_channel_spacing(__pdata uint32_t value)
                                   1871 ;	-----------------------------------------
                                   1872 ;	 function radio_set_channel_spacing
                                   1873 ;	-----------------------------------------
      000427                       1874 _radio_set_channel_spacing:
      000427 AC 82            [24] 1875 	mov	r4,dpl
      000429 AD 83            [24] 1876 	mov	r5,dph
      00042B AE F0            [24] 1877 	mov	r6,b
      00042D FF               [12] 1878 	mov	r7,a
                                   1879 ;	radio/radio.c:615: if (value > 2550000L)
      00042E C3               [12] 1880 	clr	c
      00042F 74 F0            [12] 1881 	mov	a,#0xF0
      000431 9C               [12] 1882 	subb	a,r4
      000432 74 E8            [12] 1883 	mov	a,#0xE8
      000434 9D               [12] 1884 	subb	a,r5
      000435 74 26            [12] 1885 	mov	a,#0x26
      000437 9E               [12] 1886 	subb	a,r6
      000438 E4               [12] 1887 	clr	a
      000439 9F               [12] 1888 	subb	a,r7
      00043A 50 02            [24] 1889 	jnc	00102$
                                   1890 ;	radio/radio.c:616: return false;
      00043C C3               [12] 1891 	clr	c
      00043D 22               [24] 1892 	ret
      00043E                       1893 00102$:
                                   1894 ;	radio/radio.c:617: value = scale_uint32(value, 10000);
      00043E 78r1D            [12] 1895 	mov	r0,#_scale_uint32_PARM_2
      000440 74 10            [12] 1896 	mov	a,#0x10
      000442 F2               [24] 1897 	movx	@r0,a
      000443 08               [12] 1898 	inc	r0
      000444 74 27            [12] 1899 	mov	a,#0x27
      000446 F2               [24] 1900 	movx	@r0,a
      000447 08               [12] 1901 	inc	r0
      000448 E4               [12] 1902 	clr	a
      000449 F2               [24] 1903 	movx	@r0,a
      00044A 08               [12] 1904 	inc	r0
      00044B F2               [24] 1905 	movx	@r0,a
      00044C 8C 82            [24] 1906 	mov	dpl,r4
      00044E 8D 83            [24] 1907 	mov	dph,r5
      000450 8E F0            [24] 1908 	mov	b,r6
      000452 EF               [12] 1909 	mov	a,r7
      000453 12r08rCA         [24] 1910 	lcall	_scale_uint32
      000456 AC 82            [24] 1911 	mov	r4,dpl
      000458 AD 83            [24] 1912 	mov	r5,dph
      00045A AE F0            [24] 1913 	mov	r6,b
      00045C FF               [12] 1914 	mov	r7,a
                                   1915 ;	radio/radio.c:618: settings.channel_spacing = value;
      00045D 78r09            [12] 1916 	mov	r0,#(_settings + 0x0004)
      00045F EC               [12] 1917 	mov	a,r4
      000460 F2               [24] 1918 	movx	@r0,a
      000461 08               [12] 1919 	inc	r0
      000462 ED               [12] 1920 	mov	a,r5
      000463 F2               [24] 1921 	movx	@r0,a
      000464 08               [12] 1922 	inc	r0
      000465 EE               [12] 1923 	mov	a,r6
      000466 F2               [24] 1924 	movx	@r0,a
      000467 08               [12] 1925 	inc	r0
      000468 EF               [12] 1926 	mov	a,r7
      000469 F2               [24] 1927 	movx	@r0,a
                                   1928 ;	radio/radio.c:619: register_write(EZRADIOPRO_FREQUENCY_HOPPING_STEP_SIZE, value);
      00046A C0 04            [24] 1929 	push	ar4
      00046C 75 82 7A         [24] 1930 	mov	dpl,#0x7A
      00046F 12r08r14         [24] 1931 	lcall	_register_write
      000472 15 81            [12] 1932 	dec	sp
                                   1933 ;	radio/radio.c:620: return true;
      000474 D3               [12] 1934 	setb	c
      000475 22               [24] 1935 	ret
                                   1936 ;------------------------------------------------------------
                                   1937 ;Allocation info for local variables in function 'radio_set_channel'
                                   1938 ;------------------------------------------------------------
                                   1939 ;channel                   Allocated with name '_radio_set_channel_channel_1_198'
                                   1940 ;------------------------------------------------------------
                                   1941 ;	radio/radio.c:626: radio_set_channel(uint8_t channel)
                                   1942 ;	-----------------------------------------
                                   1943 ;	 function radio_set_channel
                                   1944 ;	-----------------------------------------
      000476                       1945 _radio_set_channel:
      000476 E5 82            [12] 1946 	mov	a,dpl
      000478 90r01r00         [24] 1947 	mov	dptr,#_radio_set_channel_channel_1_198
      00047B F0               [24] 1948 	movx	@dptr,a
                                   1949 ;	radio/radio.c:628: if (channel != settings.current_channel) {
      00047C 78r0E            [12] 1950 	mov	r0,#(_settings + 0x0009)
      00047E E2               [24] 1951 	movx	a,@r0
      00047F FF               [12] 1952 	mov	r7,a
      000480 E0               [24] 1953 	movx	a,@dptr
      000481 FE               [12] 1954 	mov	r6,a
      000482 B5 07 01         [24] 1955 	cjne	a,ar7,00108$
      000485 22               [24] 1956 	ret
      000486                       1957 00108$:
                                   1958 ;	radio/radio.c:629: settings.current_channel = channel;
      000486 78r0E            [12] 1959 	mov	r0,#(_settings + 0x0009)
      000488 EE               [12] 1960 	mov	a,r6
      000489 F2               [24] 1961 	movx	@r0,a
                                   1962 ;	radio/radio.c:630: register_write(EZRADIOPRO_FREQUENCY_HOPPING_CHANNEL_SELECT, channel);
      00048A C0 06            [24] 1963 	push	ar6
      00048C 75 82 79         [24] 1964 	mov	dpl,#0x79
      00048F 12r08r14         [24] 1965 	lcall	_register_write
      000492 15 81            [12] 1966 	dec	sp
                                   1967 ;	radio/radio.c:631: preamble_detected = 0;
      000494 C2*01            [12] 1968 	clr	_preamble_detected
      000496 22               [24] 1969 	ret
                                   1970 ;------------------------------------------------------------
                                   1971 ;Allocation info for local variables in function 'radio_get_channel'
                                   1972 ;------------------------------------------------------------
                                   1973 ;	radio/radio.c:638: radio_get_channel(void)
                                   1974 ;	-----------------------------------------
                                   1975 ;	 function radio_get_channel
                                   1976 ;	-----------------------------------------
      000497                       1977 _radio_get_channel:
                                   1978 ;	radio/radio.c:640: return settings.current_channel;
      000497 78r0E            [12] 1979 	mov	r0,#(_settings + 0x0009)
      000499 E2               [24] 1980 	movx	a,@r0
      00049A F5 82            [12] 1981 	mov	dpl,a
      00049C 22               [24] 1982 	ret
                                   1983 ;------------------------------------------------------------
                                   1984 ;Allocation info for local variables in function 'radio_configure'
                                   1985 ;------------------------------------------------------------
                                   1986 ;	radio/radio.c:737: radio_configure(__pdata uint8_t air_rate)
                                   1987 ;	-----------------------------------------
                                   1988 ;	 function radio_configure
                                   1989 ;	-----------------------------------------
      00049D                       1990 _radio_configure:
      00049D AF 82            [24] 1991 	mov	r7,dpl
                                   1992 ;	radio/radio.c:742: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0x00);
      00049F C0 07            [24] 1993 	push	ar7
      0004A1 E4               [12] 1994 	clr	a
      0004A2 C0 E0            [24] 1995 	push	acc
      0004A4 75 82 05         [24] 1996 	mov	dpl,#0x05
      0004A7 12r08r14         [24] 1997 	lcall	_register_write
      0004AA 15 81            [12] 1998 	dec	sp
                                   1999 ;	radio/radio.c:743: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0x00);
      0004AC E4               [12] 2000 	clr	a
      0004AD C0 E0            [24] 2001 	push	acc
      0004AF 75 82 06         [24] 2002 	mov	dpl,#0x06
      0004B2 12r08r14         [24] 2003 	lcall	_register_write
      0004B5 15 81            [12] 2004 	dec	sp
                                   2005 ;	radio/radio.c:745: clear_status_registers();
      0004B7 12r08rBE         [24] 2006 	lcall	_clear_status_registers
                                   2007 ;	radio/radio.c:759: register_write(EZRADIOPRO_GPIO0_CONFIGURATION, 0x15);	// RX data (output)
      0004BA 74 15            [12] 2008 	mov	a,#0x15
      0004BC C0 E0            [24] 2009 	push	acc
      0004BE 75 82 0B         [24] 2010 	mov	dpl,#0x0B
      0004C1 12r08r14         [24] 2011 	lcall	_register_write
      0004C4 15 81            [12] 2012 	dec	sp
                                   2013 ;	radio/radio.c:760: register_write(EZRADIOPRO_GPIO1_CONFIGURATION, 0x12);	// RX data (output)
      0004C6 74 12            [12] 2014 	mov	a,#0x12
      0004C8 C0 E0            [24] 2015 	push	acc
      0004CA 75 82 0C         [24] 2016 	mov	dpl,#0x0C
      0004CD 12r08r14         [24] 2017 	lcall	_register_write
      0004D0 15 81            [12] 2018 	dec	sp
                                   2019 ;	radio/radio.c:762: radio_set_diversity(DIVERSITY_ENABLED);
      0004D2 75 82 00         [24] 2020 	mov	dpl,#0x00
      0004D5 12r0BrDE         [24] 2021 	lcall	_radio_set_diversity
                                   2022 ;	radio/radio.c:774: register_write(EZRADIOPRO_CRYSTAL_OSCILLATOR_LOAD_CAPACITANCE, EZRADIOPRO_OSC_CAP_VALUE);
      0004D8 74 B6            [12] 2023 	mov	a,#0xB6
      0004DA C0 E0            [24] 2024 	push	acc
      0004DC 75 82 09         [24] 2025 	mov	dpl,#0x09
      0004DF 12r08r14         [24] 2026 	lcall	_register_write
      0004E2 15 81            [12] 2027 	dec	sp
      0004E4 D0 07            [24] 2028 	pop	ar7
                                   2029 ;	radio/radio.c:777: if (air_rate > 100) {
      0004E6 EF               [12] 2030 	mov	a,r7
      0004E7 24 9B            [12] 2031 	add	a,#0xff - 0x64
      0004E9 50 10            [24] 2032 	jnc	00102$
                                   2033 ;	radio/radio.c:778: register_write(EZRADIOPRO_CHARGEPUMP_CURRENT_TRIMMING_OVERRIDE, 0xC0);
      0004EB C0 07            [24] 2034 	push	ar7
      0004ED 74 C0            [12] 2035 	mov	a,#0xC0
      0004EF C0 E0            [24] 2036 	push	acc
      0004F1 75 82 58         [24] 2037 	mov	dpl,#0x58
      0004F4 12r08r14         [24] 2038 	lcall	_register_write
      0004F7 15 81            [12] 2039 	dec	sp
      0004F9 D0 07            [24] 2040 	pop	ar7
      0004FB                       2041 00102$:
                                   2042 ;	radio/radio.c:782: set_frequency_registers(settings.frequency);
      0004FB 78r05            [12] 2043 	mov	r0,#_settings
      0004FD E2               [24] 2044 	movx	a,@r0
      0004FE FB               [12] 2045 	mov	r3,a
      0004FF 08               [12] 2046 	inc	r0
      000500 E2               [24] 2047 	movx	a,@r0
      000501 FC               [12] 2048 	mov	r4,a
      000502 08               [12] 2049 	inc	r0
      000503 E2               [24] 2050 	movx	a,@r0
      000504 FD               [12] 2051 	mov	r5,a
      000505 08               [12] 2052 	inc	r0
      000506 E2               [24] 2053 	movx	a,@r0
      000507 8B 82            [24] 2054 	mov	dpl,r3
      000509 8C 83            [24] 2055 	mov	dph,r4
      00050B 8D F0            [24] 2056 	mov	b,r5
      00050D C0 07            [24] 2057 	push	ar7
      00050F 12r09r8A         [24] 2058 	lcall	_set_frequency_registers
                                   2059 ;	radio/radio.c:783: register_write(EZRADIOPRO_FREQUENCY_HOPPING_STEP_SIZE, settings.channel_spacing);
      000512 78r09            [12] 2060 	mov	r0,#(_settings + 0x0004)
      000514 E2               [24] 2061 	movx	a,@r0
      000515 FB               [12] 2062 	mov	r3,a
      000516 08               [12] 2063 	inc	r0
      000517 E2               [24] 2064 	movx	a,@r0
      000518 08               [12] 2065 	inc	r0
      000519 E2               [24] 2066 	movx	a,@r0
      00051A 08               [12] 2067 	inc	r0
      00051B E2               [24] 2068 	movx	a,@r0
      00051C C0 03            [24] 2069 	push	ar3
      00051E 75 82 7A         [24] 2070 	mov	dpl,#0x7A
      000521 12r08r14         [24] 2071 	lcall	_register_write
      000524 15 81            [12] 2072 	dec	sp
      000526 D0 07            [24] 2073 	pop	ar7
                                   2074 ;	radio/radio.c:785: if (feature_golay) {
      000528 30*00 29         [24] 2075 	jnb	_feature_golay,00104$
                                   2076 ;	radio/radio.c:789: register_write(EZRADIOPRO_DATA_ACCESS_CONTROL,
      00052B C0 07            [24] 2077 	push	ar7
      00052D 74 88            [12] 2078 	mov	a,#0x88
      00052F C0 E0            [24] 2079 	push	acc
      000531 75 82 30         [24] 2080 	mov	dpl,#0x30
      000534 12r08r14         [24] 2081 	lcall	_register_write
      000537 15 81            [12] 2082 	dec	sp
                                   2083 ;	radio/radio.c:793: register_write(EZRADIOPRO_HEADER_CONTROL_2, EZRADIOPRO_HDLEN_0BYTE | EZRADIOPRO_SYNCLEN_2BYTE);
      000539 74 02            [12] 2084 	mov	a,#0x02
      00053B C0 E0            [24] 2085 	push	acc
      00053D 75 82 33         [24] 2086 	mov	dpl,#0x33
      000540 12r08r14         [24] 2087 	lcall	_register_write
      000543 15 81            [12] 2088 	dec	sp
                                   2089 ;	radio/radio.c:796: register_write(EZRADIOPRO_HEADER_CONTROL_1, 0x00);
      000545 E4               [12] 2090 	clr	a
      000546 C0 E0            [24] 2091 	push	acc
      000548 75 82 32         [24] 2092 	mov	dpl,#0x32
      00054B 12r08r14         [24] 2093 	lcall	_register_write
      00054E 15 81            [12] 2094 	dec	sp
      000550 D0 07            [24] 2095 	pop	ar7
      000552 80 40            [24] 2096 	sjmp	00105$
      000554                       2097 00104$:
                                   2098 ;	radio/radio.c:798: register_write(EZRADIOPRO_DATA_ACCESS_CONTROL,
      000554 C0 07            [24] 2099 	push	ar7
      000556 74 8D            [12] 2100 	mov	a,#0x8D
      000558 C0 E0            [24] 2101 	push	acc
      00055A 75 82 30         [24] 2102 	mov	dpl,#0x30
      00055D 12r08r14         [24] 2103 	lcall	_register_write
      000560 15 81            [12] 2104 	dec	sp
                                   2105 ;	radio/radio.c:804: register_write(EZRADIOPRO_HEADER_CONTROL_2, EZRADIOPRO_HDLEN_2BYTE | EZRADIOPRO_SYNCLEN_2BYTE);
      000562 74 22            [12] 2106 	mov	a,#0x22
      000564 C0 E0            [24] 2107 	push	acc
      000566 75 82 33         [24] 2108 	mov	dpl,#0x33
      000569 12r08r14         [24] 2109 	lcall	_register_write
      00056C 15 81            [12] 2110 	dec	sp
                                   2111 ;	radio/radio.c:806: register_write(EZRADIOPRO_HEADER_CONTROL_1, 0x0C);
      00056E 74 0C            [12] 2112 	mov	a,#0x0C
      000570 C0 E0            [24] 2113 	push	acc
      000572 75 82 32         [24] 2114 	mov	dpl,#0x32
      000575 12r08r14         [24] 2115 	lcall	_register_write
      000578 15 81            [12] 2116 	dec	sp
                                   2117 ;	radio/radio.c:807: register_write(EZRADIOPRO_HEADER_ENABLE_3, 0xFF);
      00057A 74 FF            [12] 2118 	mov	a,#0xFF
      00057C C0 E0            [24] 2119 	push	acc
      00057E 75 82 43         [24] 2120 	mov	dpl,#0x43
      000581 12r08r14         [24] 2121 	lcall	_register_write
      000584 15 81            [12] 2122 	dec	sp
                                   2123 ;	radio/radio.c:808: register_write(EZRADIOPRO_HEADER_ENABLE_2, 0xFF);
      000586 74 FF            [12] 2124 	mov	a,#0xFF
      000588 C0 E0            [24] 2125 	push	acc
      00058A 75 82 44         [24] 2126 	mov	dpl,#0x44
      00058D 12r08r14         [24] 2127 	lcall	_register_write
      000590 15 81            [12] 2128 	dec	sp
      000592 D0 07            [24] 2129 	pop	ar7
      000594                       2130 00105$:
                                   2131 ;	radio/radio.c:813: register_write(EZRADIOPRO_TX_FIFO_CONTROL_1, TX_FIFO_THRESHOLD_HIGH);
      000594 C0 07            [24] 2132 	push	ar7
      000596 74 3C            [12] 2133 	mov	a,#0x3C
      000598 C0 E0            [24] 2134 	push	acc
      00059A 75 82 7C         [24] 2135 	mov	dpl,#0x7C
      00059D 12r08r14         [24] 2136 	lcall	_register_write
      0005A0 15 81            [12] 2137 	dec	sp
                                   2138 ;	radio/radio.c:814: register_write(EZRADIOPRO_TX_FIFO_CONTROL_2, TX_FIFO_THRESHOLD_LOW);
      0005A2 74 20            [12] 2139 	mov	a,#0x20
      0005A4 C0 E0            [24] 2140 	push	acc
      0005A6 75 82 7D         [24] 2141 	mov	dpl,#0x7D
      0005A9 12r08r14         [24] 2142 	lcall	_register_write
      0005AC 15 81            [12] 2143 	dec	sp
                                   2144 ;	radio/radio.c:815: register_write(EZRADIOPRO_RX_FIFO_CONTROL, RX_FIFO_THRESHOLD_HIGH);
      0005AE 74 32            [12] 2145 	mov	a,#0x32
      0005B0 C0 E0            [24] 2146 	push	acc
      0005B2 75 82 7E         [24] 2147 	mov	dpl,#0x7E
      0005B5 12r08r14         [24] 2148 	lcall	_register_write
      0005B8 15 81            [12] 2149 	dec	sp
                                   2150 ;	radio/radio.c:817: settings.preamble_length = 16;
      0005BA 78r10            [12] 2151 	mov	r0,#(_settings + 0x000b)
      0005BC 74 10            [12] 2152 	mov	a,#0x10
      0005BE F2               [24] 2153 	movx	@r0,a
                                   2154 ;	radio/radio.c:819: register_write(EZRADIOPRO_PREAMBLE_LENGTH, settings.preamble_length); // nibbles 
      0005BF 78r10            [12] 2155 	mov	r0,#(_settings + 0x000b)
      0005C1 E2               [24] 2156 	movx	a,@r0
      0005C2 FE               [12] 2157 	mov	r6,a
      0005C3 C0 06            [24] 2158 	push	ar6
      0005C5 75 82 34         [24] 2159 	mov	dpl,#0x34
      0005C8 12r08r14         [24] 2160 	lcall	_register_write
      0005CB 15 81            [12] 2161 	dec	sp
                                   2162 ;	radio/radio.c:820: register_write(EZRADIOPRO_PREAMBLE_DETECTION_CONTROL, 5<<3); // 5 nibbles
      0005CD 74 28            [12] 2163 	mov	a,#0x28
      0005CF C0 E0            [24] 2164 	push	acc
      0005D1 75 82 35         [24] 2165 	mov	dpl,#0x35
      0005D4 12r08r14         [24] 2166 	lcall	_register_write
      0005D7 15 81            [12] 2167 	dec	sp
                                   2168 ;	radio/radio.c:823: radio_set_transmit_power(0);
      0005D9 75 82 00         [24] 2169 	mov	dpl,#0x00
      0005DC 12r07r76         [24] 2170 	lcall	_radio_set_transmit_power
      0005DF D0 07            [24] 2171 	pop	ar7
                                   2172 ;	radio/radio.c:826: for (i = 0; i < NUM_DATA_RATES - 1; i++) {
      0005E1 7E 00            [12] 2173 	mov	r6,#0x00
      0005E3                       2174 00131$:
                                   2175 ;	radio/radio.c:827: if (air_data_rates[i] >= air_rate) break;
      0005E3 EE               [12] 2176 	mov	a,r6
      0005E4 90r00r1D         [24] 2177 	mov	dptr,#_air_data_rates
      0005E7 93               [24] 2178 	movc	a,@a+dptr
      0005E8 FD               [12] 2179 	mov	r5,a
      0005E9 C3               [12] 2180 	clr	c
      0005EA 9F               [12] 2181 	subb	a,r7
      0005EB 50 06            [24] 2182 	jnc	00108$
                                   2183 ;	radio/radio.c:826: for (i = 0; i < NUM_DATA_RATES - 1; i++) {
      0005ED 0E               [12] 2184 	inc	r6
      0005EE BE 0C 00         [24] 2185 	cjne	r6,#0x0C,00205$
      0005F1                       2186 00205$:
      0005F1 40 F0            [24] 2187 	jc	00131$
      0005F3                       2188 00108$:
                                   2189 ;	radio/radio.c:829: rate_selection = i;
                                   2190 ;	radio/radio.c:831: settings.air_data_rate = air_data_rates[rate_selection];
      0005F3 EE               [12] 2191 	mov	a,r6
      0005F4 FF               [12] 2192 	mov	r7,a
      0005F5 90r00r1D         [24] 2193 	mov	dptr,#_air_data_rates
      0005F8 93               [24] 2194 	movc	a,@a+dptr
      0005F9 FE               [12] 2195 	mov	r6,a
      0005FA 78r0D            [12] 2196 	mov	r0,#(_settings + 0x0008)
      0005FC F2               [24] 2197 	movx	@r0,a
                                   2198 ;	radio/radio.c:833: if (settings.air_data_rate >= 32) {
      0005FD BE 20 00         [24] 2199 	cjne	r6,#0x20,00207$
      000600                       2200 00207$:
      000600 40 04            [24] 2201 	jc	00110$
                                   2202 ;	radio/radio.c:834: control = 0x0D;
      000602 7E 0D            [12] 2203 	mov	r6,#0x0D
      000604 80 02            [24] 2204 	sjmp	00111$
      000606                       2205 00110$:
                                   2206 ;	radio/radio.c:836: control = 0x2D;
      000606 7E 2D            [12] 2207 	mov	r6,#0x2D
      000608                       2208 00111$:
                                   2209 ;	radio/radio.c:838: if (param_get(PARAM_MANCHESTER) && settings.air_data_rate <= 128) {
      000608 75 82 0D         [24] 2210 	mov	dpl,#0x0D
      00060B C0 07            [24] 2211 	push	ar7
      00060D C0 06            [24] 2212 	push	ar6
      00060F 12r00r00         [24] 2213 	lcall	_param_get
      000612 AA 82            [24] 2214 	mov	r2,dpl
      000614 AB 83            [24] 2215 	mov	r3,dph
      000616 AC F0            [24] 2216 	mov	r4,b
      000618 FD               [12] 2217 	mov	r5,a
      000619 D0 06            [24] 2218 	pop	ar6
      00061B D0 07            [24] 2219 	pop	ar7
      00061D EA               [12] 2220 	mov	a,r2
      00061E 4B               [12] 2221 	orl	a,r3
      00061F 4C               [12] 2222 	orl	a,r4
      000620 4D               [12] 2223 	orl	a,r5
      000621 60 0B            [24] 2224 	jz	00113$
      000623 78r0D            [12] 2225 	mov	r0,#(_settings + 0x0008)
      000625 E2               [24] 2226 	movx	a,@r0
      000626 FD               [12] 2227 	mov  r5,a
      000627 24 7F            [12] 2228 	add	a,#0xff - 0x80
      000629 40 03            [24] 2229 	jc	00113$
                                   2230 ;	radio/radio.c:840: control |= EZRADIOPRO_ENMANCH;
      00062B 43 06 02         [24] 2231 	orl	ar6,#0x02
      00062E                       2232 00113$:
                                   2233 ;	radio/radio.c:842: register_write(EZRADIOPRO_MODULATION_MODE_CONTROL_1, control);
      00062E C0 07            [24] 2234 	push	ar7
      000630 C0 06            [24] 2235 	push	ar6
      000632 75 82 70         [24] 2236 	mov	dpl,#0x70
      000635 12r08r14         [24] 2237 	lcall	_register_write
      000638 15 81            [12] 2238 	dec	sp
                                   2239 ;	radio/radio.c:844: register_write(EZRADIOPRO_MODULATION_MODE_CONTROL_2, 0x23);
      00063A 74 23            [12] 2240 	mov	a,#0x23
      00063C C0 E0            [24] 2241 	push	acc
      00063E 75 82 71         [24] 2242 	mov	dpl,#0x71
      000641 12r08r14         [24] 2243 	lcall	_register_write
      000644 15 81            [12] 2244 	dec	sp
                                   2245 ;	radio/radio.c:848: register_write(EZRADIOPRO_AFC_LOOP_GEARSHIFT_OVERRIDE, 0x44);
      000646 74 44            [12] 2246 	mov	a,#0x44
      000648 C0 E0            [24] 2247 	push	acc
      00064A 75 82 1D         [24] 2248 	mov	dpl,#0x1D
      00064D 12r08r14         [24] 2249 	lcall	_register_write
      000650 15 81            [12] 2250 	dec	sp
      000652 D0 07            [24] 2251 	pop	ar7
                                   2252 ;	radio/radio.c:852: if (settings.air_data_rate < 200) {
      000654 78r0D            [12] 2253 	mov	r0,#(_settings + 0x0008)
      000656 E2               [24] 2254 	movx	a,@r0
      000657 FE               [12] 2255 	mov	r6,a
      000658 BE C8 00         [24] 2256 	cjne	r6,#0xC8,00211$
      00065B                       2257 00211$:
      00065B 50 12            [24] 2258 	jnc	00116$
                                   2259 ;	radio/radio.c:853: register_write(EZRADIOPRO_AFC_TIMING_CONTROL, 0x0A);
      00065D C0 07            [24] 2260 	push	ar7
      00065F 74 0A            [12] 2261 	mov	a,#0x0A
      000661 C0 E0            [24] 2262 	push	acc
      000663 75 82 1E         [24] 2263 	mov	dpl,#0x1E
      000666 12r08r14         [24] 2264 	lcall	_register_write
      000669 15 81            [12] 2265 	dec	sp
      00066B D0 07            [24] 2266 	pop	ar7
      00066D 80 10            [24] 2267 	sjmp	00117$
      00066F                       2268 00116$:
                                   2269 ;	radio/radio.c:855: register_write(EZRADIOPRO_AFC_TIMING_CONTROL, 0x02);
      00066F C0 07            [24] 2270 	push	ar7
      000671 74 02            [12] 2271 	mov	a,#0x02
      000673 C0 E0            [24] 2272 	push	acc
      000675 75 82 1E         [24] 2273 	mov	dpl,#0x1E
      000678 12r08r14         [24] 2274 	lcall	_register_write
      00067B 15 81            [12] 2275 	dec	sp
      00067D D0 07            [24] 2276 	pop	ar7
      00067F                       2277 00117$:
                                   2278 ;	radio/radio.c:859: if (g_board_frequency == FREQ_433) {
      00067F 78r00            [12] 2279 	mov	r0,#_g_board_frequency
      000681 E2               [24] 2280 	movx	a,@r0
      000682 B4 43 3A         [24] 2281 	cjne	a,#0x43,00129$
                                   2282 ;	radio/radio.c:860: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      000685 7E 00            [12] 2283 	mov	r6,#0x00
      000687                       2284 00133$:
                                   2285 ;	radio/radio.c:862: reg_table_433[i][rate_selection]);
      000687 EE               [12] 2286 	mov	a,r6
      000688 75 F0 0D         [24] 2287 	mov	b,#0x0D
      00068B A4               [48] 2288 	mul	ab
      00068C 24r2A            [12] 2289 	add	a,#_reg_table_433
      00068E FC               [12] 2290 	mov	r4,a
      00068F 74s00            [12] 2291 	mov	a,#(_reg_table_433 >> 8)
      000691 35 F0            [12] 2292 	addc	a,b
      000693 FD               [12] 2293 	mov	r5,a
      000694 EF               [12] 2294 	mov	a,r7
      000695 2C               [12] 2295 	add	a,r4
      000696 F5 82            [12] 2296 	mov	dpl,a
      000698 E4               [12] 2297 	clr	a
      000699 3D               [12] 2298 	addc	a,r5
      00069A F5 83            [12] 2299 	mov	dph,a
      00069C E4               [12] 2300 	clr	a
      00069D 93               [24] 2301 	movc	a,@a+dptr
      00069E FD               [12] 2302 	mov	r5,a
                                   2303 ;	radio/radio.c:861: register_write(reg_index[i],
      00069F EE               [12] 2304 	mov	a,r6
      0006A0 90r00r11         [24] 2305 	mov	dptr,#_reg_index
      0006A3 93               [24] 2306 	movc	a,@a+dptr
      0006A4 FC               [12] 2307 	mov	r4,a
      0006A5 C0 07            [24] 2308 	push	ar7
      0006A7 C0 06            [24] 2309 	push	ar6
      0006A9 C0 05            [24] 2310 	push	ar5
      0006AB 8C 82            [24] 2311 	mov	dpl,r4
      0006AD 12r08r14         [24] 2312 	lcall	_register_write
      0006B0 15 81            [12] 2313 	dec	sp
      0006B2 D0 06            [24] 2314 	pop	ar6
      0006B4 D0 07            [24] 2315 	pop	ar7
                                   2316 ;	radio/radio.c:860: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      0006B6 0E               [12] 2317 	inc	r6
      0006B7 BE 0C 00         [24] 2318 	cjne	r6,#0x0C,00215$
      0006BA                       2319 00215$:
      0006BA 40 CB            [24] 2320 	jc	00133$
      0006BC 02r07r74         [24] 2321 	ljmp	00130$
      0006BF                       2322 00129$:
                                   2323 ;	radio/radio.c:864: } else if (g_board_frequency == FREQ_470) {
      0006BF 78r00            [12] 2324 	mov	r0,#_g_board_frequency
      0006C1 E2               [24] 2325 	movx	a,@r0
      0006C2 B4 47 39         [24] 2326 	cjne	a,#0x47,00126$
                                   2327 ;	radio/radio.c:865: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      0006C5 7E 00            [12] 2328 	mov	r6,#0x00
      0006C7                       2329 00135$:
                                   2330 ;	radio/radio.c:867: reg_table_470[i][rate_selection]);
      0006C7 EE               [12] 2331 	mov	a,r6
      0006C8 75 F0 0D         [24] 2332 	mov	b,#0x0D
      0006CB A4               [48] 2333 	mul	ab
      0006CC 24rC6            [12] 2334 	add	a,#_reg_table_470
      0006CE FC               [12] 2335 	mov	r4,a
      0006CF 74s00            [12] 2336 	mov	a,#(_reg_table_470 >> 8)
      0006D1 35 F0            [12] 2337 	addc	a,b
      0006D3 FD               [12] 2338 	mov	r5,a
      0006D4 EF               [12] 2339 	mov	a,r7
      0006D5 2C               [12] 2340 	add	a,r4
      0006D6 F5 82            [12] 2341 	mov	dpl,a
      0006D8 E4               [12] 2342 	clr	a
      0006D9 3D               [12] 2343 	addc	a,r5
      0006DA F5 83            [12] 2344 	mov	dph,a
      0006DC E4               [12] 2345 	clr	a
      0006DD 93               [24] 2346 	movc	a,@a+dptr
      0006DE FD               [12] 2347 	mov	r5,a
                                   2348 ;	radio/radio.c:866: register_write(reg_index[i],
      0006DF EE               [12] 2349 	mov	a,r6
      0006E0 90r00r11         [24] 2350 	mov	dptr,#_reg_index
      0006E3 93               [24] 2351 	movc	a,@a+dptr
      0006E4 FC               [12] 2352 	mov	r4,a
      0006E5 C0 07            [24] 2353 	push	ar7
      0006E7 C0 06            [24] 2354 	push	ar6
      0006E9 C0 05            [24] 2355 	push	ar5
      0006EB 8C 82            [24] 2356 	mov	dpl,r4
      0006ED 12r08r14         [24] 2357 	lcall	_register_write
      0006F0 15 81            [12] 2358 	dec	sp
      0006F2 D0 06            [24] 2359 	pop	ar6
      0006F4 D0 07            [24] 2360 	pop	ar7
                                   2361 ;	radio/radio.c:865: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      0006F6 0E               [12] 2362 	inc	r6
      0006F7 BE 0C 00         [24] 2363 	cjne	r6,#0x0C,00219$
      0006FA                       2364 00219$:
      0006FA 40 CB            [24] 2365 	jc	00135$
      0006FC 80 76            [24] 2366 	sjmp	00130$
      0006FE                       2367 00126$:
                                   2368 ;	radio/radio.c:869: } else if (g_board_frequency == FREQ_868) {
      0006FE 78r00            [12] 2369 	mov	r0,#_g_board_frequency
      000700 E2               [24] 2370 	movx	a,@r0
      000701 B4 86 39         [24] 2371 	cjne	a,#0x86,00160$
                                   2372 ;	radio/radio.c:870: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      000704 7E 00            [12] 2373 	mov	r6,#0x00
      000706                       2374 00137$:
                                   2375 ;	radio/radio.c:872: reg_table_868[i][rate_selection]);
      000706 EE               [12] 2376 	mov	a,r6
      000707 75 F0 0D         [24] 2377 	mov	b,#0x0D
      00070A A4               [48] 2378 	mul	ab
      00070B 24r62            [12] 2379 	add	a,#_reg_table_868
      00070D FC               [12] 2380 	mov	r4,a
      00070E 74s01            [12] 2381 	mov	a,#(_reg_table_868 >> 8)
      000710 35 F0            [12] 2382 	addc	a,b
      000712 FD               [12] 2383 	mov	r5,a
      000713 EF               [12] 2384 	mov	a,r7
      000714 2C               [12] 2385 	add	a,r4
      000715 F5 82            [12] 2386 	mov	dpl,a
      000717 E4               [12] 2387 	clr	a
      000718 3D               [12] 2388 	addc	a,r5
      000719 F5 83            [12] 2389 	mov	dph,a
      00071B E4               [12] 2390 	clr	a
      00071C 93               [24] 2391 	movc	a,@a+dptr
      00071D FD               [12] 2392 	mov	r5,a
                                   2393 ;	radio/radio.c:871: register_write(reg_index[i],
      00071E EE               [12] 2394 	mov	a,r6
      00071F 90r00r11         [24] 2395 	mov	dptr,#_reg_index
      000722 93               [24] 2396 	movc	a,@a+dptr
      000723 FC               [12] 2397 	mov	r4,a
      000724 C0 07            [24] 2398 	push	ar7
      000726 C0 06            [24] 2399 	push	ar6
      000728 C0 05            [24] 2400 	push	ar5
      00072A 8C 82            [24] 2401 	mov	dpl,r4
      00072C 12r08r14         [24] 2402 	lcall	_register_write
      00072F 15 81            [12] 2403 	dec	sp
      000731 D0 06            [24] 2404 	pop	ar6
      000733 D0 07            [24] 2405 	pop	ar7
                                   2406 ;	radio/radio.c:870: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      000735 0E               [12] 2407 	inc	r6
      000736 BE 0C 00         [24] 2408 	cjne	r6,#0x0C,00223$
      000739                       2409 00223$:
      000739 40 CB            [24] 2410 	jc	00137$
                                   2411 ;	radio/radio.c:875: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      00073B 80 37            [24] 2412 	sjmp	00130$
      00073D                       2413 00160$:
      00073D 7E 00            [12] 2414 	mov	r6,#0x00
      00073F                       2415 00139$:
                                   2416 ;	radio/radio.c:877: reg_table_915[i][rate_selection]);
      00073F EE               [12] 2417 	mov	a,r6
      000740 75 F0 0D         [24] 2418 	mov	b,#0x0D
      000743 A4               [48] 2419 	mul	ab
      000744 24rFE            [12] 2420 	add	a,#_reg_table_915
      000746 FC               [12] 2421 	mov	r4,a
      000747 74s01            [12] 2422 	mov	a,#(_reg_table_915 >> 8)
      000749 35 F0            [12] 2423 	addc	a,b
      00074B FD               [12] 2424 	mov	r5,a
      00074C EF               [12] 2425 	mov	a,r7
      00074D 2C               [12] 2426 	add	a,r4
      00074E F5 82            [12] 2427 	mov	dpl,a
      000750 E4               [12] 2428 	clr	a
      000751 3D               [12] 2429 	addc	a,r5
      000752 F5 83            [12] 2430 	mov	dph,a
      000754 E4               [12] 2431 	clr	a
      000755 93               [24] 2432 	movc	a,@a+dptr
      000756 FD               [12] 2433 	mov	r5,a
                                   2434 ;	radio/radio.c:876: register_write(reg_index[i],
      000757 EE               [12] 2435 	mov	a,r6
      000758 90r00r11         [24] 2436 	mov	dptr,#_reg_index
      00075B 93               [24] 2437 	movc	a,@a+dptr
      00075C FC               [12] 2438 	mov	r4,a
      00075D C0 07            [24] 2439 	push	ar7
      00075F C0 06            [24] 2440 	push	ar6
      000761 C0 05            [24] 2441 	push	ar5
      000763 8C 82            [24] 2442 	mov	dpl,r4
      000765 12r08r14         [24] 2443 	lcall	_register_write
      000768 15 81            [12] 2444 	dec	sp
      00076A D0 06            [24] 2445 	pop	ar6
      00076C D0 07            [24] 2446 	pop	ar7
                                   2447 ;	radio/radio.c:875: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      00076E 0E               [12] 2448 	inc	r6
      00076F BE 0C 00         [24] 2449 	cjne	r6,#0x0C,00225$
      000772                       2450 00225$:
      000772 40 CB            [24] 2451 	jc	00139$
      000774                       2452 00130$:
                                   2453 ;	radio/radio.c:881: return true;
      000774 D3               [12] 2454 	setb	c
      000775 22               [24] 2455 	ret
                                   2456 ;------------------------------------------------------------
                                   2457 ;Allocation info for local variables in function 'radio_set_transmit_power'
                                   2458 ;------------------------------------------------------------
                                   2459 ;power                     Allocated with name '_radio_set_transmit_power_power_1_222'
                                   2460 ;i                         Allocated with name '_radio_set_transmit_power_i_1_223'
                                   2461 ;------------------------------------------------------------
                                   2462 ;	radio/radio.c:902: radio_set_transmit_power(uint8_t power)
                                   2463 ;	-----------------------------------------
                                   2464 ;	 function radio_set_transmit_power
                                   2465 ;	-----------------------------------------
      000776                       2466 _radio_set_transmit_power:
      000776 E5 82            [12] 2467 	mov	a,dpl
      000778 90r01r01         [24] 2468 	mov	dptr,#_radio_set_transmit_power_power_1_222
      00077B F0               [24] 2469 	movx	@dptr,a
                                   2470 ;	radio/radio.c:921: for (i=0; i<NUM_POWER_LEVELS; i++) {
      00077C E0               [24] 2471 	movx	a,@dptr
      00077D FF               [12] 2472 	mov	r7,a
      00077E 7E 00            [12] 2473 	mov	r6,#0x00
      000780                       2474 00106$:
                                   2475 ;	radio/radio.c:922: if (power <= power_levels[i]) break;
      000780 EE               [12] 2476 	mov	a,r6
      000781 90r02r9A         [24] 2477 	mov	dptr,#_power_levels
      000784 93               [24] 2478 	movc	a,@a+dptr
      000785 FD               [12] 2479 	mov	r5,a
      000786 C3               [12] 2480 	clr	c
      000787 9F               [12] 2481 	subb	a,r7
      000788 50 06            [24] 2482 	jnc	00113$
                                   2483 ;	radio/radio.c:921: for (i=0; i<NUM_POWER_LEVELS; i++) {
      00078A 0E               [12] 2484 	inc	r6
      00078B BE 08 00         [24] 2485 	cjne	r6,#0x08,00121$
      00078E                       2486 00121$:
      00078E 40 F0            [24] 2487 	jc	00106$
      000790                       2488 00113$:
      000790 90r01r02         [24] 2489 	mov	dptr,#_radio_set_transmit_power_i_1_223
      000793 EE               [12] 2490 	mov	a,r6
      000794 F0               [24] 2491 	movx	@dptr,a
                                   2492 ;	radio/radio.c:924: if (i == NUM_POWER_LEVELS) {
      000795 BE 08 06         [24] 2493 	cjne	r6,#0x08,00105$
                                   2494 ;	radio/radio.c:925: i = NUM_POWER_LEVELS-1;
      000798 90r01r02         [24] 2495 	mov	dptr,#_radio_set_transmit_power_i_1_223
      00079B 74 07            [12] 2496 	mov	a,#0x07
      00079D F0               [24] 2497 	movx	@dptr,a
      00079E                       2498 00105$:
                                   2499 ;	radio/radio.c:927: settings.transmit_power = power_levels[i];
      00079E 90r01r02         [24] 2500 	mov	dptr,#_radio_set_transmit_power_i_1_223
      0007A1 E0               [24] 2501 	movx	a,@dptr
      0007A2 FF               [12] 2502 	mov	r7,a
      0007A3 90r02r9A         [24] 2503 	mov	dptr,#_power_levels
      0007A6 93               [24] 2504 	movc	a,@a+dptr
      0007A7 FE               [12] 2505 	mov	r6,a
      0007A8 78r0F            [12] 2506 	mov	r0,#(_settings + 0x000a)
      0007AA EE               [12] 2507 	mov	a,r6
      0007AB F2               [24] 2508 	movx	@r0,a
                                   2509 ;	radio/radio.c:928: register_write(EZRADIOPRO_TX_POWER, i);
      0007AC C0 07            [24] 2510 	push	ar7
      0007AE 75 82 6D         [24] 2511 	mov	dpl,#0x6D
      0007B1 12r08r14         [24] 2512 	lcall	_register_write
      0007B4 15 81            [12] 2513 	dec	sp
      0007B6 22               [24] 2514 	ret
                                   2515 ;------------------------------------------------------------
                                   2516 ;Allocation info for local variables in function 'radio_get_transmit_power'
                                   2517 ;------------------------------------------------------------
                                   2518 ;	radio/radio.c:935: radio_get_transmit_power(void)
                                   2519 ;	-----------------------------------------
                                   2520 ;	 function radio_get_transmit_power
                                   2521 ;	-----------------------------------------
      0007B7                       2522 _radio_get_transmit_power:
                                   2523 ;	radio/radio.c:937: return settings.transmit_power;
      0007B7 78r0F            [12] 2524 	mov	r0,#(_settings + 0x000a)
      0007B9 E2               [24] 2525 	movx	a,@r0
      0007BA F5 82            [12] 2526 	mov	dpl,a
      0007BC 22               [24] 2527 	ret
                                   2528 ;------------------------------------------------------------
                                   2529 ;Allocation info for local variables in function 'radio_set_network_id'
                                   2530 ;------------------------------------------------------------
                                   2531 ;id                        Allocated with name '_radio_set_network_id_id_1_228'
                                   2532 ;------------------------------------------------------------
                                   2533 ;	radio/radio.c:943: radio_set_network_id(uint16_t id)
                                   2534 ;	-----------------------------------------
                                   2535 ;	 function radio_set_network_id
                                   2536 ;	-----------------------------------------
      0007BD                       2537 _radio_set_network_id:
      0007BD AF 83            [24] 2538 	mov	r7,dph
      0007BF E5 82            [12] 2539 	mov	a,dpl
      0007C1 90r01r03         [24] 2540 	mov	dptr,#_radio_set_network_id_id_1_228
      0007C4 F0               [24] 2541 	movx	@dptr,a
      0007C5 EF               [12] 2542 	mov	a,r7
      0007C6 A3               [24] 2543 	inc	dptr
      0007C7 F0               [24] 2544 	movx	@dptr,a
                                   2545 ;	radio/radio.c:945: netid[0] = id&0xFF;
      0007C8 90r01r03         [24] 2546 	mov	dptr,#_radio_set_network_id_id_1_228
      0007CB E0               [24] 2547 	movx	a,@dptr
      0007CC FE               [12] 2548 	mov	r6,a
      0007CD A3               [24] 2549 	inc	dptr
      0007CE E0               [24] 2550 	movx	a,@dptr
      0007CF FF               [12] 2551 	mov	r7,a
      0007D0 8E 04            [24] 2552 	mov	ar4,r6
      0007D2 78r03            [12] 2553 	mov	r0,#_netid
      0007D4 EC               [12] 2554 	mov	a,r4
      0007D5 F2               [24] 2555 	movx	@r0,a
                                   2556 ;	radio/radio.c:946: netid[1] = id>>8;
      0007D6 8F 05            [24] 2557 	mov	ar5,r7
      0007D8 78r04            [12] 2558 	mov	r0,#(_netid + 0x0001)
      0007DA ED               [12] 2559 	mov	a,r5
      0007DB F2               [24] 2560 	movx	@r0,a
                                   2561 ;	radio/radio.c:947: if (!feature_golay) {
      0007DC 20*00 34         [24] 2562 	jb	_feature_golay,00103$
                                   2563 ;	radio/radio.c:950: register_write(EZRADIOPRO_TRANSMIT_HEADER_3, id >> 8);
      0007DF C0 07            [24] 2564 	push	ar7
      0007E1 C0 06            [24] 2565 	push	ar6
      0007E3 C0 05            [24] 2566 	push	ar5
      0007E5 C0 05            [24] 2567 	push	ar5
      0007E7 75 82 3A         [24] 2568 	mov	dpl,#0x3A
      0007EA 12r08r14         [24] 2569 	lcall	_register_write
      0007ED 15 81            [12] 2570 	dec	sp
      0007EF D0 05            [24] 2571 	pop	ar5
      0007F1 D0 06            [24] 2572 	pop	ar6
      0007F3 D0 07            [24] 2573 	pop	ar7
                                   2574 ;	radio/radio.c:951: register_write(EZRADIOPRO_TRANSMIT_HEADER_2, id & 0xFF);
      0007F5 C0 06            [24] 2575 	push	ar6
      0007F7 C0 05            [24] 2576 	push	ar5
      0007F9 C0 06            [24] 2577 	push	ar6
      0007FB 75 82 3B         [24] 2578 	mov	dpl,#0x3B
      0007FE 12r08r14         [24] 2579 	lcall	_register_write
      000801 15 81            [12] 2580 	dec	sp
                                   2581 ;	radio/radio.c:952: register_write(EZRADIOPRO_CHECK_HEADER_3, id >> 8);
      000803 75 82 3F         [24] 2582 	mov	dpl,#0x3F
      000806 12r08r14         [24] 2583 	lcall	_register_write
      000809 15 81            [12] 2584 	dec	sp
                                   2585 ;	radio/radio.c:953: register_write(EZRADIOPRO_CHECK_HEADER_2, id & 0xFF);
      00080B 75 82 40         [24] 2586 	mov	dpl,#0x40
      00080E 12r08r14         [24] 2587 	lcall	_register_write
      000811 15 81            [12] 2588 	dec	sp
      000813                       2589 00103$:
      000813 22               [24] 2590 	ret
                                   2591 ;------------------------------------------------------------
                                   2592 ;Allocation info for local variables in function 'register_write'
                                   2593 ;------------------------------------------------------------
                                   2594 ;value                     Allocated to stack - sp -2
                                   2595 ;reg                       Allocated to registers r7 
                                   2596 ;EX0_saved                 Allocated to registers b0 
                                   2597 ;------------------------------------------------------------
                                   2598 ;	radio/radio.c:964: register_write(uint8_t reg, uint8_t value) __reentrant
                                   2599 ;	-----------------------------------------
                                   2600 ;	 function register_write
                                   2601 ;	-----------------------------------------
      000814                       2602 _register_write:
      000814 AF 82            [24] 2603 	mov	r7,dpl
                                   2604 ;	radio/radio.c:966: EX0_SAVE_DISABLE;
      000816 A2 A8            [12] 2605 	mov	c,_EX0
      000818 92*00            [24] 2606 	mov	b0,c
      00081A C2 A8            [12] 2607 	clr	_EX0
                                   2608 ;	radio/radio.c:968: RADIO_PAGE();
      00081C 75 A7 02         [24] 2609 	mov	_SFRPAGE,#0x02
                                   2610 ;	radio/radio.c:969: NSS1 = 0;                           // drive NSS low
      00081F C2 A3            [12] 2611 	clr	_NSS1
                                   2612 ;	radio/radio.c:970: SPIF1 = 0;                          // clear SPIF
      000821 C2 FF            [12] 2613 	clr	_SPIF1
                                   2614 ;	radio/radio.c:971: SPI1DAT = (reg | 0x80);             // write reg address
      000823 74 80            [12] 2615 	mov	a,#0x80
      000825 4F               [12] 2616 	orl	a,r7
      000826 F5 A3            [12] 2617 	mov	_SPI1DAT,a
                                   2618 ;	radio/radio.c:972: while (!TXBMT1);                    // wait on TXBMT
      000828                       2619 00101$:
      000828 30 F9 FD         [24] 2620 	jnb	_TXBMT1,00101$
                                   2621 ;	radio/radio.c:973: SPI1DAT = value;                    // write value
      00082B A8 81            [24] 2622 	mov	r0,sp
      00082D 18               [12] 2623 	dec	r0
      00082E 18               [12] 2624 	dec	r0
      00082F 86 A3            [24] 2625 	mov	_SPI1DAT,@r0
                                   2626 ;	radio/radio.c:974: while (!TXBMT1);                    // wait on TXBMT
      000831                       2627 00104$:
      000831 30 F9 FD         [24] 2628 	jnb	_TXBMT1,00104$
                                   2629 ;	radio/radio.c:975: while ((SPI1CFG & 0x80) == 0x80);   // wait on SPIBSY
      000834                       2630 00107$:
      000834 74 80            [12] 2631 	mov	a,#0x80
      000836 55 A1            [12] 2632 	anl	a,_SPI1CFG
      000838 FF               [12] 2633 	mov	r7,a
      000839 BF 80 02         [24] 2634 	cjne	r7,#0x80,00129$
      00083C 80 F6            [24] 2635 	sjmp	00107$
      00083E                       2636 00129$:
                                   2637 ;	radio/radio.c:977: SPIF1 = 0;                          // leave SPIF cleared
      00083E C2 FF            [12] 2638 	clr	_SPIF1
                                   2639 ;	radio/radio.c:978: NSS1 = 1;                           // drive NSS high
      000840 D2 A3            [12] 2640 	setb	_NSS1
                                   2641 ;	radio/radio.c:979: SFRPAGE = LEGACY_PAGE;
      000842 75 A7 00         [24] 2642 	mov	_SFRPAGE,#0x00
                                   2643 ;	radio/radio.c:981: EX0_RESTORE;
      000845 A2*00            [12] 2644 	mov	c,b0
      000847 92 A8            [24] 2645 	mov	_EX0,c
      000849 22               [24] 2646 	ret
                                   2647 ;------------------------------------------------------------
                                   2648 ;Allocation info for local variables in function 'register_read'
                                   2649 ;------------------------------------------------------------
                                   2650 ;reg                       Allocated to registers r7 
                                   2651 ;value                     Allocated to registers r7 
                                   2652 ;EX0_saved                 Allocated to registers b0 
                                   2653 ;------------------------------------------------------------
                                   2654 ;	radio/radio.c:991: register_read(uint8_t reg) __reentrant
                                   2655 ;	-----------------------------------------
                                   2656 ;	 function register_read
                                   2657 ;	-----------------------------------------
      00084A                       2658 _register_read:
      00084A AF 82            [24] 2659 	mov	r7,dpl
                                   2660 ;	radio/radio.c:994: EX0_SAVE_DISABLE;
      00084C A2 A8            [12] 2661 	mov	c,_EX0
      00084E 92*00            [24] 2662 	mov	b0,c
      000850 C2 A8            [12] 2663 	clr	_EX0
                                   2664 ;	radio/radio.c:996: RADIO_PAGE();
      000852 75 A7 02         [24] 2665 	mov	_SFRPAGE,#0x02
                                   2666 ;	radio/radio.c:997: NSS1 = 0;				// dsrive NSS low
      000855 C2 A3            [12] 2667 	clr	_NSS1
                                   2668 ;	radio/radio.c:998: SPIF1 = 0;				// clear SPIF
      000857 C2 FF            [12] 2669 	clr	_SPIF1
                                   2670 ;	radio/radio.c:999: SPI1DAT = (reg);			// write reg address
      000859 8F A3            [24] 2671 	mov	_SPI1DAT,r7
                                   2672 ;	radio/radio.c:1000: while (!TXBMT1);			// wait on TXBMT
      00085B                       2673 00101$:
      00085B 30 F9 FD         [24] 2674 	jnb	_TXBMT1,00101$
                                   2675 ;	radio/radio.c:1001: SPI1DAT = 0x00;				// write anything
      00085E 75 A3 00         [24] 2676 	mov	_SPI1DAT,#0x00
                                   2677 ;	radio/radio.c:1002: while (!TXBMT1);			// wait on TXBMT
      000861                       2678 00104$:
      000861 30 F9 FD         [24] 2679 	jnb	_TXBMT1,00104$
                                   2680 ;	radio/radio.c:1003: while ((SPI1CFG & 0x80) == 0x80);	// wait on SPIBSY
      000864                       2681 00107$:
      000864 74 80            [12] 2682 	mov	a,#0x80
      000866 55 A1            [12] 2683 	anl	a,_SPI1CFG
      000868 FF               [12] 2684 	mov	r7,a
      000869 BF 80 02         [24] 2685 	cjne	r7,#0x80,00129$
      00086C 80 F6            [24] 2686 	sjmp	00107$
      00086E                       2687 00129$:
                                   2688 ;	radio/radio.c:1004: value = SPI1DAT;			// read value
      00086E AF A3            [24] 2689 	mov	r7,_SPI1DAT
                                   2690 ;	radio/radio.c:1005: SPIF1 = 0;				// leave SPIF cleared
      000870 C2 FF            [12] 2691 	clr	_SPIF1
                                   2692 ;	radio/radio.c:1006: NSS1 = 1;				// drive NSS high
      000872 D2 A3            [12] 2693 	setb	_NSS1
                                   2694 ;	radio/radio.c:1007: SFRPAGE = LEGACY_PAGE;
      000874 75 A7 00         [24] 2695 	mov	_SFRPAGE,#0x00
                                   2696 ;	radio/radio.c:1009: EX0_RESTORE;
      000877 A2*00            [12] 2697 	mov	c,b0
      000879 92 A8            [24] 2698 	mov	_EX0,c
                                   2699 ;	radio/radio.c:1011: return value;
      00087B 8F 82            [24] 2700 	mov	dpl,r7
      00087D 22               [24] 2701 	ret
                                   2702 ;------------------------------------------------------------
                                   2703 ;Allocation info for local variables in function 'read_receive_fifo'
                                   2704 ;------------------------------------------------------------
                                   2705 ;buf                       Allocated to stack - sp -3
                                   2706 ;n                         Allocated to registers r7 
                                   2707 ;------------------------------------------------------------
                                   2708 ;	radio/radio.c:1018: read_receive_fifo(register uint8_t n, __xdata uint8_t * buf) __reentrant
                                   2709 ;	-----------------------------------------
                                   2710 ;	 function read_receive_fifo
                                   2711 ;	-----------------------------------------
      00087E                       2712 _read_receive_fifo:
      00087E AF 82            [24] 2713 	mov	r7,dpl
                                   2714 ;	radio/radio.c:1020: RADIO_PAGE();
      000880 75 A7 02         [24] 2715 	mov	_SFRPAGE,#0x02
                                   2716 ;	radio/radio.c:1021: NSS1 = 0;				// drive NSS low
      000883 C2 A3            [12] 2717 	clr	_NSS1
                                   2718 ;	radio/radio.c:1022: SPIF1 = 0;				// clear SPIF
      000885 C2 FF            [12] 2719 	clr	_SPIF1
                                   2720 ;	radio/radio.c:1023: SPI1DAT = EZRADIOPRO_FIFO_ACCESS;
      000887 75 A3 7F         [24] 2721 	mov	_SPI1DAT,#0x7F
                                   2722 ;	radio/radio.c:1024: while (!SPIF1);				// wait on SPIF
      00088A                       2723 00101$:
      00088A 30 FF FD         [24] 2724 	jnb	_SPIF1,00101$
                                   2725 ;	radio/radio.c:1025: ACC = SPI1DAT;				// discard first byte
      00088D 85 A3 E0         [24] 2726 	mov	_ACC,_SPI1DAT
                                   2727 ;	radio/radio.c:1027: while (n--) {
      000890 E5 81            [12] 2728 	mov	a,sp
      000892 24 FD            [12] 2729 	add	a,#0xfd
      000894 F8               [12] 2730 	mov	r0,a
      000895 86 05            [24] 2731 	mov	ar5,@r0
      000897 08               [12] 2732 	inc	r0
      000898 86 06            [24] 2733 	mov	ar6,@r0
      00089A                       2734 00107$:
      00089A 8F 04            [24] 2735 	mov	ar4,r7
      00089C 1F               [12] 2736 	dec	r7
      00089D EC               [12] 2737 	mov	a,r4
      00089E 60 16            [24] 2738 	jz	00109$
                                   2739 ;	radio/radio.c:1028: SPIF1 = 0;			// clear SPIF
      0008A0 C2 FF            [12] 2740 	clr	_SPIF1
                                   2741 ;	radio/radio.c:1029: SPI1DAT = 0x00;			// write anything
      0008A2 75 A3 00         [24] 2742 	mov	_SPI1DAT,#0x00
                                   2743 ;	radio/radio.c:1030: while (!SPIF1);			// wait on SPIF
      0008A5                       2744 00104$:
      0008A5 30 FF FD         [24] 2745 	jnb	_SPIF1,00104$
                                   2746 ;	radio/radio.c:1031: *buf++ = SPI1DAT;		// copy to buffer
      0008A8 8D 82            [24] 2747 	mov	dpl,r5
      0008AA 8E 83            [24] 2748 	mov	dph,r6
      0008AC E5 A3            [12] 2749 	mov	a,_SPI1DAT
      0008AE F0               [24] 2750 	movx	@dptr,a
      0008AF A3               [24] 2751 	inc	dptr
      0008B0 AD 82            [24] 2752 	mov	r5,dpl
      0008B2 AE 83            [24] 2753 	mov	r6,dph
      0008B4 80 E4            [24] 2754 	sjmp	00107$
      0008B6                       2755 00109$:
                                   2756 ;	radio/radio.c:1034: SPIF1 = 0;				// leave SPIF cleared
      0008B6 C2 FF            [12] 2757 	clr	_SPIF1
                                   2758 ;	radio/radio.c:1035: NSS1 = 1;				// drive NSS high
      0008B8 D2 A3            [12] 2759 	setb	_NSS1
                                   2760 ;	radio/radio.c:1036: SFRPAGE = LEGACY_PAGE;
      0008BA 75 A7 00         [24] 2761 	mov	_SFRPAGE,#0x00
      0008BD 22               [24] 2762 	ret
                                   2763 ;------------------------------------------------------------
                                   2764 ;Allocation info for local variables in function 'clear_status_registers'
                                   2765 ;------------------------------------------------------------
                                   2766 ;	radio/radio.c:1042: clear_status_registers(void)
                                   2767 ;	-----------------------------------------
                                   2768 ;	 function clear_status_registers
                                   2769 ;	-----------------------------------------
      0008BE                       2770 _clear_status_registers:
                                   2771 ;	radio/radio.c:1044: register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      0008BE 75 82 03         [24] 2772 	mov	dpl,#0x03
      0008C1 12r08r4A         [24] 2773 	lcall	_register_read
                                   2774 ;	radio/radio.c:1045: register_read(EZRADIOPRO_INTERRUPT_STATUS_2);
      0008C4 75 82 04         [24] 2775 	mov	dpl,#0x04
      0008C7 02r08r4A         [24] 2776 	ljmp	_register_read
                                   2777 ;------------------------------------------------------------
                                   2778 ;Allocation info for local variables in function 'scale_uint32'
                                   2779 ;------------------------------------------------------------
                                   2780 ;	radio/radio.c:1055: scale_uint32(__pdata uint32_t value, __pdata uint32_t scale)
                                   2781 ;	-----------------------------------------
                                   2782 ;	 function scale_uint32
                                   2783 ;	-----------------------------------------
      0008CA                       2784 _scale_uint32:
      0008CA AF 82            [24] 2785 	mov	r7,dpl
      0008CC AE 83            [24] 2786 	mov	r6,dph
      0008CE AD F0            [24] 2787 	mov	r5,b
      0008D0 FC               [12] 2788 	mov	r4,a
      0008D1 78r21            [12] 2789 	mov	r0,#_scale_uint32_value_1_240
      0008D3 EF               [12] 2790 	mov	a,r7
      0008D4 F2               [24] 2791 	movx	@r0,a
      0008D5 08               [12] 2792 	inc	r0
      0008D6 EE               [12] 2793 	mov	a,r6
      0008D7 F2               [24] 2794 	movx	@r0,a
      0008D8 08               [12] 2795 	inc	r0
      0008D9 ED               [12] 2796 	mov	a,r5
      0008DA F2               [24] 2797 	movx	@r0,a
      0008DB 08               [12] 2798 	inc	r0
      0008DC EC               [12] 2799 	mov	a,r4
      0008DD F2               [24] 2800 	movx	@r0,a
                                   2801 ;	radio/radio.c:1057: return (value + (scale >> 1)) / scale;
      0008DE 78r20            [12] 2802 	mov	r0,#(_scale_uint32_PARM_2 + 3)
      0008E0 E2               [24] 2803 	movx	a,@r0
      0008E1 C3               [12] 2804 	clr	c
      0008E2 13               [12] 2805 	rrc	a
      0008E3 FF               [12] 2806 	mov	r7,a
      0008E4 18               [12] 2807 	dec	r0
      0008E5 E2               [24] 2808 	movx	a,@r0
      0008E6 13               [12] 2809 	rrc	a
      0008E7 FE               [12] 2810 	mov	r6,a
      0008E8 18               [12] 2811 	dec	r0
      0008E9 E2               [24] 2812 	movx	a,@r0
      0008EA 13               [12] 2813 	rrc	a
      0008EB FB               [12] 2814 	mov	r3,a
      0008EC 18               [12] 2815 	dec	r0
      0008ED E2               [24] 2816 	movx	a,@r0
      0008EE 13               [12] 2817 	rrc	a
      0008EF FA               [12] 2818 	mov	r2,a
      0008F0 78r21            [12] 2819 	mov	r0,#_scale_uint32_value_1_240
      0008F2 E2               [24] 2820 	movx	a,@r0
      0008F3 2A               [12] 2821 	add	a,r2
      0008F4 FA               [12] 2822 	mov	r2,a
      0008F5 08               [12] 2823 	inc	r0
      0008F6 E2               [24] 2824 	movx	a,@r0
      0008F7 3B               [12] 2825 	addc	a,r3
      0008F8 FB               [12] 2826 	mov	r3,a
      0008F9 08               [12] 2827 	inc	r0
      0008FA E2               [24] 2828 	movx	a,@r0
      0008FB 3E               [12] 2829 	addc	a,r6
      0008FC FE               [12] 2830 	mov	r6,a
      0008FD 08               [12] 2831 	inc	r0
      0008FE E2               [24] 2832 	movx	a,@r0
      0008FF 3F               [12] 2833 	addc	a,r7
      000900 FF               [12] 2834 	mov	r7,a
      000901 78r1D            [12] 2835 	mov	r0,#_scale_uint32_PARM_2
      000903 90r00r00         [24] 2836 	mov	dptr,#__divulong_PARM_2
      000906 E2               [24] 2837 	movx	a,@r0
      000907 F0               [24] 2838 	movx	@dptr,a
      000908 08               [12] 2839 	inc	r0
      000909 E2               [24] 2840 	movx	a,@r0
      00090A A3               [24] 2841 	inc	dptr
      00090B F0               [24] 2842 	movx	@dptr,a
      00090C 08               [12] 2843 	inc	r0
      00090D E2               [24] 2844 	movx	a,@r0
      00090E A3               [24] 2845 	inc	dptr
      00090F F0               [24] 2846 	movx	@dptr,a
      000910 08               [12] 2847 	inc	r0
      000911 E2               [24] 2848 	movx	a,@r0
      000912 A3               [24] 2849 	inc	dptr
      000913 F0               [24] 2850 	movx	@dptr,a
      000914 8A 82            [24] 2851 	mov	dpl,r2
      000916 8B 83            [24] 2852 	mov	dph,r3
      000918 8E F0            [24] 2853 	mov	b,r6
      00091A EF               [12] 2854 	mov	a,r7
      00091B 02r00r00         [24] 2855 	ljmp	__divulong
                                   2856 ;------------------------------------------------------------
                                   2857 ;Allocation info for local variables in function 'software_reset'
                                   2858 ;------------------------------------------------------------
                                   2859 ;status                    Allocated with name '_software_reset_status_1_243'
                                   2860 ;------------------------------------------------------------
                                   2861 ;	radio/radio.c:1065: software_reset(void)
                                   2862 ;	-----------------------------------------
                                   2863 ;	 function software_reset
                                   2864 ;	-----------------------------------------
      00091E                       2865 _software_reset:
                                   2866 ;	radio/radio.c:1070: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      00091E E4               [12] 2867 	clr	a
      00091F C0 E0            [24] 2868 	push	acc
      000921 75 82 05         [24] 2869 	mov	dpl,#0x05
      000924 12r08r14         [24] 2870 	lcall	_register_write
      000927 15 81            [12] 2871 	dec	sp
                                   2872 ;	radio/radio.c:1071: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0);
      000929 E4               [12] 2873 	clr	a
      00092A C0 E0            [24] 2874 	push	acc
      00092C 75 82 06         [24] 2875 	mov	dpl,#0x06
      00092F 12r08r14         [24] 2876 	lcall	_register_write
      000932 15 81            [12] 2877 	dec	sp
                                   2878 ;	radio/radio.c:1073: clear_status_registers();
      000934 12r08rBE         [24] 2879 	lcall	_clear_status_registers
                                   2880 ;	radio/radio.c:1076: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, (EZRADIOPRO_SWRES | EZRADIOPRO_XTON));
      000937 74 81            [12] 2881 	mov	a,#0x81
      000939 C0 E0            [24] 2882 	push	acc
      00093B 75 82 07         [24] 2883 	mov	dpl,#0x07
      00093E 12r08r14         [24] 2884 	lcall	_register_write
      000941 15 81            [12] 2885 	dec	sp
                                   2886 ;	radio/radio.c:1079: delay_set(2);
      000943 90 00 02         [24] 2887 	mov	dptr,#0x0002
      000946 12r00r00         [24] 2888 	lcall	_delay_set
                                   2889 ;	radio/radio.c:1080: while (IRQ) {
      000949                       2890 00103$:
      000949 30 81 07         [24] 2891 	jnb	_IRQ,00105$
                                   2892 ;	radio/radio.c:1081: if (delay_expired()) {
      00094C 12r00r00         [24] 2893 	lcall	_delay_expired
      00094F 50 F8            [24] 2894 	jnc	00103$
                                   2895 ;	radio/radio.c:1082: return false;
      000951 C3               [12] 2896 	clr	c
      000952 22               [24] 2897 	ret
      000953                       2898 00105$:
                                   2899 ;	radio/radio.c:1087: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      000953 E4               [12] 2900 	clr	a
      000954 C0 E0            [24] 2901 	push	acc
      000956 75 82 05         [24] 2902 	mov	dpl,#0x05
      000959 12r08r14         [24] 2903 	lcall	_register_write
      00095C 15 81            [12] 2904 	dec	sp
                                   2905 ;	radio/radio.c:1088: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, EZRADIOPRO_ENCHIPRDY);
      00095E 74 02            [12] 2906 	mov	a,#0x02
      000960 C0 E0            [24] 2907 	push	acc
      000962 75 82 06         [24] 2908 	mov	dpl,#0x06
      000965 12r08r14         [24] 2909 	lcall	_register_write
      000968 15 81            [12] 2910 	dec	sp
                                   2911 ;	radio/radio.c:1090: delay_set(20);
      00096A 90 00 14         [24] 2912 	mov	dptr,#0x0014
      00096D 12r00r00         [24] 2913 	lcall	_delay_set
                                   2914 ;	radio/radio.c:1091: while (!delay_expired()) {
      000970                       2915 00108$:
      000970 12r00r00         [24] 2916 	lcall	_delay_expired
      000973 40 13            [24] 2917 	jc	00110$
                                   2918 ;	radio/radio.c:1092: status = register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      000975 75 82 03         [24] 2919 	mov	dpl,#0x03
      000978 12r08r4A         [24] 2920 	lcall	_register_read
                                   2921 ;	radio/radio.c:1093: status = register_read(EZRADIOPRO_INTERRUPT_STATUS_2);
      00097B 75 82 04         [24] 2922 	mov	dpl,#0x04
      00097E 12r08r4A         [24] 2923 	lcall	_register_read
      000981 E5 82            [12] 2924 	mov	a,dpl
                                   2925 ;	radio/radio.c:1094: if (status & EZRADIOPRO_ICHIPRDY) {
      000983 30 E1 EA         [24] 2926 	jnb	acc.1,00108$
                                   2927 ;	radio/radio.c:1095: return true;
      000986 D3               [12] 2928 	setb	c
      000987 22               [24] 2929 	ret
      000988                       2930 00110$:
                                   2931 ;	radio/radio.c:1098: return false;
      000988 C3               [12] 2932 	clr	c
      000989 22               [24] 2933 	ret
                                   2934 ;------------------------------------------------------------
                                   2935 ;Allocation info for local variables in function 'set_frequency_registers'
                                   2936 ;------------------------------------------------------------
                                   2937 ;band                      Allocated with name '_set_frequency_registers_band_1_249'
                                   2938 ;carrier                   Allocated with name '_set_frequency_registers_carrier_1_249'
                                   2939 ;------------------------------------------------------------
                                   2940 ;	radio/radio.c:1105: set_frequency_registers(__pdata uint32_t frequency)
                                   2941 ;	-----------------------------------------
                                   2942 ;	 function set_frequency_registers
                                   2943 ;	-----------------------------------------
      00098A                       2944 _set_frequency_registers:
      00098A AF 82            [24] 2945 	mov	r7,dpl
      00098C AE 83            [24] 2946 	mov	r6,dph
      00098E AD F0            [24] 2947 	mov	r5,b
      000990 FC               [12] 2948 	mov	r4,a
      000991 78r25            [12] 2949 	mov	r0,#_set_frequency_registers_frequency_1_248
      000993 EF               [12] 2950 	mov	a,r7
      000994 F2               [24] 2951 	movx	@r0,a
      000995 08               [12] 2952 	inc	r0
      000996 EE               [12] 2953 	mov	a,r6
      000997 F2               [24] 2954 	movx	@r0,a
      000998 08               [12] 2955 	inc	r0
      000999 ED               [12] 2956 	mov	a,r5
      00099A F2               [24] 2957 	movx	@r0,a
      00099B 08               [12] 2958 	inc	r0
      00099C EC               [12] 2959 	mov	a,r4
      00099D F2               [24] 2960 	movx	@r0,a
                                   2961 ;	radio/radio.c:1110: if (frequency > 480000000UL) {
      00099E 78r25            [12] 2962 	mov	r0,#_set_frequency_registers_frequency_1_248
      0009A0 C3               [12] 2963 	clr	c
      0009A1 E2               [24] 2964 	movx	a,@r0
      0009A2 F5 F0            [12] 2965 	mov	b,a
      0009A4 E4               [12] 2966 	clr	a
      0009A5 95 F0            [12] 2967 	subb	a,b
      0009A7 08               [12] 2968 	inc	r0
      0009A8 E2               [24] 2969 	movx	a,@r0
      0009A9 F5 F0            [12] 2970 	mov	b,a
      0009AB 74 38            [12] 2971 	mov	a,#0x38
      0009AD 95 F0            [12] 2972 	subb	a,b
      0009AF 08               [12] 2973 	inc	r0
      0009B0 E2               [24] 2974 	movx	a,@r0
      0009B1 F5 F0            [12] 2975 	mov	b,a
      0009B3 74 9C            [12] 2976 	mov	a,#0x9C
      0009B5 95 F0            [12] 2977 	subb	a,b
      0009B7 08               [12] 2978 	inc	r0
      0009B8 E2               [24] 2979 	movx	a,@r0
      0009B9 F5 F0            [12] 2980 	mov	b,a
      0009BB 74 1C            [12] 2981 	mov	a,#0x1C
      0009BD 95 F0            [12] 2982 	subb	a,b
      0009BF 40 03            [24] 2983 	jc	00109$
      0009C1 02r0Ar7F         [24] 2984 	ljmp	00102$
      0009C4                       2985 00109$:
                                   2986 ;	radio/radio.c:1111: frequency -= 480000000UL;
      0009C4 78r26            [12] 2987 	mov	r0,#(_set_frequency_registers_frequency_1_248 + 1)
      0009C6 E2               [24] 2988 	movx	a,@r0
      0009C7 24 C8            [12] 2989 	add	a,#0xC8
      0009C9 F2               [24] 2990 	movx	@r0,a
      0009CA 08               [12] 2991 	inc	r0
      0009CB E2               [24] 2992 	movx	a,@r0
      0009CC 34 63            [12] 2993 	addc	a,#0x63
      0009CE F2               [24] 2994 	movx	@r0,a
      0009CF 08               [12] 2995 	inc	r0
      0009D0 E2               [24] 2996 	movx	a,@r0
      0009D1 34 E3            [12] 2997 	addc	a,#0xE3
      0009D3 F2               [24] 2998 	movx	@r0,a
                                   2999 ;	radio/radio.c:1112: band  = frequency / 20000000UL;
      0009D4 90r00r00         [24] 3000 	mov	dptr,#__divulong_PARM_2
      0009D7 E4               [12] 3001 	clr	a
      0009D8 F0               [24] 3002 	movx	@dptr,a
      0009D9 74 2D            [12] 3003 	mov	a,#0x2D
      0009DB A3               [24] 3004 	inc	dptr
      0009DC F0               [24] 3005 	movx	@dptr,a
      0009DD 74 31            [12] 3006 	mov	a,#0x31
      0009DF A3               [24] 3007 	inc	dptr
      0009E0 F0               [24] 3008 	movx	@dptr,a
      0009E1 74 01            [12] 3009 	mov	a,#0x01
      0009E3 A3               [24] 3010 	inc	dptr
      0009E4 F0               [24] 3011 	movx	@dptr,a
      0009E5 78r25            [12] 3012 	mov	r0,#_set_frequency_registers_frequency_1_248
      0009E7 E2               [24] 3013 	movx	a,@r0
      0009E8 F5 82            [12] 3014 	mov	dpl,a
      0009EA 08               [12] 3015 	inc	r0
      0009EB E2               [24] 3016 	movx	a,@r0
      0009EC F5 83            [12] 3017 	mov	dph,a
      0009EE 08               [12] 3018 	inc	r0
      0009EF E2               [24] 3019 	movx	a,@r0
      0009F0 F5 F0            [12] 3020 	mov	b,a
      0009F2 08               [12] 3021 	inc	r0
      0009F3 E2               [24] 3022 	movx	a,@r0
      0009F4 12r00r00         [24] 3023 	lcall	__divulong
      0009F7 AA 82            [24] 3024 	mov	r2,dpl
      0009F9 90r01r05         [24] 3025 	mov	dptr,#_set_frequency_registers_band_1_249
      0009FC EA               [12] 3026 	mov	a,r2
      0009FD F0               [24] 3027 	movx	@dptr,a
                                   3028 ;	radio/radio.c:1113: frequency -= (uint32_t)band * 20000000UL;
      0009FE 90r00r00         [24] 3029 	mov	dptr,#__mullong_PARM_2
      000A01 EA               [12] 3030 	mov	a,r2
      000A02 F0               [24] 3031 	movx	@dptr,a
      000A03 E4               [12] 3032 	clr	a
      000A04 A3               [24] 3033 	inc	dptr
      000A05 F0               [24] 3034 	movx	@dptr,a
      000A06 A3               [24] 3035 	inc	dptr
      000A07 F0               [24] 3036 	movx	@dptr,a
      000A08 A3               [24] 3037 	inc	dptr
      000A09 F0               [24] 3038 	movx	@dptr,a
      000A0A 90 2D 00         [24] 3039 	mov	dptr,#0x2D00
      000A0D 75 F0 31         [24] 3040 	mov	b,#0x31
      000A10 74 01            [12] 3041 	mov	a,#0x01
      000A12 12r00r00         [24] 3042 	lcall	__mullong
      000A15 AC 82            [24] 3043 	mov	r4,dpl
      000A17 AD 83            [24] 3044 	mov	r5,dph
      000A19 AE F0            [24] 3045 	mov	r6,b
      000A1B FF               [12] 3046 	mov	r7,a
      000A1C 78r25            [12] 3047 	mov	r0,#_set_frequency_registers_frequency_1_248
      000A1E E2               [24] 3048 	movx	a,@r0
      000A1F C3               [12] 3049 	clr	c
      000A20 9C               [12] 3050 	subb	a,r4
      000A21 F2               [24] 3051 	movx	@r0,a
      000A22 08               [12] 3052 	inc	r0
      000A23 E2               [24] 3053 	movx	a,@r0
      000A24 9D               [12] 3054 	subb	a,r5
      000A25 F2               [24] 3055 	movx	@r0,a
      000A26 08               [12] 3056 	inc	r0
      000A27 E2               [24] 3057 	movx	a,@r0
      000A28 9E               [12] 3058 	subb	a,r6
      000A29 F2               [24] 3059 	movx	@r0,a
      000A2A 08               [12] 3060 	inc	r0
      000A2B E2               [24] 3061 	movx	a,@r0
      000A2C 9F               [12] 3062 	subb	a,r7
      000A2D F2               [24] 3063 	movx	@r0,a
                                   3064 ;	radio/radio.c:1114: frequency  = scale_uint32(frequency, 625);
      000A2E 78r1D            [12] 3065 	mov	r0,#_scale_uint32_PARM_2
      000A30 74 71            [12] 3066 	mov	a,#0x71
      000A32 F2               [24] 3067 	movx	@r0,a
      000A33 08               [12] 3068 	inc	r0
      000A34 74 02            [12] 3069 	mov	a,#0x02
      000A36 F2               [24] 3070 	movx	@r0,a
      000A37 08               [12] 3071 	inc	r0
      000A38 E4               [12] 3072 	clr	a
      000A39 F2               [24] 3073 	movx	@r0,a
      000A3A 08               [12] 3074 	inc	r0
      000A3B F2               [24] 3075 	movx	@r0,a
      000A3C 78r25            [12] 3076 	mov	r0,#_set_frequency_registers_frequency_1_248
      000A3E E2               [24] 3077 	movx	a,@r0
      000A3F F5 82            [12] 3078 	mov	dpl,a
      000A41 08               [12] 3079 	inc	r0
      000A42 E2               [24] 3080 	movx	a,@r0
      000A43 F5 83            [12] 3081 	mov	dph,a
      000A45 08               [12] 3082 	inc	r0
      000A46 E2               [24] 3083 	movx	a,@r0
      000A47 F5 F0            [12] 3084 	mov	b,a
      000A49 08               [12] 3085 	inc	r0
      000A4A E2               [24] 3086 	movx	a,@r0
      000A4B 12r08rCA         [24] 3087 	lcall	_scale_uint32
      000A4E 78r25            [12] 3088 	mov	r0,#_set_frequency_registers_frequency_1_248
      000A50 C0 E0            [24] 3089 	push	acc
      000A52 E5 82            [12] 3090 	mov	a,dpl
      000A54 F2               [24] 3091 	movx	@r0,a
      000A55 08               [12] 3092 	inc	r0
      000A56 E5 83            [12] 3093 	mov	a,dph
      000A58 F2               [24] 3094 	movx	@r0,a
      000A59 08               [12] 3095 	inc	r0
      000A5A E5 F0            [12] 3096 	mov	a,b
      000A5C F2               [24] 3097 	movx	@r0,a
      000A5D D0 E0            [24] 3098 	pop	acc
      000A5F 08               [12] 3099 	inc	r0
      000A60 F2               [24] 3100 	movx	@r0,a
                                   3101 ;	radio/radio.c:1115: frequency <<= 1;
      000A61 78r25            [12] 3102 	mov	r0,#_set_frequency_registers_frequency_1_248
      000A63 E2               [24] 3103 	movx	a,@r0
      000A64 25 E0            [12] 3104 	add	a,acc
      000A66 F2               [24] 3105 	movx	@r0,a
      000A67 08               [12] 3106 	inc	r0
      000A68 E2               [24] 3107 	movx	a,@r0
      000A69 33               [12] 3108 	rlc	a
      000A6A F2               [24] 3109 	movx	@r0,a
      000A6B 08               [12] 3110 	inc	r0
      000A6C E2               [24] 3111 	movx	a,@r0
      000A6D 33               [12] 3112 	rlc	a
      000A6E F2               [24] 3113 	movx	@r0,a
      000A6F 08               [12] 3114 	inc	r0
      000A70 E2               [24] 3115 	movx	a,@r0
      000A71 33               [12] 3116 	rlc	a
      000A72 F2               [24] 3117 	movx	@r0,a
                                   3118 ;	radio/radio.c:1116: band |= EZRADIOPRO_HBSEL;
      000A73 90r01r05         [24] 3119 	mov	dptr,#_set_frequency_registers_band_1_249
      000A76 E0               [24] 3120 	movx	a,@dptr
      000A77 FF               [12] 3121 	mov	r7,a
      000A78 74 20            [12] 3122 	mov	a,#0x20
      000A7A 4F               [12] 3123 	orl	a,r7
      000A7B F0               [24] 3124 	movx	@dptr,a
      000A7C 02r0Br40         [24] 3125 	ljmp	00103$
      000A7F                       3126 00102$:
                                   3127 ;	radio/radio.c:1118: frequency -= 240000000UL;
      000A7F 78r26            [12] 3128 	mov	r0,#(_set_frequency_registers_frequency_1_248 + 1)
      000A81 E2               [24] 3129 	movx	a,@r0
      000A82 24 E4            [12] 3130 	add	a,#0xE4
      000A84 F2               [24] 3131 	movx	@r0,a
      000A85 08               [12] 3132 	inc	r0
      000A86 E2               [24] 3133 	movx	a,@r0
      000A87 34 B1            [12] 3134 	addc	a,#0xB1
      000A89 F2               [24] 3135 	movx	@r0,a
      000A8A 08               [12] 3136 	inc	r0
      000A8B E2               [24] 3137 	movx	a,@r0
      000A8C 34 F1            [12] 3138 	addc	a,#0xF1
      000A8E F2               [24] 3139 	movx	@r0,a
                                   3140 ;	radio/radio.c:1119: band  = frequency / 10000000UL;
      000A8F 90r00r00         [24] 3141 	mov	dptr,#__divulong_PARM_2
      000A92 74 80            [12] 3142 	mov	a,#0x80
      000A94 F0               [24] 3143 	movx	@dptr,a
      000A95 74 96            [12] 3144 	mov	a,#0x96
      000A97 A3               [24] 3145 	inc	dptr
      000A98 F0               [24] 3146 	movx	@dptr,a
      000A99 74 98            [12] 3147 	mov	a,#0x98
      000A9B A3               [24] 3148 	inc	dptr
      000A9C F0               [24] 3149 	movx	@dptr,a
      000A9D E4               [12] 3150 	clr	a
      000A9E A3               [24] 3151 	inc	dptr
      000A9F F0               [24] 3152 	movx	@dptr,a
      000AA0 78r25            [12] 3153 	mov	r0,#_set_frequency_registers_frequency_1_248
      000AA2 E2               [24] 3154 	movx	a,@r0
      000AA3 F5 82            [12] 3155 	mov	dpl,a
      000AA5 08               [12] 3156 	inc	r0
      000AA6 E2               [24] 3157 	movx	a,@r0
      000AA7 F5 83            [12] 3158 	mov	dph,a
      000AA9 08               [12] 3159 	inc	r0
      000AAA E2               [24] 3160 	movx	a,@r0
      000AAB F5 F0            [12] 3161 	mov	b,a
      000AAD 08               [12] 3162 	inc	r0
      000AAE E2               [24] 3163 	movx	a,@r0
      000AAF 12r00r00         [24] 3164 	lcall	__divulong
      000AB2 AC 82            [24] 3165 	mov	r4,dpl
      000AB4 90r01r05         [24] 3166 	mov	dptr,#_set_frequency_registers_band_1_249
      000AB7 EC               [12] 3167 	mov	a,r4
      000AB8 F0               [24] 3168 	movx	@dptr,a
                                   3169 ;	radio/radio.c:1120: frequency -= (uint32_t)band * 10000000UL;
      000AB9 90r00r00         [24] 3170 	mov	dptr,#__mullong_PARM_2
      000ABC EC               [12] 3171 	mov	a,r4
      000ABD F0               [24] 3172 	movx	@dptr,a
      000ABE E4               [12] 3173 	clr	a
      000ABF A3               [24] 3174 	inc	dptr
      000AC0 F0               [24] 3175 	movx	@dptr,a
      000AC1 A3               [24] 3176 	inc	dptr
      000AC2 F0               [24] 3177 	movx	@dptr,a
      000AC3 A3               [24] 3178 	inc	dptr
      000AC4 F0               [24] 3179 	movx	@dptr,a
      000AC5 90 96 80         [24] 3180 	mov	dptr,#0x9680
      000AC8 75 F0 98         [24] 3181 	mov	b,#0x98
      000ACB E4               [12] 3182 	clr	a
      000ACC 12r00r00         [24] 3183 	lcall	__mullong
      000ACF AC 82            [24] 3184 	mov	r4,dpl
      000AD1 AD 83            [24] 3185 	mov	r5,dph
      000AD3 AE F0            [24] 3186 	mov	r6,b
      000AD5 FF               [12] 3187 	mov	r7,a
      000AD6 78r25            [12] 3188 	mov	r0,#_set_frequency_registers_frequency_1_248
      000AD8 E2               [24] 3189 	movx	a,@r0
      000AD9 C3               [12] 3190 	clr	c
      000ADA 9C               [12] 3191 	subb	a,r4
      000ADB F2               [24] 3192 	movx	@r0,a
      000ADC 08               [12] 3193 	inc	r0
      000ADD E2               [24] 3194 	movx	a,@r0
      000ADE 9D               [12] 3195 	subb	a,r5
      000ADF F2               [24] 3196 	movx	@r0,a
      000AE0 08               [12] 3197 	inc	r0
      000AE1 E2               [24] 3198 	movx	a,@r0
      000AE2 9E               [12] 3199 	subb	a,r6
      000AE3 F2               [24] 3200 	movx	@r0,a
      000AE4 08               [12] 3201 	inc	r0
      000AE5 E2               [24] 3202 	movx	a,@r0
      000AE6 9F               [12] 3203 	subb	a,r7
      000AE7 F2               [24] 3204 	movx	@r0,a
                                   3205 ;	radio/radio.c:1121: frequency  = scale_uint32(frequency, 625);
      000AE8 78r1D            [12] 3206 	mov	r0,#_scale_uint32_PARM_2
      000AEA 74 71            [12] 3207 	mov	a,#0x71
      000AEC F2               [24] 3208 	movx	@r0,a
      000AED 08               [12] 3209 	inc	r0
      000AEE 74 02            [12] 3210 	mov	a,#0x02
      000AF0 F2               [24] 3211 	movx	@r0,a
      000AF1 08               [12] 3212 	inc	r0
      000AF2 E4               [12] 3213 	clr	a
      000AF3 F2               [24] 3214 	movx	@r0,a
      000AF4 08               [12] 3215 	inc	r0
      000AF5 F2               [24] 3216 	movx	@r0,a
      000AF6 78r25            [12] 3217 	mov	r0,#_set_frequency_registers_frequency_1_248
      000AF8 E2               [24] 3218 	movx	a,@r0
      000AF9 F5 82            [12] 3219 	mov	dpl,a
      000AFB 08               [12] 3220 	inc	r0
      000AFC E2               [24] 3221 	movx	a,@r0
      000AFD F5 83            [12] 3222 	mov	dph,a
      000AFF 08               [12] 3223 	inc	r0
      000B00 E2               [24] 3224 	movx	a,@r0
      000B01 F5 F0            [12] 3225 	mov	b,a
      000B03 08               [12] 3226 	inc	r0
      000B04 E2               [24] 3227 	movx	a,@r0
      000B05 12r08rCA         [24] 3228 	lcall	_scale_uint32
      000B08 78r25            [12] 3229 	mov	r0,#_set_frequency_registers_frequency_1_248
      000B0A C0 E0            [24] 3230 	push	acc
      000B0C E5 82            [12] 3231 	mov	a,dpl
      000B0E F2               [24] 3232 	movx	@r0,a
      000B0F 08               [12] 3233 	inc	r0
      000B10 E5 83            [12] 3234 	mov	a,dph
      000B12 F2               [24] 3235 	movx	@r0,a
      000B13 08               [12] 3236 	inc	r0
      000B14 E5 F0            [12] 3237 	mov	a,b
      000B16 F2               [24] 3238 	movx	@r0,a
      000B17 D0 E0            [24] 3239 	pop	acc
      000B19 08               [12] 3240 	inc	r0
      000B1A F2               [24] 3241 	movx	@r0,a
                                   3242 ;	radio/radio.c:1122: frequency <<= 2;
      000B1B 78r25            [12] 3243 	mov	r0,#_set_frequency_registers_frequency_1_248
      000B1D E2               [24] 3244 	movx	a,@r0
      000B1E 25 E0            [12] 3245 	add	a,acc
      000B20 F2               [24] 3246 	movx	@r0,a
      000B21 08               [12] 3247 	inc	r0
      000B22 E2               [24] 3248 	movx	a,@r0
      000B23 33               [12] 3249 	rlc	a
      000B24 F2               [24] 3250 	movx	@r0,a
      000B25 08               [12] 3251 	inc	r0
      000B26 E2               [24] 3252 	movx	a,@r0
      000B27 33               [12] 3253 	rlc	a
      000B28 F2               [24] 3254 	movx	@r0,a
      000B29 08               [12] 3255 	inc	r0
      000B2A E2               [24] 3256 	movx	a,@r0
      000B2B 33               [12] 3257 	rlc	a
      000B2C F2               [24] 3258 	movx	@r0,a
      000B2D 18               [12] 3259 	dec	r0
      000B2E 18               [12] 3260 	dec	r0
      000B2F 18               [12] 3261 	dec	r0
      000B30 E2               [24] 3262 	movx	a,@r0
      000B31 25 E0            [12] 3263 	add	a,acc
      000B33 F2               [24] 3264 	movx	@r0,a
      000B34 08               [12] 3265 	inc	r0
      000B35 E2               [24] 3266 	movx	a,@r0
      000B36 33               [12] 3267 	rlc	a
      000B37 F2               [24] 3268 	movx	@r0,a
      000B38 08               [12] 3269 	inc	r0
      000B39 E2               [24] 3270 	movx	a,@r0
      000B3A 33               [12] 3271 	rlc	a
      000B3B F2               [24] 3272 	movx	@r0,a
      000B3C 08               [12] 3273 	inc	r0
      000B3D E2               [24] 3274 	movx	a,@r0
      000B3E 33               [12] 3275 	rlc	a
      000B3F F2               [24] 3276 	movx	@r0,a
      000B40                       3277 00103$:
                                   3278 ;	radio/radio.c:1125: band |= EZRADIOPRO_SBSEL;
      000B40 90r01r05         [24] 3279 	mov	dptr,#_set_frequency_registers_band_1_249
      000B43 E0               [24] 3280 	movx	a,@dptr
      000B44 FF               [12] 3281 	mov	r7,a
      000B45 74 40            [12] 3282 	mov	a,#0x40
      000B47 4F               [12] 3283 	orl	a,r7
      000B48 F0               [24] 3284 	movx	@dptr,a
                                   3285 ;	radio/radio.c:1126: carrier = (uint16_t)frequency;
      000B49 78r25            [12] 3286 	mov	r0,#_set_frequency_registers_frequency_1_248
      000B4B E2               [24] 3287 	movx	a,@r0
      000B4C FC               [12] 3288 	mov	r4,a
      000B4D 08               [12] 3289 	inc	r0
      000B4E E2               [24] 3290 	movx	a,@r0
      000B4F FD               [12] 3291 	mov	r5,a
                                   3292 ;	radio/radio.c:1128: register_write(EZRADIOPRO_FREQUENCY_BAND_SELECT, band);
      000B50 C0 05            [24] 3293 	push	ar5
      000B52 C0 04            [24] 3294 	push	ar4
      000B54 E0               [24] 3295 	movx	a,@dptr
      000B55 C0 E0            [24] 3296 	push	acc
      000B57 75 82 75         [24] 3297 	mov	dpl,#0x75
      000B5A 12r08r14         [24] 3298 	lcall	_register_write
      000B5D 15 81            [12] 3299 	dec	sp
      000B5F D0 04            [24] 3300 	pop	ar4
      000B61 D0 05            [24] 3301 	pop	ar5
                                   3302 ;	radio/radio.c:1129: register_write(EZRADIOPRO_NOMINAL_CARRIER_FREQUENCY_1, carrier >> 8);
      000B63 8D 07            [24] 3303 	mov	ar7,r5
      000B65 C0 05            [24] 3304 	push	ar5
      000B67 C0 04            [24] 3305 	push	ar4
      000B69 C0 07            [24] 3306 	push	ar7
      000B6B 75 82 76         [24] 3307 	mov	dpl,#0x76
      000B6E 12r08r14         [24] 3308 	lcall	_register_write
      000B71 15 81            [12] 3309 	dec	sp
      000B73 D0 04            [24] 3310 	pop	ar4
      000B75 D0 05            [24] 3311 	pop	ar5
                                   3312 ;	radio/radio.c:1130: register_write(EZRADIOPRO_NOMINAL_CARRIER_FREQUENCY_0, carrier & 0xFF);
      000B77 C0 04            [24] 3313 	push	ar4
      000B79 75 82 77         [24] 3314 	mov	dpl,#0x77
      000B7C 12r08r14         [24] 3315 	lcall	_register_write
      000B7F 15 81            [12] 3316 	dec	sp
      000B81 22               [24] 3317 	ret
                                   3318 ;------------------------------------------------------------
                                   3319 ;Allocation info for local variables in function 'radio_temperature'
                                   3320 ;------------------------------------------------------------
                                   3321 ;temp_local                Allocated to registers r4 r5 
                                   3322 ;temp_offset               Allocated to registers r6 r7 
                                   3323 ;------------------------------------------------------------
                                   3324 ;	radio/radio.c:1139: radio_temperature(void)
                                   3325 ;	-----------------------------------------
                                   3326 ;	 function radio_temperature
                                   3327 ;	-----------------------------------------
      000B82                       3328 _radio_temperature:
                                   3329 ;	radio/radio.c:1144: SFRPAGE	 = TOFF_PAGE;
      000B82 75 A7 0F         [24] 3330 	mov	_SFRPAGE,#0x0F
                                   3331 ;	radio/radio.c:1145: temp_offset = (TOFFH << 2) | (TOFFL >> 6);
      000B85 AE BE            [24] 3332 	mov	r6,_TOFFH
      000B87 E4               [12] 3333 	clr	a
      000B88 CE               [12] 3334 	xch	a,r6
      000B89 25 E0            [12] 3335 	add	a,acc
      000B8B CE               [12] 3336 	xch	a,r6
      000B8C 33               [12] 3337 	rlc	a
      000B8D CE               [12] 3338 	xch	a,r6
      000B8E 25 E0            [12] 3339 	add	a,acc
      000B90 CE               [12] 3340 	xch	a,r6
      000B91 33               [12] 3341 	rlc	a
      000B92 FF               [12] 3342 	mov	r7,a
      000B93 E5 BD            [12] 3343 	mov	a,_TOFFL
      000B95 23               [12] 3344 	rl	a
      000B96 23               [12] 3345 	rl	a
      000B97 54 03            [12] 3346 	anl	a,#0x03
      000B99 FD               [12] 3347 	mov	r5,a
      000B9A 7C 00            [12] 3348 	mov	r4,#0x00
      000B9C 42 06            [12] 3349 	orl	ar6,a
      000B9E EC               [12] 3350 	mov	a,r4
      000B9F 42 07            [12] 3351 	orl	ar7,a
                                   3352 ;	radio/radio.c:1146: SFRPAGE	 = LEGACY_PAGE;
      000BA1 75 A7 00         [24] 3353 	mov	_SFRPAGE,#0x00
                                   3354 ;	radio/radio.c:1148: AD0BUSY = 1;		// Start ADC conversion
      000BA4 D2 EC            [12] 3355 	setb	_AD0BUSY
                                   3356 ;	radio/radio.c:1149: while (AD0BUSY) ;  	// Wait for completion of conversion
      000BA6                       3357 00101$:
      000BA6 20 EC FD         [24] 3358 	jb	_AD0BUSY,00101$
                                   3359 ;	radio/radio.c:1151: temp_local = (ADC0H << 8) | ADC0L;
      000BA9 AD BE            [24] 3360 	mov	r5,_ADC0H
      000BAB 7C 00            [12] 3361 	mov	r4,#0x00
      000BAD AA BD            [24] 3362 	mov	r2,_ADC0L
      000BAF 7B 00            [12] 3363 	mov	r3,#0x00
      000BB1 EA               [12] 3364 	mov	a,r2
      000BB2 42 04            [12] 3365 	orl	ar4,a
      000BB4 EB               [12] 3366 	mov	a,r3
      000BB5 42 05            [12] 3367 	orl	ar5,a
                                   3368 ;	radio/radio.c:1152: temp_local = TEMP_OFFSET + (temp_local - temp_offset) / 2; // convert reading into degC.
      000BB7 EC               [12] 3369 	mov	a,r4
      000BB8 C3               [12] 3370 	clr	c
      000BB9 9E               [12] 3371 	subb	a,r6
      000BBA FE               [12] 3372 	mov	r6,a
      000BBB ED               [12] 3373 	mov	a,r5
      000BBC 9F               [12] 3374 	subb	a,r7
      000BBD FF               [12] 3375 	mov	r7,a
      000BBE 90r00r00         [24] 3376 	mov	dptr,#__divsint_PARM_2
      000BC1 74 02            [12] 3377 	mov	a,#0x02
      000BC3 F0               [24] 3378 	movx	@dptr,a
      000BC4 E4               [12] 3379 	clr	a
      000BC5 A3               [24] 3380 	inc	dptr
      000BC6 F0               [24] 3381 	movx	@dptr,a
      000BC7 8E 82            [24] 3382 	mov	dpl,r6
      000BC9 8F 83            [24] 3383 	mov	dph,r7
      000BCB 12r00r00         [24] 3384 	lcall	__divsint
      000BCE E5 82            [12] 3385 	mov	a,dpl
      000BD0 85 83 F0         [24] 3386 	mov	b,dph
      000BD3 24 2D            [12] 3387 	add	a,#0x2D
      000BD5 FC               [12] 3388 	mov	r4,a
      000BD6 E4               [12] 3389 	clr	a
      000BD7 35 F0            [12] 3390 	addc	a,b
                                   3391 ;	radio/radio.c:1163: return temp_local;
      000BD9 8C 82            [24] 3392 	mov	dpl,r4
      000BDB F5 83            [12] 3393 	mov	dph,a
      000BDD 22               [24] 3394 	ret
                                   3395 ;------------------------------------------------------------
                                   3396 ;Allocation info for local variables in function 'radio_set_diversity'
                                   3397 ;------------------------------------------------------------
                                   3398 ;state                     Allocated with name '_radio_set_diversity_state_1_254'
                                   3399 ;------------------------------------------------------------
                                   3400 ;	radio/radio.c:1169: radio_set_diversity(enum DIVERSITY_Enum state)
                                   3401 ;	-----------------------------------------
                                   3402 ;	 function radio_set_diversity
                                   3403 ;	-----------------------------------------
      000BDE                       3404 _radio_set_diversity:
      000BDE E5 82            [12] 3405 	mov	a,dpl
      000BE0 90r01r06         [24] 3406 	mov	dptr,#_radio_set_diversity_state_1_254
      000BE3 F0               [24] 3407 	movx	@dptr,a
                                   3408 ;	radio/radio.c:1171: switch (state) {
      000BE4 E0               [24] 3409 	movx	a,@dptr
      000BE5 FF               [12] 3410 	mov  r7,a
      000BE6 24 FC            [12] 3411 	add	a,#0xff - 0x03
      000BE8 40 68            [24] 3412 	jc	00105$
      000BEA EF               [12] 3413 	mov	a,r7
      000BEB 2F               [12] 3414 	add	a,r7
      000BEC 2F               [12] 3415 	add	a,r7
      000BED 90r0BrF1         [24] 3416 	mov	dptr,#00113$
      000BF0 73               [24] 3417 	jmp	@a+dptr
      000BF1                       3418 00113$:
      000BF1 02r0BrFD         [24] 3419 	ljmp	00101$
      000BF4 02r0Cr52         [24] 3420 	ljmp	00103$
      000BF7 02r0Cr52         [24] 3421 	ljmp	00104$
      000BFA 02r0Cr22         [24] 3422 	ljmp	00102$
                                   3423 ;	radio/radio.c:1172: case DIVERSITY_ENABLED:
      000BFD                       3424 00101$:
                                   3425 ;	radio/radio.c:1173: register_write(EZRADIOPRO_GPIO2_CONFIGURATION, 0x18);
      000BFD 74 18            [12] 3426 	mov	a,#0x18
      000BFF C0 E0            [24] 3427 	push	acc
      000C01 75 82 0D         [24] 3428 	mov	dpl,#0x0D
      000C04 12r08r14         [24] 3429 	lcall	_register_write
      000C07 15 81            [12] 3430 	dec	sp
                                   3431 ;	radio/radio.c:1175: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, (register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2) & ~EZRADIOPRO_ANTDIV_MASK) | 0x80);
      000C09 75 82 08         [24] 3432 	mov	dpl,#0x08
      000C0C 12r08r4A         [24] 3433 	lcall	_register_read
      000C0F AF 82            [24] 3434 	mov	r7,dpl
      000C11 74 1F            [12] 3435 	mov	a,#0x1F
      000C13 5F               [12] 3436 	anl	a,r7
      000C14 44 80            [12] 3437 	orl	a,#0x80
      000C16 FF               [12] 3438 	mov	r7,a
      000C17 C0 07            [24] 3439 	push	ar7
      000C19 75 82 08         [24] 3440 	mov	dpl,#0x08
      000C1C 12r08r14         [24] 3441 	lcall	_register_write
      000C1F 15 81            [12] 3442 	dec	sp
                                   3443 ;	radio/radio.c:1176: break;
                                   3444 ;	radio/radio.c:1178: case DIVERSITY_ANT2:
      000C21 22               [24] 3445 	ret
      000C22                       3446 00102$:
                                   3447 ;	radio/radio.c:1180: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, (register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2) & ~EZRADIOPRO_ANTDIV_MASK) | 0x20);
      000C22 75 82 08         [24] 3448 	mov	dpl,#0x08
      000C25 12r08r4A         [24] 3449 	lcall	_register_read
      000C28 AF 82            [24] 3450 	mov	r7,dpl
      000C2A 74 1F            [12] 3451 	mov	a,#0x1F
      000C2C 5F               [12] 3452 	anl	a,r7
      000C2D 44 20            [12] 3453 	orl	a,#0x20
      000C2F FF               [12] 3454 	mov	r7,a
      000C30 C0 07            [24] 3455 	push	ar7
      000C32 75 82 08         [24] 3456 	mov	dpl,#0x08
      000C35 12r08r14         [24] 3457 	lcall	_register_write
      000C38 15 81            [12] 3458 	dec	sp
                                   3459 ;	radio/radio.c:1182: register_write(EZRADIOPRO_GPIO2_CONFIGURATION, 0x0A);	// GPIO2 output set high fixed
      000C3A 74 0A            [12] 3460 	mov	a,#0x0A
      000C3C C0 E0            [24] 3461 	push	acc
      000C3E 75 82 0D         [24] 3462 	mov	dpl,#0x0D
      000C41 12r08r14         [24] 3463 	lcall	_register_write
      000C44 15 81            [12] 3464 	dec	sp
                                   3465 ;	radio/radio.c:1183: register_write(EZRADIOPRO_IO_PORT_CONFIGURATION, 0x00);	// GPIO2 output set low (fixed on ant 2)
      000C46 E4               [12] 3466 	clr	a
      000C47 C0 E0            [24] 3467 	push	acc
      000C49 75 82 0E         [24] 3468 	mov	dpl,#0x0E
      000C4C 12r08r14         [24] 3469 	lcall	_register_write
      000C4F 15 81            [12] 3470 	dec	sp
                                   3471 ;	radio/radio.c:1184: break;
                                   3472 ;	radio/radio.c:1186: case DIVERSITY_DISABLED:
      000C51 22               [24] 3473 	ret
      000C52                       3474 00103$:
                                   3475 ;	radio/radio.c:1187: case DIVERSITY_ANT1:
      000C52                       3476 00104$:
                                   3477 ;	radio/radio.c:1188: default:
      000C52                       3478 00105$:
                                   3479 ;	radio/radio.c:1190: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, (register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2) & ~EZRADIOPRO_ANTDIV_MASK));
      000C52 75 82 08         [24] 3480 	mov	dpl,#0x08
      000C55 12r08r4A         [24] 3481 	lcall	_register_read
      000C58 AF 82            [24] 3482 	mov	r7,dpl
      000C5A 53 07 1F         [24] 3483 	anl	ar7,#0x1F
      000C5D C0 07            [24] 3484 	push	ar7
      000C5F 75 82 08         [24] 3485 	mov	dpl,#0x08
      000C62 12r08r14         [24] 3486 	lcall	_register_write
      000C65 15 81            [12] 3487 	dec	sp
                                   3488 ;	radio/radio.c:1192: register_write(EZRADIOPRO_GPIO2_CONFIGURATION, 0x0A);	// GPIO2 output set high fixed
      000C67 74 0A            [12] 3489 	mov	a,#0x0A
      000C69 C0 E0            [24] 3490 	push	acc
      000C6B 75 82 0D         [24] 3491 	mov	dpl,#0x0D
      000C6E 12r08r14         [24] 3492 	lcall	_register_write
      000C71 15 81            [12] 3493 	dec	sp
                                   3494 ;	radio/radio.c:1193: register_write(EZRADIOPRO_IO_PORT_CONFIGURATION, 0x04);	// GPIO2 output set high (fixed on ant 1)
      000C73 74 04            [12] 3495 	mov	a,#0x04
      000C75 C0 E0            [24] 3496 	push	acc
      000C77 75 82 0E         [24] 3497 	mov	dpl,#0x0E
      000C7A 12r08r14         [24] 3498 	lcall	_register_write
      000C7D 15 81            [12] 3499 	dec	sp
                                   3500 ;	radio/radio.c:1195: }
      000C7F 22               [24] 3501 	ret
                                   3502 ;------------------------------------------------------------
                                   3503 ;Allocation info for local variables in function 'Receiver_ISR'
                                   3504 ;------------------------------------------------------------
                                   3505 ;status                    Allocated to registers r6 
                                   3506 ;status2                   Allocated to registers r7 
                                   3507 ;len                       Allocated to registers r7 
                                   3508 ;------------------------------------------------------------
                                   3509 ;	radio/radio.c:1206: INTERRUPT(Receiver_ISR, INTERRUPT_INT0)
                                   3510 ;	-----------------------------------------
                                   3511 ;	 function Receiver_ISR
                                   3512 ;	-----------------------------------------
      000C80                       3513 _Receiver_ISR:
      000C80 C0*00            [24] 3514 	push	bits
      000C82 C0 E0            [24] 3515 	push	acc
      000C84 C0 F0            [24] 3516 	push	b
      000C86 C0 82            [24] 3517 	push	dpl
      000C88 C0 83            [24] 3518 	push	dph
      000C8A C0 07            [24] 3519 	push	(0+7)
      000C8C C0 06            [24] 3520 	push	(0+6)
      000C8E C0 05            [24] 3521 	push	(0+5)
      000C90 C0 04            [24] 3522 	push	(0+4)
      000C92 C0 03            [24] 3523 	push	(0+3)
      000C94 C0 02            [24] 3524 	push	(0+2)
      000C96 C0 01            [24] 3525 	push	(0+1)
      000C98 C0 00            [24] 3526 	push	(0+0)
      000C9A C0 D0            [24] 3527 	push	psw
      000C9C 75 D0 00         [24] 3528 	mov	psw,#0x00
                                   3529 ;	radio/radio.c:1214: status2 = register_read(EZRADIOPRO_INTERRUPT_STATUS_2);
      000C9F 75 82 04         [24] 3530 	mov	dpl,#0x04
      000CA2 12r08r4A         [24] 3531 	lcall	_register_read
      000CA5 AF 82            [24] 3532 	mov	r7,dpl
                                   3533 ;	radio/radio.c:1215: status  = register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      000CA7 75 82 03         [24] 3534 	mov	dpl,#0x03
      000CAA C0 07            [24] 3535 	push	ar7
      000CAC 12r08r4A         [24] 3536 	lcall	_register_read
      000CAF AE 82            [24] 3537 	mov	r6,dpl
      000CB1 D0 07            [24] 3538 	pop	ar7
                                   3539 ;	radio/radio.c:1217: if (status & EZRADIOPRO_IRXFFAFULL) {
      000CB3 EE               [12] 3540 	mov	a,r6
      000CB4 30 E4 49         [24] 3541 	jnb	acc.4,00104$
                                   3542 ;	radio/radio.c:1218: if (RX_FIFO_THRESHOLD_HIGH + (uint16_t)partial_packet_length > MAX_PACKET_LENGTH) {
      000CB7 78r01            [12] 3543 	mov	r0,#_partial_packet_length
      000CB9 E2               [24] 3544 	movx	a,@r0
      000CBA FC               [12] 3545 	mov	r4,a
      000CBB 7D 00            [12] 3546 	mov	r5,#0x00
      000CBD 74 32            [12] 3547 	mov	a,#0x32
      000CBF 2C               [12] 3548 	add	a,r4
      000CC0 FC               [12] 3549 	mov	r4,a
      000CC1 E4               [12] 3550 	clr	a
      000CC2 3D               [12] 3551 	addc	a,r5
      000CC3 FD               [12] 3552 	mov	r5,a
      000CC4 C3               [12] 3553 	clr	c
      000CC5 74 FC            [12] 3554 	mov	a,#0xFC
      000CC7 9C               [12] 3555 	subb	a,r4
      000CC8 E4               [12] 3556 	clr	a
      000CC9 9D               [12] 3557 	subb	a,r5
      000CCA 50 03            [24] 3558 	jnc	00150$
      000CCC 02r0Dr8B         [24] 3559 	ljmp	00117$
      000CCF                       3560 00150$:
                                   3561 ;	radio/radio.c:1222: read_receive_fifo(RX_FIFO_THRESHOLD_HIGH, &radio_buffer[partial_packet_length]);
      000CCF 78r01            [12] 3562 	mov	r0,#_partial_packet_length
      000CD1 E2               [24] 3563 	movx	a,@r0
      000CD2 24r00            [12] 3564 	add	a,#_radio_buffer
      000CD4 FC               [12] 3565 	mov	r4,a
      000CD5 E4               [12] 3566 	clr	a
      000CD6 34s00            [12] 3567 	addc	a,#(_radio_buffer >> 8)
      000CD8 FD               [12] 3568 	mov	r5,a
      000CD9 C0 07            [24] 3569 	push	ar7
      000CDB C0 06            [24] 3570 	push	ar6
      000CDD C0 04            [24] 3571 	push	ar4
      000CDF C0 05            [24] 3572 	push	ar5
      000CE1 75 82 32         [24] 3573 	mov	dpl,#0x32
      000CE4 12r08r7E         [24] 3574 	lcall	_read_receive_fifo
      000CE7 15 81            [12] 3575 	dec	sp
      000CE9 15 81            [12] 3576 	dec	sp
                                   3577 ;	radio/radio.c:1223: partial_packet_length += RX_FIFO_THRESHOLD_HIGH;
      000CEB 78r01            [12] 3578 	mov	r0,#_partial_packet_length
      000CED E2               [24] 3579 	movx	a,@r0
      000CEE 24 32            [12] 3580 	add	a,#0x32
      000CF0 F2               [24] 3581 	movx	@r0,a
                                   3582 ;	radio/radio.c:1224: last_rssi = register_read(EZRADIOPRO_RECEIVED_SIGNAL_STRENGTH_INDICATOR);
      000CF1 75 82 26         [24] 3583 	mov	dpl,#0x26
      000CF4 12r08r4A         [24] 3584 	lcall	_register_read
      000CF7 E5 82            [12] 3585 	mov	a,dpl
      000CF9 D0 06            [24] 3586 	pop	ar6
      000CFB D0 07            [24] 3587 	pop	ar7
      000CFD 78r02            [12] 3588 	mov	r0,#_last_rssi
      000CFF F2               [24] 3589 	movx	@r0,a
      000D00                       3590 00104$:
                                   3591 ;	radio/radio.c:1227: if (status2 & EZRADIOPRO_IPREAVAL) {
      000D00 EF               [12] 3592 	mov	a,r7
      000D01 30 E6 11         [24] 3593 	jnb	acc.6,00106$
                                   3594 ;	radio/radio.c:1229: preamble_detected = true;
      000D04 D2*01            [12] 3595 	setb	_preamble_detected
                                   3596 ;	radio/radio.c:1232: last_rssi = register_read(EZRADIOPRO_RECEIVED_SIGNAL_STRENGTH_INDICATOR);
      000D06 75 82 26         [24] 3597 	mov	dpl,#0x26
      000D09 C0 06            [24] 3598 	push	ar6
      000D0B 12r08r4A         [24] 3599 	lcall	_register_read
      000D0E E5 82            [12] 3600 	mov	a,dpl
      000D10 D0 06            [24] 3601 	pop	ar6
      000D12 78r02            [12] 3602 	mov	r0,#_last_rssi
      000D14 F2               [24] 3603 	movx	@r0,a
      000D15                       3604 00106$:
                                   3605 ;	radio/radio.c:1235: if (feature_golay == false && (status & EZRADIOPRO_ICRCERROR)) {
      000D15 20*00 04         [24] 3606 	jb	_feature_golay,00108$
      000D18 EE               [12] 3607 	mov	a,r6
      000D19 20 E0 6F         [24] 3608 	jb	acc.0,00117$
                                   3609 ;	radio/radio.c:1236: goto rxfail;
      000D1C                       3610 00108$:
                                   3611 ;	radio/radio.c:1239: if (status & EZRADIOPRO_IPKVALID) {
      000D1C EE               [12] 3612 	mov	a,r6
      000D1D 30 E1 69         [24] 3613 	jnb	acc.1,00116$
                                   3614 ;	radio/radio.c:1240: __data uint8_t len = register_read(EZRADIOPRO_RECEIVED_PACKET_LENGTH);
      000D20 75 82 4B         [24] 3615 	mov	dpl,#0x4B
      000D23 12r08r4A         [24] 3616 	lcall	_register_read
                                   3617 ;	radio/radio.c:1241: if (len > MAX_PACKET_LENGTH || partial_packet_length > len) {
      000D26 E5 82            [12] 3618 	mov	a,dpl
      000D28 FF               [12] 3619 	mov	r7,a
      000D29 24 03            [12] 3620 	add	a,#0xff - 0xFC
      000D2B 40 5E            [24] 3621 	jc	00117$
      000D2D 78r01            [12] 3622 	mov	r0,#_partial_packet_length
      000D2F C3               [12] 3623 	clr	c
      000D30 E2               [24] 3624 	movx	a,@r0
      000D31 F5 F0            [12] 3625 	mov	b,a
      000D33 EF               [12] 3626 	mov	a,r7
      000D34 95 F0            [12] 3627 	subb	a,b
      000D36 40 53            [24] 3628 	jc	00117$
                                   3629 ;	radio/radio.c:1245: if (partial_packet_length < len) {
      000D38 78r01            [12] 3630 	mov	r0,#_partial_packet_length
      000D3A C3               [12] 3631 	clr	c
      000D3B E2               [24] 3632 	movx	a,@r0
      000D3C 9F               [12] 3633 	subb	a,r7
      000D3D 50 22            [24] 3634 	jnc	00114$
                                   3635 ;	radio/radio.c:1246: read_receive_fifo(len-partial_packet_length, &radio_buffer[partial_packet_length]);
      000D3F 78r01            [12] 3636 	mov	r0,#_partial_packet_length
      000D41 E2               [24] 3637 	movx	a,@r0
      000D42 24r00            [12] 3638 	add	a,#_radio_buffer
      000D44 FD               [12] 3639 	mov	r5,a
      000D45 E4               [12] 3640 	clr	a
      000D46 34s00            [12] 3641 	addc	a,#(_radio_buffer >> 8)
      000D48 FE               [12] 3642 	mov	r6,a
      000D49 78r01            [12] 3643 	mov	r0,#_partial_packet_length
      000D4B D3               [12] 3644 	setb	c
      000D4C E2               [24] 3645 	movx	a,@r0
      000D4D 9F               [12] 3646 	subb	a,r7
      000D4E F4               [12] 3647 	cpl	a
      000D4F FC               [12] 3648 	mov	r4,a
      000D50 C0 07            [24] 3649 	push	ar7
      000D52 C0 05            [24] 3650 	push	ar5
      000D54 C0 06            [24] 3651 	push	ar6
      000D56 8C 82            [24] 3652 	mov	dpl,r4
      000D58 12r08r7E         [24] 3653 	lcall	_read_receive_fifo
      000D5B 15 81            [12] 3654 	dec	sp
      000D5D 15 81            [12] 3655 	dec	sp
      000D5F D0 07            [24] 3656 	pop	ar7
      000D61                       3657 00114$:
                                   3658 ;	radio/radio.c:1248: receive_packet_length = len;
      000D61 78r00            [12] 3659 	mov	r0,#_receive_packet_length
      000D63 EF               [12] 3660 	mov	a,r7
      000D64 F2               [24] 3661 	movx	@r0,a
                                   3662 ;	radio/radio.c:1251: packet_received = true;
      000D65 D2*00            [12] 3663 	setb	_packet_received
                                   3664 ;	radio/radio.c:1254: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      000D67 E4               [12] 3665 	clr	a
      000D68 C0 E0            [24] 3666 	push	acc
      000D6A 75 82 05         [24] 3667 	mov	dpl,#0x05
      000D6D 12r08r14         [24] 3668 	lcall	_register_write
      000D70 15 81            [12] 3669 	dec	sp
                                   3670 ;	radio/radio.c:1255: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0);
      000D72 E4               [12] 3671 	clr	a
      000D73 C0 E0            [24] 3672 	push	acc
      000D75 75 82 06         [24] 3673 	mov	dpl,#0x06
      000D78 12r08r14         [24] 3674 	lcall	_register_write
      000D7B 15 81            [12] 3675 	dec	sp
                                   3676 ;	radio/radio.c:1258: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, EZRADIOPRO_PLLON);
      000D7D 74 02            [12] 3677 	mov	a,#0x02
      000D7F C0 E0            [24] 3678 	push	acc
      000D81 75 82 07         [24] 3679 	mov	dpl,#0x07
      000D84 12r08r14         [24] 3680 	lcall	_register_write
      000D87 15 81            [12] 3681 	dec	sp
      000D89                       3682 00116$:
                                   3683 ;	radio/radio.c:1263: return;
                                   3684 ;	radio/radio.c:1265: rxfail:
      000D89 80 1E            [24] 3685 	sjmp	00120$
      000D8B                       3686 00117$:
                                   3687 ;	radio/radio.c:1266: if (errors.rx_errors != 0xFFFF) {
      000D8B 78r00            [12] 3688 	mov	r0,#_errors
      000D8D E2               [24] 3689 	movx	a,@r0
      000D8E FE               [12] 3690 	mov	r6,a
      000D8F 08               [12] 3691 	inc	r0
      000D90 E2               [24] 3692 	movx	a,@r0
      000D91 FF               [12] 3693 	mov	r7,a
      000D92 BE FF 05         [24] 3694 	cjne	r6,#0xFF,00158$
      000D95 BF FF 02         [24] 3695 	cjne	r7,#0xFF,00158$
      000D98 80 0C            [24] 3696 	sjmp	00119$
      000D9A                       3697 00158$:
                                   3698 ;	radio/radio.c:1267: errors.rx_errors++;
      000D9A 0E               [12] 3699 	inc	r6
      000D9B BE 00 01         [24] 3700 	cjne	r6,#0x00,00159$
      000D9E 0F               [12] 3701 	inc	r7
      000D9F                       3702 00159$:
      000D9F 78r00            [12] 3703 	mov	r0,#_errors
      000DA1 EE               [12] 3704 	mov	a,r6
      000DA2 F2               [24] 3705 	movx	@r0,a
      000DA3 08               [12] 3706 	inc	r0
      000DA4 EF               [12] 3707 	mov	a,r7
      000DA5 F2               [24] 3708 	movx	@r0,a
      000DA6                       3709 00119$:
                                   3710 ;	radio/radio.c:1269: radio_receiver_on();
      000DA6 12r03r75         [24] 3711 	lcall	_radio_receiver_on
      000DA9                       3712 00120$:
      000DA9 D0 D0            [24] 3713 	pop	psw
      000DAB D0 00            [24] 3714 	pop	(0+0)
      000DAD D0 01            [24] 3715 	pop	(0+1)
      000DAF D0 02            [24] 3716 	pop	(0+2)
      000DB1 D0 03            [24] 3717 	pop	(0+3)
      000DB3 D0 04            [24] 3718 	pop	(0+4)
      000DB5 D0 05            [24] 3719 	pop	(0+5)
      000DB7 D0 06            [24] 3720 	pop	(0+6)
      000DB9 D0 07            [24] 3721 	pop	(0+7)
      000DBB D0 83            [24] 3722 	pop	dph
      000DBD D0 82            [24] 3723 	pop	dpl
      000DBF D0 F0            [24] 3724 	pop	b
      000DC1 D0 E0            [24] 3725 	pop	acc
      000DC3 D0*00            [24] 3726 	pop	bits
      000DC5 32               [24] 3727 	reti
                                   3728 	.area CSEG    (CODE)
                                   3729 	.area CONST   (CODE)
      000000                       3730 ___str_0:
      000000 6F 76 65 72 73 69 7A  3731 	.ascii "oversized packet"
             65 64 20 70 61 63 6B
             65 74
      000010 00                    3732 	.db 0x00
      000011                       3733 _reg_index:
      000011 1C                    3734 	.db #0x1C	; 28
      000012 1F                    3735 	.db #0x1F	; 31
      000013 20                    3736 	.db #0x20	; 32
      000014 21                    3737 	.db #0x21	; 33
      000015 22                    3738 	.db #0x22	; 34
      000016 23                    3739 	.db #0x23	; 35
      000017 24                    3740 	.db #0x24	; 36
      000018 25                    3741 	.db #0x25	; 37
      000019 2A                    3742 	.db #0x2A	; 42
      00001A 6E                    3743 	.db #0x6E	; 110	'n'
      00001B 6F                    3744 	.db #0x6F	; 111	'o'
      00001C 72                    3745 	.db #0x72	; 114	'r'
      00001D                       3746 _air_data_rates:
      00001D 02                    3747 	.db #0x02	; 2
      00001E 04                    3748 	.db #0x04	; 4
      00001F 08                    3749 	.db #0x08	; 8
      000020 10                    3750 	.db #0x10	; 16
      000021 13                    3751 	.db #0x13	; 19
      000022 18                    3752 	.db #0x18	; 24
      000023 20                    3753 	.db #0x20	; 32
      000024 30                    3754 	.db #0x30	; 48	'0'
      000025 40                    3755 	.db #0x40	; 64
      000026 60                    3756 	.db #0x60	; 96
      000027 80                    3757 	.db #0x80	; 128
      000028 C0                    3758 	.db #0xC0	; 192
      000029 FA                    3759 	.db #0xFA	; 250
      00002A                       3760 _reg_table_433:
      00002A 27                    3761 	.db #0x27	; 39
      00002B 27                    3762 	.db #0x27	; 39
      00002C 27                    3763 	.db #0x27	; 39
      00002D 2E                    3764 	.db #0x2E	; 46
      00002E 16                    3765 	.db #0x16	; 22
      00002F 01                    3766 	.db #0x01	; 1
      000030 05                    3767 	.db #0x05	; 5
      000031 0B                    3768 	.db #0x0B	; 11
      000032 9A                    3769 	.db #0x9A	; 154
      000033 88                    3770 	.db #0x88	; 136
      000034 8A                    3771 	.db #0x8A	; 138
      000035 8C                    3772 	.db #0x8C	; 140
      000036 8D                    3773 	.db #0x8D	; 141
      000037 03                    3774 	.db #0x03	; 3
      000038 03                    3775 	.db #0x03	; 3
      000039 03                    3776 	.db #0x03	; 3
      00003A 03                    3777 	.db #0x03	; 3
      00003B 03                    3778 	.db #0x03	; 3
      00003C 03                    3779 	.db #0x03	; 3
      00003D 03                    3780 	.db #0x03	; 3
      00003E 03                    3781 	.db #0x03	; 3
      00003F 03                    3782 	.db #0x03	; 3
      000040 03                    3783 	.db #0x03	; 3
      000041 03                    3784 	.db #0x03	; 3
      000042 03                    3785 	.db #0x03	; 3
      000043 03                    3786 	.db #0x03	; 3
      000044 F4                    3787 	.db #0xF4	; 244
      000045 FA                    3788 	.db #0xFA	; 250
      000046 7D                    3789 	.db #0x7D	; 125
      000047 3F                    3790 	.db #0x3F	; 63
      000048 69                    3791 	.db #0x69	; 105	'i'
      000049 A7                    3792 	.db #0xA7	; 167
      00004A 7D                    3793 	.db #0x7D	; 125
      00004B 53                    3794 	.db #0x53	; 83	'S'
      00004C 5E                    3795 	.db #0x5E	; 94
      00004D 7D                    3796 	.db #0x7D	; 125
      00004E 5E                    3797 	.db #0x5E	; 94
      00004F 3F                    3798 	.db #0x3F	; 63
      000050 30                    3799 	.db #0x30	; 48	'0'
      000051 20                    3800 	.db #0x20	; 32
      000052 00                    3801 	.db #0x00	; 0
      000053 01                    3802 	.db #0x01	; 1
      000054 02                    3803 	.db #0x02	; 2
      000055 01                    3804 	.db #0x01	; 1
      000056 00                    3805 	.db #0x00	; 0
      000057 01                    3806 	.db #0x01	; 1
      000058 01                    3807 	.db #0x01	; 1
      000059 01                    3808 	.db #0x01	; 1
      00005A 01                    3809 	.db #0x01	; 1
      00005B 01                    3810 	.db #0x01	; 1
      00005C 02                    3811 	.db #0x02	; 2
      00005D 02                    3812 	.db #0x02	; 2
      00005E 41                    3813 	.db #0x41	; 65	'A'
      00005F 83                    3814 	.db #0x83	; 131
      000060 06                    3815 	.db #0x06	; 6
      000061 0C                    3816 	.db #0x0C	; 12
      000062 37                    3817 	.db #0x37	; 55	'7'
      000063 C4                    3818 	.db #0xC4	; 196
      000064 06                    3819 	.db #0x06	; 6
      000065 89                    3820 	.db #0x89	; 137
      000066 5D                    3821 	.db #0x5D	; 93
      000067 06                    3822 	.db #0x06	; 6
      000068 5D                    3823 	.db #0x5D	; 93
      000069 0C                    3824 	.db #0x0C	; 12
      00006A AA                    3825 	.db #0xAA	; 170
      00006B 89                    3826 	.db #0x89	; 137
      00006C 12                    3827 	.db #0x12	; 18
      00006D 25                    3828 	.db #0x25	; 37
      00006E 4A                    3829 	.db #0x4A	; 74	'J'
      00006F 4C                    3830 	.db #0x4C	; 76	'L'
      000070 9C                    3831 	.db #0x9C	; 156
      000071 25                    3832 	.db #0x25	; 37
      000072 37                    3833 	.db #0x37	; 55	'7'
      000073 86                    3834 	.db #0x86	; 134
      000074 25                    3835 	.db #0x25	; 37
      000075 86                    3836 	.db #0x86	; 134
      000076 4A                    3837 	.db #0x4A	; 74	'J'
      000077 AB                    3838 	.db #0xAB	; 171
      000078 00                    3839 	.db #0x00	; 0
      000079 01                    3840 	.db #0x01	; 1
      00007A 02                    3841 	.db #0x02	; 2
      00007B 04                    3842 	.db #0x04	; 4
      00007C 02                    3843 	.db #0x02	; 2
      00007D 01                    3844 	.db #0x01	; 1
      00007E 02                    3845 	.db #0x02	; 2
      00007F 03                    3846 	.db #0x03	; 3
      000080 02                    3847 	.db #0x02	; 2
      000081 02                    3848 	.db #0x02	; 2
      000082 02                    3849 	.db #0x02	; 2
      000083 04                    3850 	.db #0x04	; 4
      000084 07                    3851 	.db #0x07	; 7
      000085 85                    3852 	.db #0x85	; 133
      000086 08                    3853 	.db #0x08	; 8
      000087 0E                    3854 	.db #0x0E	; 14
      000088 12                    3855 	.db #0x12	; 18
      000089 72                    3856 	.db #0x72	; 114	'r'
      00008A 8A                    3857 	.db #0x8A	; 138
      00008B 0E                    3858 	.db #0x0E	; 14
      00008C 18                    3859 	.db #0x18	; 24
      00008D BB                    3860 	.db #0xBB	; 187
      00008E 0E                    3861 	.db #0x0E	; 14
      00008F BB                    3862 	.db #0xBB	; 187
      000090 EA                    3863 	.db #0xEA	; 234
      000091 FF                    3864 	.db #0xFF	; 255
      000092 1D                    3865 	.db #0x1D	; 29
      000093 1D                    3866 	.db #0x1D	; 29
      000094 1D                    3867 	.db #0x1D	; 29
      000095 1E                    3868 	.db #0x1E	; 30
      000096 1E                    3869 	.db #0x1E	; 30
      000097 1E                    3870 	.db #0x1E	; 30
      000098 20                    3871 	.db #0x20	; 32
      000099 30                    3872 	.db #0x30	; 48	'0'
      00009A 41                    3873 	.db #0x41	; 65	'A'
      00009B 50                    3874 	.db #0x50	; 80	'P'
      00009C 50                    3875 	.db #0x50	; 80	'P'
      00009D 50                    3876 	.db #0x50	; 80	'P'
      00009E 50                    3877 	.db #0x50	; 80	'P'
      00009F 10                    3878 	.db #0x10	; 16
      0000A0 20                    3879 	.db #0x20	; 32
      0000A1 41                    3880 	.db #0x41	; 65	'A'
      0000A2 83                    3881 	.db #0x83	; 131
      0000A3 9B                    3882 	.db #0x9B	; 155
      0000A4 C4                    3883 	.db #0xC4	; 196
      0000A5 08                    3884 	.db #0x08	; 8
      0000A6 0C                    3885 	.db #0x0C	; 12
      0000A7 10                    3886 	.db #0x10	; 16
      0000A8 18                    3887 	.db #0x18	; 24
      0000A9 20                    3888 	.db #0x20	; 32
      0000AA 31                    3889 	.db #0x31	; 49	'1'
      0000AB 40                    3890 	.db #0x40	; 64
      0000AC 62                    3891 	.db #0x62	; 98	'b'
      0000AD C5                    3892 	.db #0xC5	; 197
      0000AE 89                    3893 	.db #0x89	; 137
      0000AF 12                    3894 	.db #0x12	; 18
      0000B0 A6                    3895 	.db #0xA6	; 166
      0000B1 9C                    3896 	.db #0x9C	; 156
      0000B2 31                    3897 	.db #0x31	; 49	'1'
      0000B3 4A                    3898 	.db #0x4A	; 74	'J'
      0000B4 62                    3899 	.db #0x62	; 98	'b'
      0000B5 93                    3900 	.db #0x93	; 147
      0000B6 C5                    3901 	.db #0xC5	; 197
      0000B7 27                    3902 	.db #0x27	; 39
      0000B8 00                    3903 	.db #0x00	; 0
      0000B9 03                    3904 	.db #0x03	; 3
      0000BA 06                    3905 	.db #0x06	; 6
      0000BB 0D                    3906 	.db #0x0D	; 13
      0000BC 1A                    3907 	.db #0x1A	; 26
      0000BD 1E                    3908 	.db #0x1E	; 30
      0000BE 26                    3909 	.db #0x26	; 38
      0000BF 33                    3910 	.db #0x33	; 51	'3'
      0000C0 4D                    3911 	.db #0x4D	; 77	'M'
      0000C1 66                    3912 	.db #0x66	; 102	'f'
      0000C2 9A                    3913 	.db #0x9A	; 154
      0000C3 CD                    3914 	.db #0xCD	; 205
      0000C4 FE                    3915 	.db #0xFE	; 254
      0000C5 FE                    3916 	.db #0xFE	; 254
      0000C6                       3917 _reg_table_470:
      0000C6 2B                    3918 	.db #0x2B	; 43
      0000C7 2B                    3919 	.db #0x2B	; 43
      0000C8 2B                    3920 	.db #0x2B	; 43
      0000C9 2E                    3921 	.db #0x2E	; 46
      0000CA 16                    3922 	.db #0x16	; 22
      0000CB 01                    3923 	.db #0x01	; 1
      0000CC 05                    3924 	.db #0x05	; 5
      0000CD 0B                    3925 	.db #0x0B	; 11
      0000CE 9A                    3926 	.db #0x9A	; 154
      0000CF 88                    3927 	.db #0x88	; 136
      0000D0 8A                    3928 	.db #0x8A	; 138
      0000D1 8C                    3929 	.db #0x8C	; 140
      0000D2 8D                    3930 	.db #0x8D	; 141
      0000D3 03                    3931 	.db #0x03	; 3
      0000D4 03                    3932 	.db #0x03	; 3
      0000D5 03                    3933 	.db #0x03	; 3
      0000D6 03                    3934 	.db #0x03	; 3
      0000D7 03                    3935 	.db #0x03	; 3
      0000D8 03                    3936 	.db #0x03	; 3
      0000D9 03                    3937 	.db #0x03	; 3
      0000DA 03                    3938 	.db #0x03	; 3
      0000DB 03                    3939 	.db #0x03	; 3
      0000DC 03                    3940 	.db #0x03	; 3
      0000DD 03                    3941 	.db #0x03	; 3
      0000DE 03                    3942 	.db #0x03	; 3
      0000DF 03                    3943 	.db #0x03	; 3
      0000E0 F4                    3944 	.db #0xF4	; 244
      0000E1 FA                    3945 	.db #0xFA	; 250
      0000E2 7D                    3946 	.db #0x7D	; 125
      0000E3 3F                    3947 	.db #0x3F	; 63
      0000E4 69                    3948 	.db #0x69	; 105	'i'
      0000E5 A7                    3949 	.db #0xA7	; 167
      0000E6 7D                    3950 	.db #0x7D	; 125
      0000E7 53                    3951 	.db #0x53	; 83	'S'
      0000E8 5E                    3952 	.db #0x5E	; 94
      0000E9 7D                    3953 	.db #0x7D	; 125
      0000EA 5E                    3954 	.db #0x5E	; 94
      0000EB 3F                    3955 	.db #0x3F	; 63
      0000EC 30                    3956 	.db #0x30	; 48	'0'
      0000ED 20                    3957 	.db #0x20	; 32
      0000EE 00                    3958 	.db #0x00	; 0
      0000EF 01                    3959 	.db #0x01	; 1
      0000F0 02                    3960 	.db #0x02	; 2
      0000F1 01                    3961 	.db #0x01	; 1
      0000F2 00                    3962 	.db #0x00	; 0
      0000F3 01                    3963 	.db #0x01	; 1
      0000F4 01                    3964 	.db #0x01	; 1
      0000F5 01                    3965 	.db #0x01	; 1
      0000F6 01                    3966 	.db #0x01	; 1
      0000F7 01                    3967 	.db #0x01	; 1
      0000F8 02                    3968 	.db #0x02	; 2
      0000F9 02                    3969 	.db #0x02	; 2
      0000FA 41                    3970 	.db #0x41	; 65	'A'
      0000FB 83                    3971 	.db #0x83	; 131
      0000FC 06                    3972 	.db #0x06	; 6
      0000FD 0C                    3973 	.db #0x0C	; 12
      0000FE 37                    3974 	.db #0x37	; 55	'7'
      0000FF C4                    3975 	.db #0xC4	; 196
      000100 06                    3976 	.db #0x06	; 6
      000101 89                    3977 	.db #0x89	; 137
      000102 5D                    3978 	.db #0x5D	; 93
      000103 06                    3979 	.db #0x06	; 6
      000104 5D                    3980 	.db #0x5D	; 93
      000105 0C                    3981 	.db #0x0C	; 12
      000106 AA                    3982 	.db #0xAA	; 170
      000107 89                    3983 	.db #0x89	; 137
      000108 12                    3984 	.db #0x12	; 18
      000109 25                    3985 	.db #0x25	; 37
      00010A 4A                    3986 	.db #0x4A	; 74	'J'
      00010B 4C                    3987 	.db #0x4C	; 76	'L'
      00010C 9C                    3988 	.db #0x9C	; 156
      00010D 25                    3989 	.db #0x25	; 37
      00010E 37                    3990 	.db #0x37	; 55	'7'
      00010F 86                    3991 	.db #0x86	; 134
      000110 25                    3992 	.db #0x25	; 37
      000111 86                    3993 	.db #0x86	; 134
      000112 4A                    3994 	.db #0x4A	; 74	'J'
      000113 AB                    3995 	.db #0xAB	; 171
      000114 00                    3996 	.db #0x00	; 0
      000115 01                    3997 	.db #0x01	; 1
      000116 02                    3998 	.db #0x02	; 2
      000117 04                    3999 	.db #0x04	; 4
      000118 02                    4000 	.db #0x02	; 2
      000119 01                    4001 	.db #0x01	; 1
      00011A 02                    4002 	.db #0x02	; 2
      00011B 03                    4003 	.db #0x03	; 3
      00011C 02                    4004 	.db #0x02	; 2
      00011D 02                    4005 	.db #0x02	; 2
      00011E 02                    4006 	.db #0x02	; 2
      00011F 04                    4007 	.db #0x04	; 4
      000120 07                    4008 	.db #0x07	; 7
      000121 85                    4009 	.db #0x85	; 133
      000122 08                    4010 	.db #0x08	; 8
      000123 0E                    4011 	.db #0x0E	; 14
      000124 12                    4012 	.db #0x12	; 18
      000125 72                    4013 	.db #0x72	; 114	'r'
      000126 8A                    4014 	.db #0x8A	; 138
      000127 0E                    4015 	.db #0x0E	; 14
      000128 18                    4016 	.db #0x18	; 24
      000129 BB                    4017 	.db #0xBB	; 187
      00012A 0E                    4018 	.db #0x0E	; 14
      00012B BB                    4019 	.db #0xBB	; 187
      00012C EA                    4020 	.db #0xEA	; 234
      00012D FF                    4021 	.db #0xFF	; 255
      00012E 1E                    4022 	.db #0x1E	; 30
      00012F 1E                    4023 	.db #0x1E	; 30
      000130 1E                    4024 	.db #0x1E	; 30
      000131 21                    4025 	.db #0x21	; 33
      000132 21                    4026 	.db #0x21	; 33
      000133 21                    4027 	.db #0x21	; 33
      000134 21                    4028 	.db #0x21	; 33
      000135 30                    4029 	.db #0x30	; 48	'0'
      000136 41                    4030 	.db #0x41	; 65	'A'
      000137 50                    4031 	.db #0x50	; 80	'P'
      000138 50                    4032 	.db #0x50	; 80	'P'
      000139 50                    4033 	.db #0x50	; 80	'P'
      00013A 50                    4034 	.db #0x50	; 80	'P'
      00013B 10                    4035 	.db #0x10	; 16
      00013C 20                    4036 	.db #0x20	; 32
      00013D 41                    4037 	.db #0x41	; 65	'A'
      00013E 83                    4038 	.db #0x83	; 131
      00013F 9B                    4039 	.db #0x9B	; 155
      000140 C4                    4040 	.db #0xC4	; 196
      000141 08                    4041 	.db #0x08	; 8
      000142 0C                    4042 	.db #0x0C	; 12
      000143 10                    4043 	.db #0x10	; 16
      000144 18                    4044 	.db #0x18	; 24
      000145 20                    4045 	.db #0x20	; 32
      000146 31                    4046 	.db #0x31	; 49	'1'
      000147 40                    4047 	.db #0x40	; 64
      000148 62                    4048 	.db #0x62	; 98	'b'
      000149 C5                    4049 	.db #0xC5	; 197
      00014A 89                    4050 	.db #0x89	; 137
      00014B 12                    4051 	.db #0x12	; 18
      00014C A6                    4052 	.db #0xA6	; 166
      00014D 9C                    4053 	.db #0x9C	; 156
      00014E 31                    4054 	.db #0x31	; 49	'1'
      00014F 4A                    4055 	.db #0x4A	; 74	'J'
      000150 62                    4056 	.db #0x62	; 98	'b'
      000151 93                    4057 	.db #0x93	; 147
      000152 C5                    4058 	.db #0xC5	; 197
      000153 27                    4059 	.db #0x27	; 39
      000154 00                    4060 	.db #0x00	; 0
      000155 03                    4061 	.db #0x03	; 3
      000156 06                    4062 	.db #0x06	; 6
      000157 0D                    4063 	.db #0x0D	; 13
      000158 1A                    4064 	.db #0x1A	; 26
      000159 1E                    4065 	.db #0x1E	; 30
      00015A 26                    4066 	.db #0x26	; 38
      00015B 33                    4067 	.db #0x33	; 51	'3'
      00015C 4D                    4068 	.db #0x4D	; 77	'M'
      00015D 66                    4069 	.db #0x66	; 102	'f'
      00015E 9A                    4070 	.db #0x9A	; 154
      00015F CD                    4071 	.db #0xCD	; 205
      000160 FE                    4072 	.db #0xFE	; 254
      000161 FE                    4073 	.db #0xFE	; 254
      000162                       4074 _reg_table_868:
      000162 01                    4075 	.db #0x01	; 1
      000163 01                    4076 	.db #0x01	; 1
      000164 01                    4077 	.db #0x01	; 1
      000165 01                    4078 	.db #0x01	; 1
      000166 01                    4079 	.db #0x01	; 1
      000167 01                    4080 	.db #0x01	; 1
      000168 05                    4081 	.db #0x05	; 5
      000169 0B                    4082 	.db #0x0B	; 11
      00016A 9A                    4083 	.db #0x9A	; 154
      00016B 88                    4084 	.db #0x88	; 136
      00016C 8A                    4085 	.db #0x8A	; 138
      00016D 8C                    4086 	.db #0x8C	; 140
      00016E 8D                    4087 	.db #0x8D	; 141
      00016F 03                    4088 	.db #0x03	; 3
      000170 03                    4089 	.db #0x03	; 3
      000171 03                    4090 	.db #0x03	; 3
      000172 03                    4091 	.db #0x03	; 3
      000173 03                    4092 	.db #0x03	; 3
      000174 03                    4093 	.db #0x03	; 3
      000175 03                    4094 	.db #0x03	; 3
      000176 03                    4095 	.db #0x03	; 3
      000177 03                    4096 	.db #0x03	; 3
      000178 03                    4097 	.db #0x03	; 3
      000179 03                    4098 	.db #0x03	; 3
      00017A 03                    4099 	.db #0x03	; 3
      00017B 03                    4100 	.db #0x03	; 3
      00017C D0                    4101 	.db #0xD0	; 208
      00017D E8                    4102 	.db #0xE8	; 232
      00017E F4                    4103 	.db #0xF4	; 244
      00017F FA                    4104 	.db #0xFA	; 250
      000180 D3                    4105 	.db #0xD3	; 211
      000181 A7                    4106 	.db #0xA7	; 167
      000182 7D                    4107 	.db #0x7D	; 125
      000183 53                    4108 	.db #0x53	; 83	'S'
      000184 5E                    4109 	.db #0x5E	; 94
      000185 7D                    4110 	.db #0x7D	; 125
      000186 5E                    4111 	.db #0x5E	; 94
      000187 3F                    4112 	.db #0x3F	; 63
      000188 30                    4113 	.db #0x30	; 48	'0'
      000189 E0                    4114 	.db #0xE0	; 224
      00018A 60                    4115 	.db #0x60	; 96
      00018B 20                    4116 	.db #0x20	; 32
      00018C 00                    4117 	.db #0x00	; 0
      00018D 00                    4118 	.db #0x00	; 0
      00018E 00                    4119 	.db #0x00	; 0
      00018F 01                    4120 	.db #0x01	; 1
      000190 01                    4121 	.db #0x01	; 1
      000191 01                    4122 	.db #0x01	; 1
      000192 01                    4123 	.db #0x01	; 1
      000193 01                    4124 	.db #0x01	; 1
      000194 02                    4125 	.db #0x02	; 2
      000195 02                    4126 	.db #0x02	; 2
      000196 10                    4127 	.db #0x10	; 16
      000197 20                    4128 	.db #0x20	; 32
      000198 41                    4129 	.db #0x41	; 65	'A'
      000199 83                    4130 	.db #0x83	; 131
      00019A 9B                    4131 	.db #0x9B	; 155
      00019B C4                    4132 	.db #0xC4	; 196
      00019C 06                    4133 	.db #0x06	; 6
      00019D 89                    4134 	.db #0x89	; 137
      00019E 5D                    4135 	.db #0x5D	; 93
      00019F 06                    4136 	.db #0x06	; 6
      0001A0 5D                    4137 	.db #0x5D	; 93
      0001A1 0C                    4138 	.db #0x0C	; 12
      0001A2 AA                    4139 	.db #0xAA	; 170
      0001A3 62                    4140 	.db #0x62	; 98	'b'
      0001A4 C5                    4141 	.db #0xC5	; 197
      0001A5 89                    4142 	.db #0x89	; 137
      0001A6 12                    4143 	.db #0x12	; 18
      0001A7 A6                    4144 	.db #0xA6	; 166
      0001A8 9C                    4145 	.db #0x9C	; 156
      0001A9 25                    4146 	.db #0x25	; 37
      0001AA 37                    4147 	.db #0x37	; 55	'7'
      0001AB 86                    4148 	.db #0x86	; 134
      0001AC 25                    4149 	.db #0x25	; 37
      0001AD 86                    4150 	.db #0x86	; 134
      0001AE 4A                    4151 	.db #0x4A	; 74	'J'
      0001AF AB                    4152 	.db #0xAB	; 171
      0001B0 00                    4153 	.db #0x00	; 0
      0001B1 00                    4154 	.db #0x00	; 0
      0001B2 00                    4155 	.db #0x00	; 0
      0001B3 01                    4156 	.db #0x01	; 1
      0001B4 01                    4157 	.db #0x01	; 1
      0001B5 01                    4158 	.db #0x01	; 1
      0001B6 02                    4159 	.db #0x02	; 2
      0001B7 03                    4160 	.db #0x03	; 3
      0001B8 02                    4161 	.db #0x02	; 2
      0001B9 02                    4162 	.db #0x02	; 2
      0001BA 02                    4163 	.db #0x02	; 2
      0001BB 04                    4164 	.db #0x04	; 4
      0001BC 07                    4165 	.db #0x07	; 7
      0001BD 23                    4166 	.db #0x23	; 35
      0001BE 44                    4167 	.db #0x44	; 68	'D'
      0001BF 85                    4168 	.db #0x85	; 133
      0001C0 08                    4169 	.db #0x08	; 8
      0001C1 39                    4170 	.db #0x39	; 57	'9'
      0001C2 8A                    4171 	.db #0x8A	; 138
      0001C3 0E                    4172 	.db #0x0E	; 14
      0001C4 18                    4173 	.db #0x18	; 24
      0001C5 BB                    4174 	.db #0xBB	; 187
      0001C6 0E                    4175 	.db #0x0E	; 14
      0001C7 BB                    4176 	.db #0xBB	; 187
      0001C8 EA                    4177 	.db #0xEA	; 234
      0001C9 FF                    4178 	.db #0xFF	; 255
      0001CA 1C                    4179 	.db #0x1C	; 28
      0001CB 1C                    4180 	.db #0x1C	; 28
      0001CC 1C                    4181 	.db #0x1C	; 28
      0001CD 1C                    4182 	.db #0x1C	; 28
      0001CE 1C                    4183 	.db #0x1C	; 28
      0001CF 1E                    4184 	.db #0x1E	; 30
      0001D0 20                    4185 	.db #0x20	; 32
      0001D1 30                    4186 	.db #0x30	; 48	'0'
      0001D2 41                    4187 	.db #0x41	; 65	'A'
      0001D3 50                    4188 	.db #0x50	; 80	'P'
      0001D4 50                    4189 	.db #0x50	; 80	'P'
      0001D5 50                    4190 	.db #0x50	; 80	'P'
      0001D6 50                    4191 	.db #0x50	; 80	'P'
      0001D7 10                    4192 	.db #0x10	; 16
      0001D8 20                    4193 	.db #0x20	; 32
      0001D9 41                    4194 	.db #0x41	; 65	'A'
      0001DA 83                    4195 	.db #0x83	; 131
      0001DB 9B                    4196 	.db #0x9B	; 155
      0001DC C4                    4197 	.db #0xC4	; 196
      0001DD 08                    4198 	.db #0x08	; 8
      0001DE 0C                    4199 	.db #0x0C	; 12
      0001DF 10                    4200 	.db #0x10	; 16
      0001E0 18                    4201 	.db #0x18	; 24
      0001E1 20                    4202 	.db #0x20	; 32
      0001E2 31                    4203 	.db #0x31	; 49	'1'
      0001E3 40                    4204 	.db #0x40	; 64
      0001E4 62                    4205 	.db #0x62	; 98	'b'
      0001E5 C5                    4206 	.db #0xC5	; 197
      0001E6 89                    4207 	.db #0x89	; 137
      0001E7 12                    4208 	.db #0x12	; 18
      0001E8 A6                    4209 	.db #0xA6	; 166
      0001E9 9C                    4210 	.db #0x9C	; 156
      0001EA 31                    4211 	.db #0x31	; 49	'1'
      0001EB 4A                    4212 	.db #0x4A	; 74	'J'
      0001EC 62                    4213 	.db #0x62	; 98	'b'
      0001ED 93                    4214 	.db #0x93	; 147
      0001EE C5                    4215 	.db #0xC5	; 197
      0001EF 27                    4216 	.db #0x27	; 39
      0001F0 00                    4217 	.db #0x00	; 0
      0001F1 03                    4218 	.db #0x03	; 3
      0001F2 06                    4219 	.db #0x06	; 6
      0001F3 0D                    4220 	.db #0x0D	; 13
      0001F4 1A                    4221 	.db #0x1A	; 26
      0001F5 1E                    4222 	.db #0x1E	; 30
      0001F6 26                    4223 	.db #0x26	; 38
      0001F7 33                    4224 	.db #0x33	; 51	'3'
      0001F8 4D                    4225 	.db #0x4D	; 77	'M'
      0001F9 66                    4226 	.db #0x66	; 102	'f'
      0001FA 9A                    4227 	.db #0x9A	; 154
      0001FB CD                    4228 	.db #0xCD	; 205
      0001FC FE                    4229 	.db #0xFE	; 254
      0001FD FE                    4230 	.db #0xFE	; 254
      0001FE                       4231 _reg_table_915:
      0001FE 01                    4232 	.db #0x01	; 1
      0001FF 01                    4233 	.db #0x01	; 1
      000200 01                    4234 	.db #0x01	; 1
      000201 01                    4235 	.db #0x01	; 1
      000202 01                    4236 	.db #0x01	; 1
      000203 01                    4237 	.db #0x01	; 1
      000204 05                    4238 	.db #0x05	; 5
      000205 0B                    4239 	.db #0x0B	; 11
      000206 9A                    4240 	.db #0x9A	; 154
      000207 88                    4241 	.db #0x88	; 136
      000208 8A                    4242 	.db #0x8A	; 138
      000209 8C                    4243 	.db #0x8C	; 140
      00020A 8D                    4244 	.db #0x8D	; 141
      00020B 03                    4245 	.db #0x03	; 3
      00020C 03                    4246 	.db #0x03	; 3
      00020D 03                    4247 	.db #0x03	; 3
      00020E 03                    4248 	.db #0x03	; 3
      00020F 03                    4249 	.db #0x03	; 3
      000210 03                    4250 	.db #0x03	; 3
      000211 03                    4251 	.db #0x03	; 3
      000212 03                    4252 	.db #0x03	; 3
      000213 03                    4253 	.db #0x03	; 3
      000214 03                    4254 	.db #0x03	; 3
      000215 03                    4255 	.db #0x03	; 3
      000216 03                    4256 	.db #0x03	; 3
      000217 03                    4257 	.db #0x03	; 3
      000218 D0                    4258 	.db #0xD0	; 208
      000219 E8                    4259 	.db #0xE8	; 232
      00021A F4                    4260 	.db #0xF4	; 244
      00021B FA                    4261 	.db #0xFA	; 250
      00021C D3                    4262 	.db #0xD3	; 211
      00021D A7                    4263 	.db #0xA7	; 167
      00021E 7D                    4264 	.db #0x7D	; 125
      00021F 53                    4265 	.db #0x53	; 83	'S'
      000220 5E                    4266 	.db #0x5E	; 94
      000221 7D                    4267 	.db #0x7D	; 125
      000222 5E                    4268 	.db #0x5E	; 94
      000223 3F                    4269 	.db #0x3F	; 63
      000224 30                    4270 	.db #0x30	; 48	'0'
      000225 E0                    4271 	.db #0xE0	; 224
      000226 60                    4272 	.db #0x60	; 96
      000227 20                    4273 	.db #0x20	; 32
      000228 00                    4274 	.db #0x00	; 0
      000229 00                    4275 	.db #0x00	; 0
      00022A 00                    4276 	.db #0x00	; 0
      00022B 01                    4277 	.db #0x01	; 1
      00022C 01                    4278 	.db #0x01	; 1
      00022D 01                    4279 	.db #0x01	; 1
      00022E 01                    4280 	.db #0x01	; 1
      00022F 01                    4281 	.db #0x01	; 1
      000230 02                    4282 	.db #0x02	; 2
      000231 02                    4283 	.db #0x02	; 2
      000232 10                    4284 	.db #0x10	; 16
      000233 20                    4285 	.db #0x20	; 32
      000234 41                    4286 	.db #0x41	; 65	'A'
      000235 83                    4287 	.db #0x83	; 131
      000236 9B                    4288 	.db #0x9B	; 155
      000237 C4                    4289 	.db #0xC4	; 196
      000238 06                    4290 	.db #0x06	; 6
      000239 89                    4291 	.db #0x89	; 137
      00023A 5D                    4292 	.db #0x5D	; 93
      00023B 06                    4293 	.db #0x06	; 6
      00023C 5D                    4294 	.db #0x5D	; 93
      00023D 0C                    4295 	.db #0x0C	; 12
      00023E AA                    4296 	.db #0xAA	; 170
      00023F 62                    4297 	.db #0x62	; 98	'b'
      000240 C5                    4298 	.db #0xC5	; 197
      000241 89                    4299 	.db #0x89	; 137
      000242 12                    4300 	.db #0x12	; 18
      000243 A6                    4301 	.db #0xA6	; 166
      000244 9C                    4302 	.db #0x9C	; 156
      000245 25                    4303 	.db #0x25	; 37
      000246 37                    4304 	.db #0x37	; 55	'7'
      000247 86                    4305 	.db #0x86	; 134
      000248 25                    4306 	.db #0x25	; 37
      000249 86                    4307 	.db #0x86	; 134
      00024A 4A                    4308 	.db #0x4A	; 74	'J'
      00024B AB                    4309 	.db #0xAB	; 171
      00024C 00                    4310 	.db #0x00	; 0
      00024D 00                    4311 	.db #0x00	; 0
      00024E 00                    4312 	.db #0x00	; 0
      00024F 01                    4313 	.db #0x01	; 1
      000250 01                    4314 	.db #0x01	; 1
      000251 01                    4315 	.db #0x01	; 1
      000252 02                    4316 	.db #0x02	; 2
      000253 03                    4317 	.db #0x03	; 3
      000254 02                    4318 	.db #0x02	; 2
      000255 02                    4319 	.db #0x02	; 2
      000256 02                    4320 	.db #0x02	; 2
      000257 04                    4321 	.db #0x04	; 4
      000258 07                    4322 	.db #0x07	; 7
      000259 23                    4323 	.db #0x23	; 35
      00025A 44                    4324 	.db #0x44	; 68	'D'
      00025B 85                    4325 	.db #0x85	; 133
      00025C 08                    4326 	.db #0x08	; 8
      00025D 39                    4327 	.db #0x39	; 57	'9'
      00025E 8A                    4328 	.db #0x8A	; 138
      00025F 0E                    4329 	.db #0x0E	; 14
      000260 18                    4330 	.db #0x18	; 24
      000261 BB                    4331 	.db #0xBB	; 187
      000262 0E                    4332 	.db #0x0E	; 14
      000263 BB                    4333 	.db #0xBB	; 187
      000264 EA                    4334 	.db #0xEA	; 234
      000265 FF                    4335 	.db #0xFF	; 255
      000266 1E                    4336 	.db #0x1E	; 30
      000267 1E                    4337 	.db #0x1E	; 30
      000268 1E                    4338 	.db #0x1E	; 30
      000269 1E                    4339 	.db #0x1E	; 30
      00026A 1E                    4340 	.db #0x1E	; 30
      00026B 1E                    4341 	.db #0x1E	; 30
      00026C 20                    4342 	.db #0x20	; 32
      00026D 30                    4343 	.db #0x30	; 48	'0'
      00026E 41                    4344 	.db #0x41	; 65	'A'
      00026F 50                    4345 	.db #0x50	; 80	'P'
      000270 50                    4346 	.db #0x50	; 80	'P'
      000271 50                    4347 	.db #0x50	; 80	'P'
      000272 50                    4348 	.db #0x50	; 80	'P'
      000273 10                    4349 	.db #0x10	; 16
      000274 20                    4350 	.db #0x20	; 32
      000275 41                    4351 	.db #0x41	; 65	'A'
      000276 83                    4352 	.db #0x83	; 131
      000277 9B                    4353 	.db #0x9B	; 155
      000278 C4                    4354 	.db #0xC4	; 196
      000279 08                    4355 	.db #0x08	; 8
      00027A 0C                    4356 	.db #0x0C	; 12
      00027B 10                    4357 	.db #0x10	; 16
      00027C 18                    4358 	.db #0x18	; 24
      00027D 20                    4359 	.db #0x20	; 32
      00027E 31                    4360 	.db #0x31	; 49	'1'
      00027F 40                    4361 	.db #0x40	; 64
      000280 62                    4362 	.db #0x62	; 98	'b'
      000281 C5                    4363 	.db #0xC5	; 197
      000282 89                    4364 	.db #0x89	; 137
      000283 12                    4365 	.db #0x12	; 18
      000284 A6                    4366 	.db #0xA6	; 166
      000285 9C                    4367 	.db #0x9C	; 156
      000286 31                    4368 	.db #0x31	; 49	'1'
      000287 4A                    4369 	.db #0x4A	; 74	'J'
      000288 62                    4370 	.db #0x62	; 98	'b'
      000289 93                    4371 	.db #0x93	; 147
      00028A C5                    4372 	.db #0xC5	; 197
      00028B 27                    4373 	.db #0x27	; 39
      00028C 00                    4374 	.db #0x00	; 0
      00028D 03                    4375 	.db #0x03	; 3
      00028E 06                    4376 	.db #0x06	; 6
      00028F 0D                    4377 	.db #0x0D	; 13
      000290 1A                    4378 	.db #0x1A	; 26
      000291 1E                    4379 	.db #0x1E	; 30
      000292 26                    4380 	.db #0x26	; 38
      000293 33                    4381 	.db #0x33	; 51	'3'
      000294 4D                    4382 	.db #0x4D	; 77	'M'
      000295 66                    4383 	.db #0x66	; 102	'f'
      000296 9A                    4384 	.db #0x9A	; 154
      000297 CD                    4385 	.db #0xCD	; 205
      000298 FE                    4386 	.db #0xFE	; 254
      000299 FE                    4387 	.db #0xFE	; 254
      00029A                       4388 _power_levels:
      00029A 01                    4389 	.db #0x01	; 1
      00029B 02                    4390 	.db #0x02	; 2
      00029C 05                    4391 	.db #0x05	; 5
      00029D 08                    4392 	.db #0x08	; 8
      00029E 0B                    4393 	.db #0x0B	; 11
      00029F 0E                    4394 	.db #0x0E	; 14
      0002A0 11                    4395 	.db #0x11	; 17
      0002A1 14                    4396 	.db #0x14	; 20
                                   4397 	.area XINIT   (CODE)
                                   4398 	.area CABS    (ABS,CODE)
