                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Sep  7 2022) (Linux)
                                      4 ; This file was generated Wed Sep  7 10:05:05 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module freq_hopping
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _param_get
                                     13 	.globl _srand
                                     14 	.globl _rand
                                     15 	.globl _SDN
                                     16 	.globl _NSS1
                                     17 	.globl _IRQ
                                     18 	.globl _BUTTON_DOWN
                                     19 	.globl _BUTTON_UP
                                     20 	.globl _BUTTON_ENTER
                                     21 	.globl _LED_GREEN
                                     22 	.globl _LED_RED
                                     23 	.globl _SPI0EN
                                     24 	.globl _TXBMT0
                                     25 	.globl _NSS0MD0
                                     26 	.globl _NSS0MD1
                                     27 	.globl _RXOVRN0
                                     28 	.globl _MODF0
                                     29 	.globl _WCOL0
                                     30 	.globl _SPIF0
                                     31 	.globl _AD0CM0
                                     32 	.globl _AD0CM1
                                     33 	.globl _AD0CM2
                                     34 	.globl _AD0WINT
                                     35 	.globl _AD0BUSY
                                     36 	.globl _AD0INT
                                     37 	.globl _BURSTEN
                                     38 	.globl _AD0EN
                                     39 	.globl _CCF0
                                     40 	.globl _CCF1
                                     41 	.globl _CCF2
                                     42 	.globl _CCF3
                                     43 	.globl _CCF4
                                     44 	.globl _CCF5
                                     45 	.globl _CR
                                     46 	.globl _CF
                                     47 	.globl _P
                                     48 	.globl _F1
                                     49 	.globl _OV
                                     50 	.globl _RS0
                                     51 	.globl _RS1
                                     52 	.globl _F0
                                     53 	.globl _AC
                                     54 	.globl _CY
                                     55 	.globl _T2XCLK
                                     56 	.globl _T2RCLK
                                     57 	.globl _TR2
                                     58 	.globl _T2SPLIT
                                     59 	.globl _TF2CEN
                                     60 	.globl _TF2LEN
                                     61 	.globl _TF2L
                                     62 	.globl _TF2H
                                     63 	.globl _SI
                                     64 	.globl _ACK
                                     65 	.globl _ARBLOST
                                     66 	.globl _ACKRQ
                                     67 	.globl _STO
                                     68 	.globl _STA
                                     69 	.globl _TXMODE
                                     70 	.globl _MASTER
                                     71 	.globl _PX0
                                     72 	.globl _PT0
                                     73 	.globl _PX1
                                     74 	.globl _PT1
                                     75 	.globl _PS0
                                     76 	.globl _PT2
                                     77 	.globl _PSPI0
                                     78 	.globl _SPI1EN
                                     79 	.globl _TXBMT1
                                     80 	.globl _NSS1MD0
                                     81 	.globl _NSS1MD1
                                     82 	.globl _RXOVRN1
                                     83 	.globl _MODF1
                                     84 	.globl _WCOL1
                                     85 	.globl _SPIF1
                                     86 	.globl _EX0
                                     87 	.globl _ET0
                                     88 	.globl _EX1
                                     89 	.globl _ET1
                                     90 	.globl _ES0
                                     91 	.globl _ET2
                                     92 	.globl _ESPI0
                                     93 	.globl _EA
                                     94 	.globl _RI0
                                     95 	.globl _TI0
                                     96 	.globl _RB80
                                     97 	.globl _TB80
                                     98 	.globl _REN0
                                     99 	.globl _MCE0
                                    100 	.globl _S0MODE
                                    101 	.globl _CRC0VAL
                                    102 	.globl _CRC0INIT
                                    103 	.globl _CRC0SEL
                                    104 	.globl _IT0
                                    105 	.globl _IE0
                                    106 	.globl _IT1
                                    107 	.globl _IE1
                                    108 	.globl _TR0
                                    109 	.globl _TF0
                                    110 	.globl _TR1
                                    111 	.globl _TF1
                                    112 	.globl _PCA0CP4
                                    113 	.globl _PCA0CP0
                                    114 	.globl _PCA0
                                    115 	.globl _PCA0CP3
                                    116 	.globl _PCA0CP2
                                    117 	.globl _PCA0CP1
                                    118 	.globl _PCA0CP5
                                    119 	.globl _TMR2
                                    120 	.globl _TMR2RL
                                    121 	.globl _ADC0LT
                                    122 	.globl _ADC0GT
                                    123 	.globl _ADC0
                                    124 	.globl _TMR3
                                    125 	.globl _TMR3RL
                                    126 	.globl _TOFF
                                    127 	.globl _DP
                                    128 	.globl _VDM0CN
                                    129 	.globl _PCA0CPH4
                                    130 	.globl _PCA0CPL4
                                    131 	.globl _PCA0CPH0
                                    132 	.globl _PCA0CPL0
                                    133 	.globl _PCA0H
                                    134 	.globl _PCA0L
                                    135 	.globl _SPI0CN
                                    136 	.globl _EIP2
                                    137 	.globl _EIP1
                                    138 	.globl _SMB0ADM
                                    139 	.globl _SMB0ADR
                                    140 	.globl _P2MDIN
                                    141 	.globl _P1MDIN
                                    142 	.globl _P0MDIN
                                    143 	.globl _B
                                    144 	.globl _RSTSRC
                                    145 	.globl _PCA0CPH3
                                    146 	.globl _PCA0CPL3
                                    147 	.globl _PCA0CPH2
                                    148 	.globl _PCA0CPL2
                                    149 	.globl _PCA0CPH1
                                    150 	.globl _PCA0CPL1
                                    151 	.globl _ADC0CN
                                    152 	.globl _EIE2
                                    153 	.globl _EIE1
                                    154 	.globl _FLWR
                                    155 	.globl _IT01CF
                                    156 	.globl _XBR2
                                    157 	.globl _XBR1
                                    158 	.globl _XBR0
                                    159 	.globl _ACC
                                    160 	.globl _PCA0PWM
                                    161 	.globl _PCA0CPM4
                                    162 	.globl _PCA0CPM3
                                    163 	.globl _PCA0CPM2
                                    164 	.globl _PCA0CPM1
                                    165 	.globl _PCA0CPM0
                                    166 	.globl _PCA0MD
                                    167 	.globl _PCA0CN
                                    168 	.globl _P0MAT
                                    169 	.globl _P2SKIP
                                    170 	.globl _P1SKIP
                                    171 	.globl _P0SKIP
                                    172 	.globl _PCA0CPH5
                                    173 	.globl _PCA0CPL5
                                    174 	.globl _REF0CN
                                    175 	.globl _PSW
                                    176 	.globl _P1MAT
                                    177 	.globl _PCA0CPM5
                                    178 	.globl _TMR2H
                                    179 	.globl _TMR2L
                                    180 	.globl _TMR2RLH
                                    181 	.globl _TMR2RLL
                                    182 	.globl _REG0CN
                                    183 	.globl _TMR2CN
                                    184 	.globl _P0MASK
                                    185 	.globl _ADC0LTH
                                    186 	.globl _ADC0LTL
                                    187 	.globl _ADC0GTH
                                    188 	.globl _ADC0GTL
                                    189 	.globl _SMB0DAT
                                    190 	.globl _SMB0CF
                                    191 	.globl _SMB0CN
                                    192 	.globl _P1MASK
                                    193 	.globl _ADC0H
                                    194 	.globl _ADC0L
                                    195 	.globl _ADC0TK
                                    196 	.globl _ADC0CF
                                    197 	.globl _ADC0MX
                                    198 	.globl _ADC0PWR
                                    199 	.globl _ADC0AC
                                    200 	.globl _IREF0CN
                                    201 	.globl _IP
                                    202 	.globl _FLKEY
                                    203 	.globl _FLSCL
                                    204 	.globl _PMU0CF
                                    205 	.globl _OSCICL
                                    206 	.globl _OSCICN
                                    207 	.globl _OSCXCN
                                    208 	.globl _SPI1CN
                                    209 	.globl _ONESHOT
                                    210 	.globl _EMI0TC
                                    211 	.globl _RTC0KEY
                                    212 	.globl _RTC0DAT
                                    213 	.globl _RTC0ADR
                                    214 	.globl _EMI0CF
                                    215 	.globl _EMI0CN
                                    216 	.globl _CLKSEL
                                    217 	.globl _IE
                                    218 	.globl _SFRPAGE
                                    219 	.globl _P2DRV
                                    220 	.globl _P2MDOUT
                                    221 	.globl _P1DRV
                                    222 	.globl _P1MDOUT
                                    223 	.globl _P0DRV
                                    224 	.globl _P0MDOUT
                                    225 	.globl _SPI0DAT
                                    226 	.globl _SPI0CKR
                                    227 	.globl _SPI0CFG
                                    228 	.globl _P2
                                    229 	.globl _CPT0MX
                                    230 	.globl _CPT1MX
                                    231 	.globl _CPT0MD
                                    232 	.globl _CPT1MD
                                    233 	.globl _CPT0CN
                                    234 	.globl _CPT1CN
                                    235 	.globl _SBUF0
                                    236 	.globl _SCON0
                                    237 	.globl _CRC0CNT
                                    238 	.globl _DC0CN
                                    239 	.globl _CRC0AUTO
                                    240 	.globl _DC0CF
                                    241 	.globl _TMR3H
                                    242 	.globl _CRC0FLIP
                                    243 	.globl _TMR3L
                                    244 	.globl _CRC0IN
                                    245 	.globl _TMR3RLH
                                    246 	.globl _CRC0CN
                                    247 	.globl _TMR3RLL
                                    248 	.globl _CRC0DAT
                                    249 	.globl _TMR3CN
                                    250 	.globl _P1
                                    251 	.globl _PSCTL
                                    252 	.globl _CKCON
                                    253 	.globl _TH1
                                    254 	.globl _TH0
                                    255 	.globl _TL1
                                    256 	.globl _TL0
                                    257 	.globl _TMOD
                                    258 	.globl _TCON
                                    259 	.globl _PCON
                                    260 	.globl _TOFFH
                                    261 	.globl _SPI1DAT
                                    262 	.globl _TOFFL
                                    263 	.globl _SPI1CKR
                                    264 	.globl _SPI1CFG
                                    265 	.globl _DPH
                                    266 	.globl _DPL
                                    267 	.globl _SP
                                    268 	.globl _P0
                                    269 	.globl _num_fh_channels
                                    270 	.globl _fhop_set_locked_PARM_1
                                    271 	.globl _shuffleRand
                                    272 	.globl _fhop_init
                                    273 	.globl _fhop_transmit_channel
                                    274 	.globl _fhop_receive_channel
                                    275 	.globl _fhop_window_change
                                    276 	.globl _fhop_set_locked
                                    277 ;--------------------------------------------------------
                                    278 ; special function registers
                                    279 ;--------------------------------------------------------
                                    280 	.area RSEG    (ABS,DATA)
      000000                        281 	.org 0x0000
                           000080   282 _P0	=	0x0080
                           000081   283 _SP	=	0x0081
                           000082   284 _DPL	=	0x0082
                           000083   285 _DPH	=	0x0083
                           000084   286 _SPI1CFG	=	0x0084
                           000085   287 _SPI1CKR	=	0x0085
                           000085   288 _TOFFL	=	0x0085
                           000086   289 _SPI1DAT	=	0x0086
                           000086   290 _TOFFH	=	0x0086
                           000087   291 _PCON	=	0x0087
                           000088   292 _TCON	=	0x0088
                           000089   293 _TMOD	=	0x0089
                           00008A   294 _TL0	=	0x008a
                           00008B   295 _TL1	=	0x008b
                           00008C   296 _TH0	=	0x008c
                           00008D   297 _TH1	=	0x008d
                           00008E   298 _CKCON	=	0x008e
                           00008F   299 _PSCTL	=	0x008f
                           000090   300 _P1	=	0x0090
                           000091   301 _TMR3CN	=	0x0091
                           000091   302 _CRC0DAT	=	0x0091
                           000092   303 _TMR3RLL	=	0x0092
                           000092   304 _CRC0CN	=	0x0092
                           000093   305 _TMR3RLH	=	0x0093
                           000093   306 _CRC0IN	=	0x0093
                           000094   307 _TMR3L	=	0x0094
                           000095   308 _CRC0FLIP	=	0x0095
                           000095   309 _TMR3H	=	0x0095
                           000096   310 _DC0CF	=	0x0096
                           000096   311 _CRC0AUTO	=	0x0096
                           000097   312 _DC0CN	=	0x0097
                           000097   313 _CRC0CNT	=	0x0097
                           000098   314 _SCON0	=	0x0098
                           000099   315 _SBUF0	=	0x0099
                           00009A   316 _CPT1CN	=	0x009a
                           00009B   317 _CPT0CN	=	0x009b
                           00009C   318 _CPT1MD	=	0x009c
                           00009D   319 _CPT0MD	=	0x009d
                           00009E   320 _CPT1MX	=	0x009e
                           00009F   321 _CPT0MX	=	0x009f
                           0000A0   322 _P2	=	0x00a0
                           0000A1   323 _SPI0CFG	=	0x00a1
                           0000A2   324 _SPI0CKR	=	0x00a2
                           0000A3   325 _SPI0DAT	=	0x00a3
                           0000A4   326 _P0MDOUT	=	0x00a4
                           0000A4   327 _P0DRV	=	0x00a4
                           0000A5   328 _P1MDOUT	=	0x00a5
                           0000A5   329 _P1DRV	=	0x00a5
                           0000A6   330 _P2MDOUT	=	0x00a6
                           0000A6   331 _P2DRV	=	0x00a6
                           0000A7   332 _SFRPAGE	=	0x00a7
                           0000A8   333 _IE	=	0x00a8
                           0000A9   334 _CLKSEL	=	0x00a9
                           0000AA   335 _EMI0CN	=	0x00aa
                           0000AB   336 _EMI0CF	=	0x00ab
                           0000AC   337 _RTC0ADR	=	0x00ac
                           0000AD   338 _RTC0DAT	=	0x00ad
                           0000AE   339 _RTC0KEY	=	0x00ae
                           0000AF   340 _EMI0TC	=	0x00af
                           0000AF   341 _ONESHOT	=	0x00af
                           0000B0   342 _SPI1CN	=	0x00b0
                           0000B1   343 _OSCXCN	=	0x00b1
                           0000B2   344 _OSCICN	=	0x00b2
                           0000B3   345 _OSCICL	=	0x00b3
                           0000B5   346 _PMU0CF	=	0x00b5
                           0000B6   347 _FLSCL	=	0x00b6
                           0000B7   348 _FLKEY	=	0x00b7
                           0000B8   349 _IP	=	0x00b8
                           0000B9   350 _IREF0CN	=	0x00b9
                           0000BA   351 _ADC0AC	=	0x00ba
                           0000BA   352 _ADC0PWR	=	0x00ba
                           0000BB   353 _ADC0MX	=	0x00bb
                           0000BC   354 _ADC0CF	=	0x00bc
                           0000BD   355 _ADC0TK	=	0x00bd
                           0000BD   356 _ADC0L	=	0x00bd
                           0000BE   357 _ADC0H	=	0x00be
                           0000BF   358 _P1MASK	=	0x00bf
                           0000C0   359 _SMB0CN	=	0x00c0
                           0000C1   360 _SMB0CF	=	0x00c1
                           0000C2   361 _SMB0DAT	=	0x00c2
                           0000C3   362 _ADC0GTL	=	0x00c3
                           0000C4   363 _ADC0GTH	=	0x00c4
                           0000C5   364 _ADC0LTL	=	0x00c5
                           0000C6   365 _ADC0LTH	=	0x00c6
                           0000C7   366 _P0MASK	=	0x00c7
                           0000C8   367 _TMR2CN	=	0x00c8
                           0000C9   368 _REG0CN	=	0x00c9
                           0000CA   369 _TMR2RLL	=	0x00ca
                           0000CB   370 _TMR2RLH	=	0x00cb
                           0000CC   371 _TMR2L	=	0x00cc
                           0000CD   372 _TMR2H	=	0x00cd
                           0000CE   373 _PCA0CPM5	=	0x00ce
                           0000CF   374 _P1MAT	=	0x00cf
                           0000D0   375 _PSW	=	0x00d0
                           0000D1   376 _REF0CN	=	0x00d1
                           0000D2   377 _PCA0CPL5	=	0x00d2
                           0000D3   378 _PCA0CPH5	=	0x00d3
                           0000D4   379 _P0SKIP	=	0x00d4
                           0000D5   380 _P1SKIP	=	0x00d5
                           0000D6   381 _P2SKIP	=	0x00d6
                           0000D7   382 _P0MAT	=	0x00d7
                           0000D8   383 _PCA0CN	=	0x00d8
                           0000D9   384 _PCA0MD	=	0x00d9
                           0000DA   385 _PCA0CPM0	=	0x00da
                           0000DB   386 _PCA0CPM1	=	0x00db
                           0000DC   387 _PCA0CPM2	=	0x00dc
                           0000DD   388 _PCA0CPM3	=	0x00dd
                           0000DE   389 _PCA0CPM4	=	0x00de
                           0000DF   390 _PCA0PWM	=	0x00df
                           0000E0   391 _ACC	=	0x00e0
                           0000E1   392 _XBR0	=	0x00e1
                           0000E2   393 _XBR1	=	0x00e2
                           0000E3   394 _XBR2	=	0x00e3
                           0000E4   395 _IT01CF	=	0x00e4
                           0000E5   396 _FLWR	=	0x00e5
                           0000E6   397 _EIE1	=	0x00e6
                           0000E7   398 _EIE2	=	0x00e7
                           0000E8   399 _ADC0CN	=	0x00e8
                           0000E9   400 _PCA0CPL1	=	0x00e9
                           0000EA   401 _PCA0CPH1	=	0x00ea
                           0000EB   402 _PCA0CPL2	=	0x00eb
                           0000EC   403 _PCA0CPH2	=	0x00ec
                           0000ED   404 _PCA0CPL3	=	0x00ed
                           0000EE   405 _PCA0CPH3	=	0x00ee
                           0000EF   406 _RSTSRC	=	0x00ef
                           0000F0   407 _B	=	0x00f0
                           0000F1   408 _P0MDIN	=	0x00f1
                           0000F2   409 _P1MDIN	=	0x00f2
                           0000F3   410 _P2MDIN	=	0x00f3
                           0000F4   411 _SMB0ADR	=	0x00f4
                           0000F5   412 _SMB0ADM	=	0x00f5
                           0000F6   413 _EIP1	=	0x00f6
                           0000F7   414 _EIP2	=	0x00f7
                           0000F8   415 _SPI0CN	=	0x00f8
                           0000F9   416 _PCA0L	=	0x00f9
                           0000FA   417 _PCA0H	=	0x00fa
                           0000FB   418 _PCA0CPL0	=	0x00fb
                           0000FC   419 _PCA0CPH0	=	0x00fc
                           0000FD   420 _PCA0CPL4	=	0x00fd
                           0000FE   421 _PCA0CPH4	=	0x00fe
                           0000FF   422 _VDM0CN	=	0x00ff
                           008382   423 _DP	=	0x8382
                           008685   424 _TOFF	=	0x8685
                           009392   425 _TMR3RL	=	0x9392
                           009594   426 _TMR3	=	0x9594
                           00BEBD   427 _ADC0	=	0xbebd
                           00C4C3   428 _ADC0GT	=	0xc4c3
                           00C6C5   429 _ADC0LT	=	0xc6c5
                           00CBCA   430 _TMR2RL	=	0xcbca
                           00CDCC   431 _TMR2	=	0xcdcc
                           00D3D2   432 _PCA0CP5	=	0xd3d2
                           00EAE9   433 _PCA0CP1	=	0xeae9
                           00ECEB   434 _PCA0CP2	=	0xeceb
                           00EEED   435 _PCA0CP3	=	0xeeed
                           00FAF9   436 _PCA0	=	0xfaf9
                           00FCFB   437 _PCA0CP0	=	0xfcfb
                           00FEFD   438 _PCA0CP4	=	0xfefd
                                    439 ;--------------------------------------------------------
                                    440 ; special function bits
                                    441 ;--------------------------------------------------------
                                    442 	.area RSEG    (ABS,DATA)
      000000                        443 	.org 0x0000
                           00008F   444 _TF1	=	0x008f
                           00008E   445 _TR1	=	0x008e
                           00008D   446 _TF0	=	0x008d
                           00008C   447 _TR0	=	0x008c
                           00008B   448 _IE1	=	0x008b
                           00008A   449 _IT1	=	0x008a
                           000089   450 _IE0	=	0x0089
                           000088   451 _IT0	=	0x0088
                           000096   452 _CRC0SEL	=	0x0096
                           000095   453 _CRC0INIT	=	0x0095
                           000094   454 _CRC0VAL	=	0x0094
                           00009F   455 _S0MODE	=	0x009f
                           00009D   456 _MCE0	=	0x009d
                           00009C   457 _REN0	=	0x009c
                           00009B   458 _TB80	=	0x009b
                           00009A   459 _RB80	=	0x009a
                           000099   460 _TI0	=	0x0099
                           000098   461 _RI0	=	0x0098
                           0000AF   462 _EA	=	0x00af
                           0000AE   463 _ESPI0	=	0x00ae
                           0000AD   464 _ET2	=	0x00ad
                           0000AC   465 _ES0	=	0x00ac
                           0000AB   466 _ET1	=	0x00ab
                           0000AA   467 _EX1	=	0x00aa
                           0000A9   468 _ET0	=	0x00a9
                           0000A8   469 _EX0	=	0x00a8
                           0000B7   470 _SPIF1	=	0x00b7
                           0000B6   471 _WCOL1	=	0x00b6
                           0000B5   472 _MODF1	=	0x00b5
                           0000B4   473 _RXOVRN1	=	0x00b4
                           0000B3   474 _NSS1MD1	=	0x00b3
                           0000B2   475 _NSS1MD0	=	0x00b2
                           0000B1   476 _TXBMT1	=	0x00b1
                           0000B0   477 _SPI1EN	=	0x00b0
                           0000BE   478 _PSPI0	=	0x00be
                           0000BD   479 _PT2	=	0x00bd
                           0000BC   480 _PS0	=	0x00bc
                           0000BB   481 _PT1	=	0x00bb
                           0000BA   482 _PX1	=	0x00ba
                           0000B9   483 _PT0	=	0x00b9
                           0000B8   484 _PX0	=	0x00b8
                           0000C7   485 _MASTER	=	0x00c7
                           0000C6   486 _TXMODE	=	0x00c6
                           0000C5   487 _STA	=	0x00c5
                           0000C4   488 _STO	=	0x00c4
                           0000C3   489 _ACKRQ	=	0x00c3
                           0000C2   490 _ARBLOST	=	0x00c2
                           0000C1   491 _ACK	=	0x00c1
                           0000C0   492 _SI	=	0x00c0
                           0000CF   493 _TF2H	=	0x00cf
                           0000CE   494 _TF2L	=	0x00ce
                           0000CD   495 _TF2LEN	=	0x00cd
                           0000CC   496 _TF2CEN	=	0x00cc
                           0000CB   497 _T2SPLIT	=	0x00cb
                           0000CA   498 _TR2	=	0x00ca
                           0000C9   499 _T2RCLK	=	0x00c9
                           0000C8   500 _T2XCLK	=	0x00c8
                           0000D7   501 _CY	=	0x00d7
                           0000D6   502 _AC	=	0x00d6
                           0000D5   503 _F0	=	0x00d5
                           0000D4   504 _RS1	=	0x00d4
                           0000D3   505 _RS0	=	0x00d3
                           0000D2   506 _OV	=	0x00d2
                           0000D1   507 _F1	=	0x00d1
                           0000D0   508 _P	=	0x00d0
                           0000DF   509 _CF	=	0x00df
                           0000DE   510 _CR	=	0x00de
                           0000DD   511 _CCF5	=	0x00dd
                           0000DC   512 _CCF4	=	0x00dc
                           0000DB   513 _CCF3	=	0x00db
                           0000DA   514 _CCF2	=	0x00da
                           0000D9   515 _CCF1	=	0x00d9
                           0000D8   516 _CCF0	=	0x00d8
                           0000EF   517 _AD0EN	=	0x00ef
                           0000EE   518 _BURSTEN	=	0x00ee
                           0000ED   519 _AD0INT	=	0x00ed
                           0000EC   520 _AD0BUSY	=	0x00ec
                           0000EB   521 _AD0WINT	=	0x00eb
                           0000EA   522 _AD0CM2	=	0x00ea
                           0000E9   523 _AD0CM1	=	0x00e9
                           0000E8   524 _AD0CM0	=	0x00e8
                           0000FF   525 _SPIF0	=	0x00ff
                           0000FE   526 _WCOL0	=	0x00fe
                           0000FD   527 _MODF0	=	0x00fd
                           0000FC   528 _RXOVRN0	=	0x00fc
                           0000FB   529 _NSS0MD1	=	0x00fb
                           0000FA   530 _NSS0MD0	=	0x00fa
                           0000F9   531 _TXBMT0	=	0x00f9
                           0000F8   532 _SPI0EN	=	0x00f8
                           0000A0   533 _LED_RED	=	0x00a0
                           0000A5   534 _LED_GREEN	=	0x00a5
                           000086   535 _BUTTON_ENTER	=	0x0086
                           000095   536 _BUTTON_UP	=	0x0095
                           000096   537 _BUTTON_DOWN	=	0x0096
                           000087   538 _IRQ	=	0x0087
                           000094   539 _NSS1	=	0x0094
                           0000A6   540 _SDN	=	0x00a6
                                    541 ;--------------------------------------------------------
                                    542 ; overlayable register banks
                                    543 ;--------------------------------------------------------
                                    544 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        545 	.ds 8
                                    546 ;--------------------------------------------------------
                                    547 ; internal ram data
                                    548 ;--------------------------------------------------------
                                    549 	.area DSEG    (DATA)
      000000                        550 _shuffle_sloc0_1_0:
      000000                        551 	.ds 1
      000001                        552 _fhop_init_sloc0_1_0:
      000001                        553 	.ds 1
                                    554 ;--------------------------------------------------------
                                    555 ; overlayable items in internal ram 
                                    556 ;--------------------------------------------------------
                                    557 ;--------------------------------------------------------
                                    558 ; indirectly addressable internal ram data
                                    559 ;--------------------------------------------------------
                                    560 	.area ISEG    (DATA)
                                    561 ;--------------------------------------------------------
                                    562 ; absolute internal ram data
                                    563 ;--------------------------------------------------------
                                    564 	.area IABS    (ABS,DATA)
                                    565 	.area IABS    (ABS,DATA)
                                    566 ;--------------------------------------------------------
                                    567 ; bit data
                                    568 ;--------------------------------------------------------
                                    569 	.area BSEG    (BIT)
      000000                        570 _have_radio_lock:
      000000                        571 	.ds 1
      000001                        572 _fhop_set_locked_PARM_1:
      000001                        573 	.ds 1
                                    574 ;--------------------------------------------------------
                                    575 ; paged external ram data
                                    576 ;--------------------------------------------------------
                                    577 	.area PSEG    (PAG,XDATA)
      000000                        578 _num_fh_channels::
      000000                        579 	.ds 1
      000001                        580 _transmit_channel:
      000001                        581 	.ds 1
      000002                        582 _receive_channel:
      000002                        583 	.ds 1
                                    584 ;--------------------------------------------------------
                                    585 ; external ram data
                                    586 ;--------------------------------------------------------
                                    587 	.area XSEG    (XDATA)
      000000                        588 _channel_map:
      000000                        589 	.ds 50
      000032                        590 _shuffle_PARM_2:
      000032                        591 	.ds 1
      000033                        592 _shuffle_array_1_131:
      000033                        593 	.ds 2
      000035                        594 _fhop_init_array_3_140:
      000035                        595 	.ds 2
                                    596 ;--------------------------------------------------------
                                    597 ; absolute external ram data
                                    598 ;--------------------------------------------------------
                                    599 	.area XABS    (ABS,XDATA)
                                    600 ;--------------------------------------------------------
                                    601 ; external initialized ram data
                                    602 ;--------------------------------------------------------
                                    603 	.area XISEG   (XDATA)
                                    604 	.area HOME    (CODE)
                                    605 	.area GSINIT0 (CODE)
                                    606 	.area GSINIT1 (CODE)
                                    607 	.area GSINIT2 (CODE)
                                    608 	.area GSINIT3 (CODE)
                                    609 	.area GSINIT4 (CODE)
                                    610 	.area GSINIT5 (CODE)
                                    611 	.area GSINIT  (CODE)
                                    612 	.area GSFINAL (CODE)
                                    613 	.area CSEG    (CODE)
                                    614 ;--------------------------------------------------------
                                    615 ; global & static initialisations
                                    616 ;--------------------------------------------------------
                                    617 	.area HOME    (CODE)
                                    618 	.area GSINIT  (CODE)
                                    619 	.area GSFINAL (CODE)
                                    620 	.area GSINIT  (CODE)
                                    621 ;--------------------------------------------------------
                                    622 ; Home
                                    623 ;--------------------------------------------------------
                                    624 	.area HOME    (CODE)
                                    625 	.area HOME    (CODE)
                                    626 ;--------------------------------------------------------
                                    627 ; code
                                    628 ;--------------------------------------------------------
                                    629 	.area CSEG    (CODE)
                                    630 ;------------------------------------------------------------
                                    631 ;Allocation info for local variables in function 'shuffle'
                                    632 ;------------------------------------------------------------
                                    633 ;sloc0                     Allocated with name '_shuffle_sloc0_1_0'
                                    634 ;n                         Allocated with name '_shuffle_PARM_2'
                                    635 ;array                     Allocated with name '_shuffle_array_1_131'
                                    636 ;i                         Allocated with name '_shuffle_i_1_132'
                                    637 ;j                         Allocated with name '_shuffle_j_2_133'
                                    638 ;t                         Allocated with name '_shuffle_t_2_133'
                                    639 ;------------------------------------------------------------
                                    640 ;	radio/freq_hopping.c:64: static inline void shuffle(__xdata uint8_t *array, uint8_t n)
                                    641 ;	-----------------------------------------
                                    642 ;	 function shuffle
                                    643 ;	-----------------------------------------
      000000                        644 _shuffle:
                           000007   645 	ar7 = 0x07
                           000006   646 	ar6 = 0x06
                           000005   647 	ar5 = 0x05
                           000004   648 	ar4 = 0x04
                           000003   649 	ar3 = 0x03
                           000002   650 	ar2 = 0x02
                           000001   651 	ar1 = 0x01
                           000000   652 	ar0 = 0x00
      000000 AF 83            [24]  653 	mov	r7,dph
      000002 E5 82            [12]  654 	mov	a,dpl
      000004 90r00r33         [24]  655 	mov	dptr,#_shuffle_array_1_131
      000007 F0               [24]  656 	movx	@dptr,a
      000008 EF               [12]  657 	mov	a,r7
      000009 A3               [24]  658 	inc	dptr
      00000A F0               [24]  659 	movx	@dptr,a
                                    660 ;	radio/freq_hopping.c:67: for (i = 0; i < n - 1; i++) {
      00000B 90r00r33         [24]  661 	mov	dptr,#_shuffle_array_1_131
      00000E E0               [24]  662 	movx	a,@dptr
      00000F FE               [12]  663 	mov	r6,a
      000010 A3               [24]  664 	inc	dptr
      000011 E0               [24]  665 	movx	a,@dptr
      000012 FF               [12]  666 	mov	r7,a
      000013 90r00r32         [24]  667 	mov	dptr,#_shuffle_PARM_2
      000016 E0               [24]  668 	movx	a,@dptr
      000017 FD               [12]  669 	mov	r5,a
      000018 7C 00            [12]  670 	mov	r4,#0x00
      00001A                        671 00103$:
      00001A 8D 02            [24]  672 	mov	ar2,r5
      00001C 7B 00            [12]  673 	mov	r3,#0x00
      00001E 1A               [12]  674 	dec	r2
      00001F BA FF 01         [24]  675 	cjne	r2,#0xFF,00114$
      000022 1B               [12]  676 	dec	r3
      000023                        677 00114$:
      000023 8C 00            [24]  678 	mov	ar0,r4
      000025 79 00            [12]  679 	mov	r1,#0x00
      000027 C3               [12]  680 	clr	c
      000028 E8               [12]  681 	mov	a,r0
      000029 9A               [12]  682 	subb	a,r2
      00002A E9               [12]  683 	mov	a,r1
      00002B 64 80            [12]  684 	xrl	a,#0x80
      00002D 8B F0            [24]  685 	mov	b,r3
      00002F 63 F0 80         [24]  686 	xrl	b,#0x80
      000032 95 F0            [12]  687 	subb	a,b
      000034 50 46            [24]  688 	jnc	00105$
                                    689 ;	radio/freq_hopping.c:68: uint8_t j = ((uint8_t)rand()) % n;
      000036 C0 07            [24]  690 	push	ar7
      000038 C0 06            [24]  691 	push	ar6
      00003A C0 05            [24]  692 	push	ar5
      00003C C0 04            [24]  693 	push	ar4
      00003E 12r00r00         [24]  694 	lcall	_rand
      000041 AA 82            [24]  695 	mov	r2,dpl
      000043 D0 04            [24]  696 	pop	ar4
      000045 D0 05            [24]  697 	pop	ar5
      000047 D0 06            [24]  698 	pop	ar6
      000049 D0 07            [24]  699 	pop	ar7
      00004B 8D F0            [24]  700 	mov	b,r5
      00004D EA               [12]  701 	mov	a,r2
      00004E 84               [48]  702 	div	ab
                                    703 ;	radio/freq_hopping.c:69: uint8_t t = array[j];
      00004F E5 F0            [12]  704 	mov	a,b
      000051 2E               [12]  705 	add	a,r6
      000052 FA               [12]  706 	mov	r2,a
      000053 E4               [12]  707 	clr	a
      000054 3F               [12]  708 	addc	a,r7
      000055 FB               [12]  709 	mov	r3,a
      000056 8A 82            [24]  710 	mov	dpl,r2
      000058 8B 83            [24]  711 	mov	dph,r3
      00005A E0               [24]  712 	movx	a,@dptr
      00005B F5*00            [12]  713 	mov	_shuffle_sloc0_1_0,a
                                    714 ;	radio/freq_hopping.c:70: array[j] = array[i];
      00005D C0 05            [24]  715 	push	ar5
      00005F EC               [12]  716 	mov	a,r4
      000060 2E               [12]  717 	add	a,r6
      000061 F8               [12]  718 	mov	r0,a
      000062 E4               [12]  719 	clr	a
      000063 3F               [12]  720 	addc	a,r7
      000064 FD               [12]  721 	mov	r5,a
      000065 88 82            [24]  722 	mov	dpl,r0
      000067 8D 83            [24]  723 	mov	dph,r5
      000069 E0               [24]  724 	movx	a,@dptr
      00006A F9               [12]  725 	mov	r1,a
      00006B 8A 82            [24]  726 	mov	dpl,r2
      00006D 8B 83            [24]  727 	mov	dph,r3
      00006F F0               [24]  728 	movx	@dptr,a
                                    729 ;	radio/freq_hopping.c:71: array[i] = t;
      000070 88 82            [24]  730 	mov	dpl,r0
      000072 8D 83            [24]  731 	mov	dph,r5
      000074 E5*00            [12]  732 	mov	a,_shuffle_sloc0_1_0
      000076 F0               [24]  733 	movx	@dptr,a
                                    734 ;	radio/freq_hopping.c:67: for (i = 0; i < n - 1; i++) {
      000077 0C               [12]  735 	inc	r4
      000078 D0 05            [24]  736 	pop	ar5
      00007A 80 9E            [24]  737 	sjmp	00103$
      00007C                        738 00105$:
      00007C 22               [24]  739 	ret
                                    740 ;------------------------------------------------------------
                                    741 ;Allocation info for local variables in function 'shuffleRand'
                                    742 ;------------------------------------------------------------
                                    743 ;	radio/freq_hopping.c:76: shuffleRand(void)
                                    744 ;	-----------------------------------------
                                    745 ;	 function shuffleRand
                                    746 ;	-----------------------------------------
      00007D                        747 _shuffleRand:
                                    748 ;	radio/freq_hopping.c:78: srand(param_get(PARAM_NETID));
      00007D 75 82 03         [24]  749 	mov	dpl,#0x03
      000080 12r00r00         [24]  750 	lcall	_param_get
      000083 02r00r00         [24]  751 	ljmp	_srand
                                    752 ;------------------------------------------------------------
                                    753 ;Allocation info for local variables in function 'fhop_init'
                                    754 ;------------------------------------------------------------
                                    755 ;sloc0                     Allocated with name '_fhop_init_sloc0_1_0'
                                    756 ;i                         Allocated with name '_fhop_init_i_1_137'
                                    757 ;__00020001                Allocated with name '_fhop_init___00020001_3_140'
                                    758 ;__00020002                Allocated with name '_fhop_init___00020002_3_140'
                                    759 ;array                     Allocated with name '_fhop_init_array_3_140'
                                    760 ;n                         Allocated with name '_fhop_init_n_3_140'
                                    761 ;i                         Allocated with name '_fhop_init_i_4_141'
                                    762 ;j                         Allocated with name '_fhop_init_j_5_142'
                                    763 ;t                         Allocated with name '_fhop_init_t_5_142'
                                    764 ;------------------------------------------------------------
                                    765 ;	radio/freq_hopping.c:88: fhop_init(void)
                                    766 ;	-----------------------------------------
                                    767 ;	 function fhop_init
                                    768 ;	-----------------------------------------
      000086                        769 _fhop_init:
                                    770 ;	radio/freq_hopping.c:93: for (i = 0; i < num_fh_channels; i++) {
      000086 7F 00            [12]  771 	mov	r7,#0x00
      000088                        772 00105$:
      000088 78r00            [12]  773 	mov	r0,#_num_fh_channels
      00008A C3               [12]  774 	clr	c
      00008B E2               [24]  775 	movx	a,@r0
      00008C F5 F0            [12]  776 	mov	b,a
      00008E EF               [12]  777 	mov	a,r7
      00008F 95 F0            [12]  778 	subb	a,b
      000091 50 0F            [24]  779 	jnc	00101$
                                    780 ;	radio/freq_hopping.c:94: channel_map[i] = i;
      000093 EF               [12]  781 	mov	a,r7
      000094 24r00            [12]  782 	add	a,#_channel_map
      000096 F5 82            [12]  783 	mov	dpl,a
      000098 E4               [12]  784 	clr	a
      000099 34s00            [12]  785 	addc	a,#(_channel_map >> 8)
      00009B F5 83            [12]  786 	mov	dph,a
      00009D EF               [12]  787 	mov	a,r7
      00009E F0               [24]  788 	movx	@dptr,a
                                    789 ;	radio/freq_hopping.c:93: for (i = 0; i < num_fh_channels; i++) {
      00009F 0F               [12]  790 	inc	r7
      0000A0 80 E6            [24]  791 	sjmp	00105$
      0000A2                        792 00101$:
                                    793 ;	radio/freq_hopping.c:96: shuffleRand();
      0000A2 12r00r7D         [24]  794 	lcall	_shuffleRand
                                    795 ;	radio/freq_hopping.c:97: shuffle(channel_map, num_fh_channels);
      0000A5 78r00            [12]  796 	mov	r0,#_num_fh_channels
      0000A7 E2               [24]  797 	movx	a,@r0
      0000A8 FF               [12]  798 	mov	r7,a
                                    799 ;	radio/freq_hopping.c:67: for (i = 0; i < n - 1; i++) {
      0000A9 7E 00            [12]  800 	mov	r6,#0x00
      0000AB                        801 00108$:
      0000AB 8F 04            [24]  802 	mov	ar4,r7
      0000AD 7D 00            [12]  803 	mov	r5,#0x00
      0000AF 1C               [12]  804 	dec	r4
      0000B0 BC FF 01         [24]  805 	cjne	r4,#0xFF,00127$
      0000B3 1D               [12]  806 	dec	r5
      0000B4                        807 00127$:
      0000B4 8E 02            [24]  808 	mov	ar2,r6
      0000B6 7B 00            [12]  809 	mov	r3,#0x00
      0000B8 C3               [12]  810 	clr	c
      0000B9 EA               [12]  811 	mov	a,r2
      0000BA 9C               [12]  812 	subb	a,r4
      0000BB EB               [12]  813 	mov	a,r3
      0000BC 64 80            [12]  814 	xrl	a,#0x80
      0000BE 8D F0            [24]  815 	mov	b,r5
      0000C0 63 F0 80         [24]  816 	xrl	b,#0x80
      0000C3 95 F0            [12]  817 	subb	a,b
      0000C5 50 42            [24]  818 	jnc	00110$
                                    819 ;	radio/freq_hopping.c:68: uint8_t j = ((uint8_t)rand()) % n;
      0000C7 C0 07            [24]  820 	push	ar7
      0000C9 C0 06            [24]  821 	push	ar6
      0000CB 12r00r00         [24]  822 	lcall	_rand
      0000CE AC 82            [24]  823 	mov	r4,dpl
      0000D0 D0 06            [24]  824 	pop	ar6
      0000D2 D0 07            [24]  825 	pop	ar7
      0000D4 8F F0            [24]  826 	mov	b,r7
      0000D6 EC               [12]  827 	mov	a,r4
      0000D7 84               [48]  828 	div	ab
                                    829 ;	radio/freq_hopping.c:69: uint8_t t = array[j];
      0000D8 E5 F0            [12]  830 	mov	a,b
      0000DA 24r00            [12]  831 	add	a,#_channel_map
      0000DC FC               [12]  832 	mov	r4,a
      0000DD E4               [12]  833 	clr	a
      0000DE 34s00            [12]  834 	addc	a,#(_channel_map >> 8)
      0000E0 FD               [12]  835 	mov	r5,a
      0000E1 8C 82            [24]  836 	mov	dpl,r4
      0000E3 8D 83            [24]  837 	mov	dph,r5
      0000E5 E0               [24]  838 	movx	a,@dptr
      0000E6 F5*01            [12]  839 	mov	_fhop_init_sloc0_1_0,a
                                    840 ;	radio/freq_hopping.c:70: array[j] = array[i];
      0000E8 C0 07            [24]  841 	push	ar7
      0000EA EE               [12]  842 	mov	a,r6
      0000EB 24r00            [12]  843 	add	a,#_channel_map
      0000ED FA               [12]  844 	mov	r2,a
      0000EE E4               [12]  845 	clr	a
      0000EF 34s00            [12]  846 	addc	a,#(_channel_map >> 8)
      0000F1 FF               [12]  847 	mov	r7,a
      0000F2 8A 82            [24]  848 	mov	dpl,r2
      0000F4 8F 83            [24]  849 	mov	dph,r7
      0000F6 E0               [24]  850 	movx	a,@dptr
      0000F7 FB               [12]  851 	mov	r3,a
      0000F8 8C 82            [24]  852 	mov	dpl,r4
      0000FA 8D 83            [24]  853 	mov	dph,r5
      0000FC F0               [24]  854 	movx	@dptr,a
                                    855 ;	radio/freq_hopping.c:71: array[i] = t;
      0000FD 8A 82            [24]  856 	mov	dpl,r2
      0000FF 8F 83            [24]  857 	mov	dph,r7
      000101 E5*01            [12]  858 	mov	a,_fhop_init_sloc0_1_0
      000103 F0               [24]  859 	movx	@dptr,a
                                    860 ;	radio/freq_hopping.c:67: for (i = 0; i < n - 1; i++) {
      000104 0E               [12]  861 	inc	r6
      000105 D0 07            [24]  862 	pop	ar7
                                    863 ;	radio/freq_hopping.c:97: shuffle(channel_map, num_fh_channels);
      000107 80 A2            [24]  864 	sjmp	00108$
      000109                        865 00110$:
      000109 22               [24]  866 	ret
                                    867 ;------------------------------------------------------------
                                    868 ;Allocation info for local variables in function 'fhop_transmit_channel'
                                    869 ;------------------------------------------------------------
                                    870 ;	radio/freq_hopping.c:102: fhop_transmit_channel(void)
                                    871 ;	-----------------------------------------
                                    872 ;	 function fhop_transmit_channel
                                    873 ;	-----------------------------------------
      00010A                        874 _fhop_transmit_channel:
                                    875 ;	radio/freq_hopping.c:104: return channel_map[transmit_channel];
      00010A 78r01            [12]  876 	mov	r0,#_transmit_channel
      00010C E2               [24]  877 	movx	a,@r0
      00010D 24r00            [12]  878 	add	a,#_channel_map
      00010F F5 82            [12]  879 	mov	dpl,a
      000111 E4               [12]  880 	clr	a
      000112 34s00            [12]  881 	addc	a,#(_channel_map >> 8)
      000114 F5 83            [12]  882 	mov	dph,a
      000116 E0               [24]  883 	movx	a,@dptr
      000117 F5 82            [12]  884 	mov	dpl,a
      000119 22               [24]  885 	ret
                                    886 ;------------------------------------------------------------
                                    887 ;Allocation info for local variables in function 'fhop_receive_channel'
                                    888 ;------------------------------------------------------------
                                    889 ;	radio/freq_hopping.c:109: fhop_receive_channel(void)
                                    890 ;	-----------------------------------------
                                    891 ;	 function fhop_receive_channel
                                    892 ;	-----------------------------------------
      00011A                        893 _fhop_receive_channel:
                                    894 ;	radio/freq_hopping.c:111: return channel_map[receive_channel];
      00011A 78r02            [12]  895 	mov	r0,#_receive_channel
      00011C E2               [24]  896 	movx	a,@r0
      00011D 24r00            [12]  897 	add	a,#_channel_map
      00011F F5 82            [12]  898 	mov	dpl,a
      000121 E4               [12]  899 	clr	a
      000122 34s00            [12]  900 	addc	a,#(_channel_map >> 8)
      000124 F5 83            [12]  901 	mov	dph,a
      000126 E0               [24]  902 	movx	a,@dptr
      000127 F5 82            [12]  903 	mov	dpl,a
      000129 22               [24]  904 	ret
                                    905 ;------------------------------------------------------------
                                    906 ;Allocation info for local variables in function 'fhop_window_change'
                                    907 ;------------------------------------------------------------
                                    908 ;	radio/freq_hopping.c:116: fhop_window_change(void)
                                    909 ;	-----------------------------------------
                                    910 ;	 function fhop_window_change
                                    911 ;	-----------------------------------------
      00012A                        912 _fhop_window_change:
                                    913 ;	radio/freq_hopping.c:118: transmit_channel = (transmit_channel + 1) % num_fh_channels;
      00012A 78r01            [12]  914 	mov	r0,#_transmit_channel
      00012C E2               [24]  915 	movx	a,@r0
      00012D FE               [12]  916 	mov	r6,a
      00012E 7F 00            [12]  917 	mov	r7,#0x00
      000130 0E               [12]  918 	inc	r6
      000131 BE 00 01         [24]  919 	cjne	r6,#0x00,00114$
      000134 0F               [12]  920 	inc	r7
      000135                        921 00114$:
      000135 78r00            [12]  922 	mov	r0,#_num_fh_channels
      000137 E2               [24]  923 	movx	a,@r0
      000138 FC               [12]  924 	mov	r4,a
      000139 7D 00            [12]  925 	mov	r5,#0x00
      00013B 90r00r00         [24]  926 	mov	dptr,#__modsint_PARM_2
      00013E EC               [12]  927 	mov	a,r4
      00013F F0               [24]  928 	movx	@dptr,a
      000140 ED               [12]  929 	mov	a,r5
      000141 A3               [24]  930 	inc	dptr
      000142 F0               [24]  931 	movx	@dptr,a
      000143 8E 82            [24]  932 	mov	dpl,r6
      000145 8F 83            [24]  933 	mov	dph,r7
      000147 C0 05            [24]  934 	push	ar5
      000149 C0 04            [24]  935 	push	ar4
      00014B 12r00r00         [24]  936 	lcall	__modsint
      00014E AE 82            [24]  937 	mov	r6,dpl
      000150 AF 83            [24]  938 	mov	r7,dph
      000152 D0 04            [24]  939 	pop	ar4
      000154 D0 05            [24]  940 	pop	ar5
      000156 78r01            [12]  941 	mov	r0,#_transmit_channel
      000158 EE               [12]  942 	mov	a,r6
      000159 F2               [24]  943 	movx	@r0,a
                                    944 ;	radio/freq_hopping.c:119: if (have_radio_lock) {
      00015A 30*00 07         [24]  945 	jnb	_have_radio_lock,00104$
                                    946 ;	radio/freq_hopping.c:122: receive_channel = transmit_channel;
      00015D 78r01            [12]  947 	mov	r0,#_transmit_channel
      00015F 79r02            [12]  948 	mov	r1,#_receive_channel
      000161 E2               [24]  949 	movx	a,@r0
      000162 F3               [24]  950 	movx	@r1,a
      000163 22               [24]  951 	ret
      000164                        952 00104$:
                                    953 ;	radio/freq_hopping.c:123: } else if (transmit_channel == 0) {
      000164 78r01            [12]  954 	mov	r0,#_transmit_channel
      000166 E2               [24]  955 	movx	a,@r0
      000167 70 22            [24]  956 	jnz	00106$
                                    957 ;	radio/freq_hopping.c:126: receive_channel = (receive_channel + 1) % num_fh_channels;
      000169 78r02            [12]  958 	mov	r0,#_receive_channel
      00016B E2               [24]  959 	movx	a,@r0
      00016C FE               [12]  960 	mov	r6,a
      00016D 7F 00            [12]  961 	mov	r7,#0x00
      00016F 0E               [12]  962 	inc	r6
      000170 BE 00 01         [24]  963 	cjne	r6,#0x00,00117$
      000173 0F               [12]  964 	inc	r7
      000174                        965 00117$:
      000174 90r00r00         [24]  966 	mov	dptr,#__modsint_PARM_2
      000177 EC               [12]  967 	mov	a,r4
      000178 F0               [24]  968 	movx	@dptr,a
      000179 ED               [12]  969 	mov	a,r5
      00017A A3               [24]  970 	inc	dptr
      00017B F0               [24]  971 	movx	@dptr,a
      00017C 8E 82            [24]  972 	mov	dpl,r6
      00017E 8F 83            [24]  973 	mov	dph,r7
      000180 12r00r00         [24]  974 	lcall	__modsint
      000183 AE 82            [24]  975 	mov	r6,dpl
      000185 AF 83            [24]  976 	mov	r7,dph
      000187 78r02            [12]  977 	mov	r0,#_receive_channel
      000189 EE               [12]  978 	mov	a,r6
      00018A F2               [24]  979 	movx	@r0,a
      00018B                        980 00106$:
      00018B 22               [24]  981 	ret
                                    982 ;------------------------------------------------------------
                                    983 ;Allocation info for local variables in function 'fhop_set_locked'
                                    984 ;------------------------------------------------------------
                                    985 ;	radio/freq_hopping.c:133: fhop_set_locked(bool locked)
                                    986 ;	-----------------------------------------
                                    987 ;	 function fhop_set_locked
                                    988 ;	-----------------------------------------
      00018C                        989 _fhop_set_locked:
                                    990 ;	radio/freq_hopping.c:140: have_radio_lock = locked;
      00018C A2*01            [12]  991 	mov	c,_fhop_set_locked_PARM_1
                                    992 ;	radio/freq_hopping.c:141: if (have_radio_lock) {
      00018E 92*00            [24]  993 	mov	_have_radio_lock,c
      000190 50 07            [24]  994 	jnc	00102$
                                    995 ;	radio/freq_hopping.c:145: transmit_channel = receive_channel;
      000192 78r02            [12]  996 	mov	r0,#_receive_channel
      000194 79r01            [12]  997 	mov	r1,#_transmit_channel
      000196 E2               [24]  998 	movx	a,@r0
      000197 F3               [24]  999 	movx	@r1,a
      000198 22               [24] 1000 	ret
      000199                       1001 00102$:
                                   1002 ;	radio/freq_hopping.c:148: receive_channel = (receive_channel+1) % num_fh_channels;
      000199 78r02            [12] 1003 	mov	r0,#_receive_channel
      00019B E2               [24] 1004 	movx	a,@r0
      00019C FE               [12] 1005 	mov	r6,a
      00019D 7F 00            [12] 1006 	mov	r7,#0x00
      00019F 0E               [12] 1007 	inc	r6
      0001A0 BE 00 01         [24] 1008 	cjne	r6,#0x00,00110$
      0001A3 0F               [12] 1009 	inc	r7
      0001A4                       1010 00110$:
      0001A4 78r00            [12] 1011 	mov	r0,#_num_fh_channels
      0001A6 90r00r00         [24] 1012 	mov	dptr,#__modsint_PARM_2
      0001A9 E2               [24] 1013 	movx	a,@r0
      0001AA F0               [24] 1014 	movx	@dptr,a
      0001AB E4               [12] 1015 	clr	a
      0001AC A3               [24] 1016 	inc	dptr
      0001AD F0               [24] 1017 	movx	@dptr,a
      0001AE 8E 82            [24] 1018 	mov	dpl,r6
      0001B0 8F 83            [24] 1019 	mov	dph,r7
      0001B2 12r00r00         [24] 1020 	lcall	__modsint
      0001B5 AE 82            [24] 1021 	mov	r6,dpl
      0001B7 78r02            [12] 1022 	mov	r0,#_receive_channel
      0001B9 EE               [12] 1023 	mov	a,r6
      0001BA F2               [24] 1024 	movx	@r0,a
      0001BB 22               [24] 1025 	ret
                                   1026 	.area CSEG    (CODE)
                                   1027 	.area CONST   (CODE)
                                   1028 	.area XINIT   (CODE)
                                   1029 	.area CABS    (ABS,CODE)
