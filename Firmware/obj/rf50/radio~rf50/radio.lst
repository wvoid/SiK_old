                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Sep  7 2022) (Linux)
                                      4 ; This file was generated Wed Sep  7 10:05:05 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module radio
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _Receiver_ISR
                                     13 	.globl _delay_msec
                                     14 	.globl _delay_expired
                                     15 	.globl _delay_set
                                     16 	.globl _timer2_tick
                                     17 	.globl _panic
                                     18 	.globl _param_get
                                     19 	.globl _memcpy
                                     20 	.globl _SDN
                                     21 	.globl _NSS1
                                     22 	.globl _IRQ
                                     23 	.globl _BUTTON_DOWN
                                     24 	.globl _BUTTON_UP
                                     25 	.globl _BUTTON_ENTER
                                     26 	.globl _LED_GREEN
                                     27 	.globl _LED_RED
                                     28 	.globl _SPI0EN
                                     29 	.globl _TXBMT0
                                     30 	.globl _NSS0MD0
                                     31 	.globl _NSS0MD1
                                     32 	.globl _RXOVRN0
                                     33 	.globl _MODF0
                                     34 	.globl _WCOL0
                                     35 	.globl _SPIF0
                                     36 	.globl _AD0CM0
                                     37 	.globl _AD0CM1
                                     38 	.globl _AD0CM2
                                     39 	.globl _AD0WINT
                                     40 	.globl _AD0BUSY
                                     41 	.globl _AD0INT
                                     42 	.globl _BURSTEN
                                     43 	.globl _AD0EN
                                     44 	.globl _CCF0
                                     45 	.globl _CCF1
                                     46 	.globl _CCF2
                                     47 	.globl _CCF3
                                     48 	.globl _CCF4
                                     49 	.globl _CCF5
                                     50 	.globl _CR
                                     51 	.globl _CF
                                     52 	.globl _P
                                     53 	.globl _F1
                                     54 	.globl _OV
                                     55 	.globl _RS0
                                     56 	.globl _RS1
                                     57 	.globl _F0
                                     58 	.globl _AC
                                     59 	.globl _CY
                                     60 	.globl _T2XCLK
                                     61 	.globl _T2RCLK
                                     62 	.globl _TR2
                                     63 	.globl _T2SPLIT
                                     64 	.globl _TF2CEN
                                     65 	.globl _TF2LEN
                                     66 	.globl _TF2L
                                     67 	.globl _TF2H
                                     68 	.globl _SI
                                     69 	.globl _ACK
                                     70 	.globl _ARBLOST
                                     71 	.globl _ACKRQ
                                     72 	.globl _STO
                                     73 	.globl _STA
                                     74 	.globl _TXMODE
                                     75 	.globl _MASTER
                                     76 	.globl _PX0
                                     77 	.globl _PT0
                                     78 	.globl _PX1
                                     79 	.globl _PT1
                                     80 	.globl _PS0
                                     81 	.globl _PT2
                                     82 	.globl _PSPI0
                                     83 	.globl _SPI1EN
                                     84 	.globl _TXBMT1
                                     85 	.globl _NSS1MD0
                                     86 	.globl _NSS1MD1
                                     87 	.globl _RXOVRN1
                                     88 	.globl _MODF1
                                     89 	.globl _WCOL1
                                     90 	.globl _SPIF1
                                     91 	.globl _EX0
                                     92 	.globl _ET0
                                     93 	.globl _EX1
                                     94 	.globl _ET1
                                     95 	.globl _ES0
                                     96 	.globl _ET2
                                     97 	.globl _ESPI0
                                     98 	.globl _EA
                                     99 	.globl _RI0
                                    100 	.globl _TI0
                                    101 	.globl _RB80
                                    102 	.globl _TB80
                                    103 	.globl _REN0
                                    104 	.globl _MCE0
                                    105 	.globl _S0MODE
                                    106 	.globl _CRC0VAL
                                    107 	.globl _CRC0INIT
                                    108 	.globl _CRC0SEL
                                    109 	.globl _IT0
                                    110 	.globl _IE0
                                    111 	.globl _IT1
                                    112 	.globl _IE1
                                    113 	.globl _TR0
                                    114 	.globl _TF0
                                    115 	.globl _TR1
                                    116 	.globl _TF1
                                    117 	.globl _PCA0CP4
                                    118 	.globl _PCA0CP0
                                    119 	.globl _PCA0
                                    120 	.globl _PCA0CP3
                                    121 	.globl _PCA0CP2
                                    122 	.globl _PCA0CP1
                                    123 	.globl _PCA0CP5
                                    124 	.globl _TMR2
                                    125 	.globl _TMR2RL
                                    126 	.globl _ADC0LT
                                    127 	.globl _ADC0GT
                                    128 	.globl _ADC0
                                    129 	.globl _TMR3
                                    130 	.globl _TMR3RL
                                    131 	.globl _TOFF
                                    132 	.globl _DP
                                    133 	.globl _VDM0CN
                                    134 	.globl _PCA0CPH4
                                    135 	.globl _PCA0CPL4
                                    136 	.globl _PCA0CPH0
                                    137 	.globl _PCA0CPL0
                                    138 	.globl _PCA0H
                                    139 	.globl _PCA0L
                                    140 	.globl _SPI0CN
                                    141 	.globl _EIP2
                                    142 	.globl _EIP1
                                    143 	.globl _SMB0ADM
                                    144 	.globl _SMB0ADR
                                    145 	.globl _P2MDIN
                                    146 	.globl _P1MDIN
                                    147 	.globl _P0MDIN
                                    148 	.globl _B
                                    149 	.globl _RSTSRC
                                    150 	.globl _PCA0CPH3
                                    151 	.globl _PCA0CPL3
                                    152 	.globl _PCA0CPH2
                                    153 	.globl _PCA0CPL2
                                    154 	.globl _PCA0CPH1
                                    155 	.globl _PCA0CPL1
                                    156 	.globl _ADC0CN
                                    157 	.globl _EIE2
                                    158 	.globl _EIE1
                                    159 	.globl _FLWR
                                    160 	.globl _IT01CF
                                    161 	.globl _XBR2
                                    162 	.globl _XBR1
                                    163 	.globl _XBR0
                                    164 	.globl _ACC
                                    165 	.globl _PCA0PWM
                                    166 	.globl _PCA0CPM4
                                    167 	.globl _PCA0CPM3
                                    168 	.globl _PCA0CPM2
                                    169 	.globl _PCA0CPM1
                                    170 	.globl _PCA0CPM0
                                    171 	.globl _PCA0MD
                                    172 	.globl _PCA0CN
                                    173 	.globl _P0MAT
                                    174 	.globl _P2SKIP
                                    175 	.globl _P1SKIP
                                    176 	.globl _P0SKIP
                                    177 	.globl _PCA0CPH5
                                    178 	.globl _PCA0CPL5
                                    179 	.globl _REF0CN
                                    180 	.globl _PSW
                                    181 	.globl _P1MAT
                                    182 	.globl _PCA0CPM5
                                    183 	.globl _TMR2H
                                    184 	.globl _TMR2L
                                    185 	.globl _TMR2RLH
                                    186 	.globl _TMR2RLL
                                    187 	.globl _REG0CN
                                    188 	.globl _TMR2CN
                                    189 	.globl _P0MASK
                                    190 	.globl _ADC0LTH
                                    191 	.globl _ADC0LTL
                                    192 	.globl _ADC0GTH
                                    193 	.globl _ADC0GTL
                                    194 	.globl _SMB0DAT
                                    195 	.globl _SMB0CF
                                    196 	.globl _SMB0CN
                                    197 	.globl _P1MASK
                                    198 	.globl _ADC0H
                                    199 	.globl _ADC0L
                                    200 	.globl _ADC0TK
                                    201 	.globl _ADC0CF
                                    202 	.globl _ADC0MX
                                    203 	.globl _ADC0PWR
                                    204 	.globl _ADC0AC
                                    205 	.globl _IREF0CN
                                    206 	.globl _IP
                                    207 	.globl _FLKEY
                                    208 	.globl _FLSCL
                                    209 	.globl _PMU0CF
                                    210 	.globl _OSCICL
                                    211 	.globl _OSCICN
                                    212 	.globl _OSCXCN
                                    213 	.globl _SPI1CN
                                    214 	.globl _ONESHOT
                                    215 	.globl _EMI0TC
                                    216 	.globl _RTC0KEY
                                    217 	.globl _RTC0DAT
                                    218 	.globl _RTC0ADR
                                    219 	.globl _EMI0CF
                                    220 	.globl _EMI0CN
                                    221 	.globl _CLKSEL
                                    222 	.globl _IE
                                    223 	.globl _SFRPAGE
                                    224 	.globl _P2DRV
                                    225 	.globl _P2MDOUT
                                    226 	.globl _P1DRV
                                    227 	.globl _P1MDOUT
                                    228 	.globl _P0DRV
                                    229 	.globl _P0MDOUT
                                    230 	.globl _SPI0DAT
                                    231 	.globl _SPI0CKR
                                    232 	.globl _SPI0CFG
                                    233 	.globl _P2
                                    234 	.globl _CPT0MX
                                    235 	.globl _CPT1MX
                                    236 	.globl _CPT0MD
                                    237 	.globl _CPT1MD
                                    238 	.globl _CPT0CN
                                    239 	.globl _CPT1CN
                                    240 	.globl _SBUF0
                                    241 	.globl _SCON0
                                    242 	.globl _CRC0CNT
                                    243 	.globl _DC0CN
                                    244 	.globl _CRC0AUTO
                                    245 	.globl _DC0CF
                                    246 	.globl _TMR3H
                                    247 	.globl _CRC0FLIP
                                    248 	.globl _TMR3L
                                    249 	.globl _CRC0IN
                                    250 	.globl _TMR3RLH
                                    251 	.globl _CRC0CN
                                    252 	.globl _TMR3RLL
                                    253 	.globl _CRC0DAT
                                    254 	.globl _TMR3CN
                                    255 	.globl _P1
                                    256 	.globl _PSCTL
                                    257 	.globl _CKCON
                                    258 	.globl _TH1
                                    259 	.globl _TH0
                                    260 	.globl _TL1
                                    261 	.globl _TL0
                                    262 	.globl _TMOD
                                    263 	.globl _TCON
                                    264 	.globl _PCON
                                    265 	.globl _TOFFH
                                    266 	.globl _SPI1DAT
                                    267 	.globl _TOFFL
                                    268 	.globl _SPI1CKR
                                    269 	.globl _SPI1CFG
                                    270 	.globl _DPH
                                    271 	.globl _DPL
                                    272 	.globl _SP
                                    273 	.globl _P0
                                    274 	.globl _radio_buffer
                                    275 	.globl _radio_transmit_PARM_3
                                    276 	.globl _radio_transmit_PARM_2
                                    277 	.globl _radio_receive_packet_PARM_2
                                    278 	.globl _settings
                                    279 	.globl _netid
                                    280 	.globl _last_rssi
                                    281 	.globl _partial_packet_length
                                    282 	.globl _receive_packet_length
                                    283 	.globl _radio_receive_packet
                                    284 	.globl _radio_receive_in_progress
                                    285 	.globl _radio_preamble_detected
                                    286 	.globl _radio_last_rssi
                                    287 	.globl _radio_current_rssi
                                    288 	.globl _radio_air_rate
                                    289 	.globl _radio_transmit
                                    290 	.globl _radio_receiver_on
                                    291 	.globl _radio_initialise
                                    292 	.globl _radio_set_frequency
                                    293 	.globl _radio_set_channel_spacing
                                    294 	.globl _radio_set_channel
                                    295 	.globl _radio_get_channel
                                    296 	.globl _radio_configure
                                    297 	.globl _radio_set_transmit_power
                                    298 	.globl _radio_get_transmit_power
                                    299 	.globl _radio_set_network_id
                                    300 	.globl _radio_temperature
                                    301 	.globl _radio_set_diversity
                                    302 ;--------------------------------------------------------
                                    303 ; special function registers
                                    304 ;--------------------------------------------------------
                                    305 	.area RSEG    (ABS,DATA)
      000000                        306 	.org 0x0000
                           000080   307 _P0	=	0x0080
                           000081   308 _SP	=	0x0081
                           000082   309 _DPL	=	0x0082
                           000083   310 _DPH	=	0x0083
                           000084   311 _SPI1CFG	=	0x0084
                           000085   312 _SPI1CKR	=	0x0085
                           000085   313 _TOFFL	=	0x0085
                           000086   314 _SPI1DAT	=	0x0086
                           000086   315 _TOFFH	=	0x0086
                           000087   316 _PCON	=	0x0087
                           000088   317 _TCON	=	0x0088
                           000089   318 _TMOD	=	0x0089
                           00008A   319 _TL0	=	0x008a
                           00008B   320 _TL1	=	0x008b
                           00008C   321 _TH0	=	0x008c
                           00008D   322 _TH1	=	0x008d
                           00008E   323 _CKCON	=	0x008e
                           00008F   324 _PSCTL	=	0x008f
                           000090   325 _P1	=	0x0090
                           000091   326 _TMR3CN	=	0x0091
                           000091   327 _CRC0DAT	=	0x0091
                           000092   328 _TMR3RLL	=	0x0092
                           000092   329 _CRC0CN	=	0x0092
                           000093   330 _TMR3RLH	=	0x0093
                           000093   331 _CRC0IN	=	0x0093
                           000094   332 _TMR3L	=	0x0094
                           000095   333 _CRC0FLIP	=	0x0095
                           000095   334 _TMR3H	=	0x0095
                           000096   335 _DC0CF	=	0x0096
                           000096   336 _CRC0AUTO	=	0x0096
                           000097   337 _DC0CN	=	0x0097
                           000097   338 _CRC0CNT	=	0x0097
                           000098   339 _SCON0	=	0x0098
                           000099   340 _SBUF0	=	0x0099
                           00009A   341 _CPT1CN	=	0x009a
                           00009B   342 _CPT0CN	=	0x009b
                           00009C   343 _CPT1MD	=	0x009c
                           00009D   344 _CPT0MD	=	0x009d
                           00009E   345 _CPT1MX	=	0x009e
                           00009F   346 _CPT0MX	=	0x009f
                           0000A0   347 _P2	=	0x00a0
                           0000A1   348 _SPI0CFG	=	0x00a1
                           0000A2   349 _SPI0CKR	=	0x00a2
                           0000A3   350 _SPI0DAT	=	0x00a3
                           0000A4   351 _P0MDOUT	=	0x00a4
                           0000A4   352 _P0DRV	=	0x00a4
                           0000A5   353 _P1MDOUT	=	0x00a5
                           0000A5   354 _P1DRV	=	0x00a5
                           0000A6   355 _P2MDOUT	=	0x00a6
                           0000A6   356 _P2DRV	=	0x00a6
                           0000A7   357 _SFRPAGE	=	0x00a7
                           0000A8   358 _IE	=	0x00a8
                           0000A9   359 _CLKSEL	=	0x00a9
                           0000AA   360 _EMI0CN	=	0x00aa
                           0000AB   361 _EMI0CF	=	0x00ab
                           0000AC   362 _RTC0ADR	=	0x00ac
                           0000AD   363 _RTC0DAT	=	0x00ad
                           0000AE   364 _RTC0KEY	=	0x00ae
                           0000AF   365 _EMI0TC	=	0x00af
                           0000AF   366 _ONESHOT	=	0x00af
                           0000B0   367 _SPI1CN	=	0x00b0
                           0000B1   368 _OSCXCN	=	0x00b1
                           0000B2   369 _OSCICN	=	0x00b2
                           0000B3   370 _OSCICL	=	0x00b3
                           0000B5   371 _PMU0CF	=	0x00b5
                           0000B6   372 _FLSCL	=	0x00b6
                           0000B7   373 _FLKEY	=	0x00b7
                           0000B8   374 _IP	=	0x00b8
                           0000B9   375 _IREF0CN	=	0x00b9
                           0000BA   376 _ADC0AC	=	0x00ba
                           0000BA   377 _ADC0PWR	=	0x00ba
                           0000BB   378 _ADC0MX	=	0x00bb
                           0000BC   379 _ADC0CF	=	0x00bc
                           0000BD   380 _ADC0TK	=	0x00bd
                           0000BD   381 _ADC0L	=	0x00bd
                           0000BE   382 _ADC0H	=	0x00be
                           0000BF   383 _P1MASK	=	0x00bf
                           0000C0   384 _SMB0CN	=	0x00c0
                           0000C1   385 _SMB0CF	=	0x00c1
                           0000C2   386 _SMB0DAT	=	0x00c2
                           0000C3   387 _ADC0GTL	=	0x00c3
                           0000C4   388 _ADC0GTH	=	0x00c4
                           0000C5   389 _ADC0LTL	=	0x00c5
                           0000C6   390 _ADC0LTH	=	0x00c6
                           0000C7   391 _P0MASK	=	0x00c7
                           0000C8   392 _TMR2CN	=	0x00c8
                           0000C9   393 _REG0CN	=	0x00c9
                           0000CA   394 _TMR2RLL	=	0x00ca
                           0000CB   395 _TMR2RLH	=	0x00cb
                           0000CC   396 _TMR2L	=	0x00cc
                           0000CD   397 _TMR2H	=	0x00cd
                           0000CE   398 _PCA0CPM5	=	0x00ce
                           0000CF   399 _P1MAT	=	0x00cf
                           0000D0   400 _PSW	=	0x00d0
                           0000D1   401 _REF0CN	=	0x00d1
                           0000D2   402 _PCA0CPL5	=	0x00d2
                           0000D3   403 _PCA0CPH5	=	0x00d3
                           0000D4   404 _P0SKIP	=	0x00d4
                           0000D5   405 _P1SKIP	=	0x00d5
                           0000D6   406 _P2SKIP	=	0x00d6
                           0000D7   407 _P0MAT	=	0x00d7
                           0000D8   408 _PCA0CN	=	0x00d8
                           0000D9   409 _PCA0MD	=	0x00d9
                           0000DA   410 _PCA0CPM0	=	0x00da
                           0000DB   411 _PCA0CPM1	=	0x00db
                           0000DC   412 _PCA0CPM2	=	0x00dc
                           0000DD   413 _PCA0CPM3	=	0x00dd
                           0000DE   414 _PCA0CPM4	=	0x00de
                           0000DF   415 _PCA0PWM	=	0x00df
                           0000E0   416 _ACC	=	0x00e0
                           0000E1   417 _XBR0	=	0x00e1
                           0000E2   418 _XBR1	=	0x00e2
                           0000E3   419 _XBR2	=	0x00e3
                           0000E4   420 _IT01CF	=	0x00e4
                           0000E5   421 _FLWR	=	0x00e5
                           0000E6   422 _EIE1	=	0x00e6
                           0000E7   423 _EIE2	=	0x00e7
                           0000E8   424 _ADC0CN	=	0x00e8
                           0000E9   425 _PCA0CPL1	=	0x00e9
                           0000EA   426 _PCA0CPH1	=	0x00ea
                           0000EB   427 _PCA0CPL2	=	0x00eb
                           0000EC   428 _PCA0CPH2	=	0x00ec
                           0000ED   429 _PCA0CPL3	=	0x00ed
                           0000EE   430 _PCA0CPH3	=	0x00ee
                           0000EF   431 _RSTSRC	=	0x00ef
                           0000F0   432 _B	=	0x00f0
                           0000F1   433 _P0MDIN	=	0x00f1
                           0000F2   434 _P1MDIN	=	0x00f2
                           0000F3   435 _P2MDIN	=	0x00f3
                           0000F4   436 _SMB0ADR	=	0x00f4
                           0000F5   437 _SMB0ADM	=	0x00f5
                           0000F6   438 _EIP1	=	0x00f6
                           0000F7   439 _EIP2	=	0x00f7
                           0000F8   440 _SPI0CN	=	0x00f8
                           0000F9   441 _PCA0L	=	0x00f9
                           0000FA   442 _PCA0H	=	0x00fa
                           0000FB   443 _PCA0CPL0	=	0x00fb
                           0000FC   444 _PCA0CPH0	=	0x00fc
                           0000FD   445 _PCA0CPL4	=	0x00fd
                           0000FE   446 _PCA0CPH4	=	0x00fe
                           0000FF   447 _VDM0CN	=	0x00ff
                           008382   448 _DP	=	0x8382
                           008685   449 _TOFF	=	0x8685
                           009392   450 _TMR3RL	=	0x9392
                           009594   451 _TMR3	=	0x9594
                           00BEBD   452 _ADC0	=	0xbebd
                           00C4C3   453 _ADC0GT	=	0xc4c3
                           00C6C5   454 _ADC0LT	=	0xc6c5
                           00CBCA   455 _TMR2RL	=	0xcbca
                           00CDCC   456 _TMR2	=	0xcdcc
                           00D3D2   457 _PCA0CP5	=	0xd3d2
                           00EAE9   458 _PCA0CP1	=	0xeae9
                           00ECEB   459 _PCA0CP2	=	0xeceb
                           00EEED   460 _PCA0CP3	=	0xeeed
                           00FAF9   461 _PCA0	=	0xfaf9
                           00FCFB   462 _PCA0CP0	=	0xfcfb
                           00FEFD   463 _PCA0CP4	=	0xfefd
                                    464 ;--------------------------------------------------------
                                    465 ; special function bits
                                    466 ;--------------------------------------------------------
                                    467 	.area RSEG    (ABS,DATA)
      000000                        468 	.org 0x0000
                           00008F   469 _TF1	=	0x008f
                           00008E   470 _TR1	=	0x008e
                           00008D   471 _TF0	=	0x008d
                           00008C   472 _TR0	=	0x008c
                           00008B   473 _IE1	=	0x008b
                           00008A   474 _IT1	=	0x008a
                           000089   475 _IE0	=	0x0089
                           000088   476 _IT0	=	0x0088
                           000096   477 _CRC0SEL	=	0x0096
                           000095   478 _CRC0INIT	=	0x0095
                           000094   479 _CRC0VAL	=	0x0094
                           00009F   480 _S0MODE	=	0x009f
                           00009D   481 _MCE0	=	0x009d
                           00009C   482 _REN0	=	0x009c
                           00009B   483 _TB80	=	0x009b
                           00009A   484 _RB80	=	0x009a
                           000099   485 _TI0	=	0x0099
                           000098   486 _RI0	=	0x0098
                           0000AF   487 _EA	=	0x00af
                           0000AE   488 _ESPI0	=	0x00ae
                           0000AD   489 _ET2	=	0x00ad
                           0000AC   490 _ES0	=	0x00ac
                           0000AB   491 _ET1	=	0x00ab
                           0000AA   492 _EX1	=	0x00aa
                           0000A9   493 _ET0	=	0x00a9
                           0000A8   494 _EX0	=	0x00a8
                           0000B7   495 _SPIF1	=	0x00b7
                           0000B6   496 _WCOL1	=	0x00b6
                           0000B5   497 _MODF1	=	0x00b5
                           0000B4   498 _RXOVRN1	=	0x00b4
                           0000B3   499 _NSS1MD1	=	0x00b3
                           0000B2   500 _NSS1MD0	=	0x00b2
                           0000B1   501 _TXBMT1	=	0x00b1
                           0000B0   502 _SPI1EN	=	0x00b0
                           0000BE   503 _PSPI0	=	0x00be
                           0000BD   504 _PT2	=	0x00bd
                           0000BC   505 _PS0	=	0x00bc
                           0000BB   506 _PT1	=	0x00bb
                           0000BA   507 _PX1	=	0x00ba
                           0000B9   508 _PT0	=	0x00b9
                           0000B8   509 _PX0	=	0x00b8
                           0000C7   510 _MASTER	=	0x00c7
                           0000C6   511 _TXMODE	=	0x00c6
                           0000C5   512 _STA	=	0x00c5
                           0000C4   513 _STO	=	0x00c4
                           0000C3   514 _ACKRQ	=	0x00c3
                           0000C2   515 _ARBLOST	=	0x00c2
                           0000C1   516 _ACK	=	0x00c1
                           0000C0   517 _SI	=	0x00c0
                           0000CF   518 _TF2H	=	0x00cf
                           0000CE   519 _TF2L	=	0x00ce
                           0000CD   520 _TF2LEN	=	0x00cd
                           0000CC   521 _TF2CEN	=	0x00cc
                           0000CB   522 _T2SPLIT	=	0x00cb
                           0000CA   523 _TR2	=	0x00ca
                           0000C9   524 _T2RCLK	=	0x00c9
                           0000C8   525 _T2XCLK	=	0x00c8
                           0000D7   526 _CY	=	0x00d7
                           0000D6   527 _AC	=	0x00d6
                           0000D5   528 _F0	=	0x00d5
                           0000D4   529 _RS1	=	0x00d4
                           0000D3   530 _RS0	=	0x00d3
                           0000D2   531 _OV	=	0x00d2
                           0000D1   532 _F1	=	0x00d1
                           0000D0   533 _P	=	0x00d0
                           0000DF   534 _CF	=	0x00df
                           0000DE   535 _CR	=	0x00de
                           0000DD   536 _CCF5	=	0x00dd
                           0000DC   537 _CCF4	=	0x00dc
                           0000DB   538 _CCF3	=	0x00db
                           0000DA   539 _CCF2	=	0x00da
                           0000D9   540 _CCF1	=	0x00d9
                           0000D8   541 _CCF0	=	0x00d8
                           0000EF   542 _AD0EN	=	0x00ef
                           0000EE   543 _BURSTEN	=	0x00ee
                           0000ED   544 _AD0INT	=	0x00ed
                           0000EC   545 _AD0BUSY	=	0x00ec
                           0000EB   546 _AD0WINT	=	0x00eb
                           0000EA   547 _AD0CM2	=	0x00ea
                           0000E9   548 _AD0CM1	=	0x00e9
                           0000E8   549 _AD0CM0	=	0x00e8
                           0000FF   550 _SPIF0	=	0x00ff
                           0000FE   551 _WCOL0	=	0x00fe
                           0000FD   552 _MODF0	=	0x00fd
                           0000FC   553 _RXOVRN0	=	0x00fc
                           0000FB   554 _NSS0MD1	=	0x00fb
                           0000FA   555 _NSS0MD0	=	0x00fa
                           0000F9   556 _TXBMT0	=	0x00f9
                           0000F8   557 _SPI0EN	=	0x00f8
                           0000A0   558 _LED_RED	=	0x00a0
                           0000A5   559 _LED_GREEN	=	0x00a5
                           000086   560 _BUTTON_ENTER	=	0x0086
                           000095   561 _BUTTON_UP	=	0x0095
                           000096   562 _BUTTON_DOWN	=	0x0096
                           000087   563 _IRQ	=	0x0087
                           000094   564 _NSS1	=	0x0094
                           0000A6   565 _SDN	=	0x00a6
                                    566 ;--------------------------------------------------------
                                    567 ; overlayable register banks
                                    568 ;--------------------------------------------------------
                                    569 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        570 	.ds 8
                                    571 ;--------------------------------------------------------
                                    572 ; overlayable bit register bank
                                    573 ;--------------------------------------------------------
                                    574 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        575 bits:
      000000                        576 	.ds 1
                           008000   577 	b0 = bits[0]
                           008100   578 	b1 = bits[1]
                           008200   579 	b2 = bits[2]
                           008300   580 	b3 = bits[3]
                           008400   581 	b4 = bits[4]
                           008500   582 	b5 = bits[5]
                           008600   583 	b6 = bits[6]
                           008700   584 	b7 = bits[7]
                                    585 ;--------------------------------------------------------
                                    586 ; internal ram data
                                    587 ;--------------------------------------------------------
                                    588 	.area DSEG    (DATA)
                                    589 ;--------------------------------------------------------
                                    590 ; overlayable items in internal ram 
                                    591 ;--------------------------------------------------------
                                    592 	.area	OSEG    (OVR,DATA)
                                    593 ;--------------------------------------------------------
                                    594 ; indirectly addressable internal ram data
                                    595 ;--------------------------------------------------------
                                    596 	.area ISEG    (DATA)
                                    597 ;--------------------------------------------------------
                                    598 ; absolute internal ram data
                                    599 ;--------------------------------------------------------
                                    600 	.area IABS    (ABS,DATA)
                                    601 	.area IABS    (ABS,DATA)
                                    602 ;--------------------------------------------------------
                                    603 ; bit data
                                    604 ;--------------------------------------------------------
                                    605 	.area BSEG    (BIT)
      000000                        606 _packet_received:
      000000                        607 	.ds 1
      000001                        608 _preamble_detected:
      000001                        609 	.ds 1
      000002                        610 _radio_preamble_detected_EX0_saved_1_154:
      000002                        611 	.ds 1
      000003                        612 _radio_transmit_simple_transmit_started_1_167:
      000003                        613 	.ds 1
      000004                        614 _radio_transmit_ret_1_183:
      000004                        615 	.ds 1
      000005                        616 _radio_transmit_EX0_saved_1_183:
      000005                        617 	.ds 1
      000006                        618 _radio_initialise_sloc0_1_0:
      000006                        619 	.ds 1
                                    620 ;--------------------------------------------------------
                                    621 ; paged external ram data
                                    622 ;--------------------------------------------------------
                                    623 	.area PSEG    (PAG,XDATA)
      000000                        624 _receive_packet_length::
      000000                        625 	.ds 1
      000001                        626 _partial_packet_length::
      000001                        627 	.ds 1
      000002                        628 _last_rssi::
      000002                        629 	.ds 1
      000003                        630 _netid::
      000003                        631 	.ds 2
      000005                        632 _settings::
      000005                        633 	.ds 12
      000011                        634 _radio_receive_packet_PARM_2:
      000011                        635 	.ds 2
      000013                        636 _radio_write_transmit_fifo_PARM_2:
      000013                        637 	.ds 2
      000015                        638 _radio_transmit_simple_PARM_2:
      000015                        639 	.ds 2
      000017                        640 _radio_transmit_simple_PARM_3:
      000017                        641 	.ds 2
      000019                        642 _radio_transmit_PARM_2:
      000019                        643 	.ds 2
      00001B                        644 _radio_transmit_PARM_3:
      00001B                        645 	.ds 2
      00001D                        646 _scale_uint32_PARM_2:
      00001D                        647 	.ds 4
      000021                        648 _scale_uint32_value_1_238:
      000021                        649 	.ds 4
      000025                        650 _set_frequency_registers_frequency_1_246:
      000025                        651 	.ds 4
                                    652 ;--------------------------------------------------------
                                    653 ; external ram data
                                    654 ;--------------------------------------------------------
                                    655 	.area XSEG    (XDATA)
      000000                        656 _radio_buffer::
      000000                        657 	.ds 252
      0000FC                        658 _radio_receive_packet_length_1_140:
      0000FC                        659 	.ds 3
      0000FF                        660 _radio_transmit_length_1_182:
      0000FF                        661 	.ds 1
      000100                        662 _radio_set_channel_channel_1_196:
      000100                        663 	.ds 1
      000101                        664 _radio_set_transmit_power_power_1_220:
      000101                        665 	.ds 1
      000102                        666 _radio_set_transmit_power_i_1_221:
      000102                        667 	.ds 1
      000103                        668 _radio_set_network_id_id_1_226:
      000103                        669 	.ds 2
      000105                        670 _set_frequency_registers_band_1_247:
      000105                        671 	.ds 1
      000106                        672 _radio_set_diversity_state_1_252:
      000106                        673 	.ds 1
                                    674 ;--------------------------------------------------------
                                    675 ; absolute external ram data
                                    676 ;--------------------------------------------------------
                                    677 	.area XABS    (ABS,XDATA)
                                    678 ;--------------------------------------------------------
                                    679 ; external initialized ram data
                                    680 ;--------------------------------------------------------
                                    681 	.area XISEG   (XDATA)
                                    682 	.area HOME    (CODE)
                                    683 	.area GSINIT0 (CODE)
                                    684 	.area GSINIT1 (CODE)
                                    685 	.area GSINIT2 (CODE)
                                    686 	.area GSINIT3 (CODE)
                                    687 	.area GSINIT4 (CODE)
                                    688 	.area GSINIT5 (CODE)
                                    689 	.area GSINIT  (CODE)
                                    690 	.area GSFINAL (CODE)
                                    691 	.area CSEG    (CODE)
                                    692 ;--------------------------------------------------------
                                    693 ; global & static initialisations
                                    694 ;--------------------------------------------------------
                                    695 	.area HOME    (CODE)
                                    696 	.area GSINIT  (CODE)
                                    697 	.area GSFINAL (CODE)
                                    698 	.area GSINIT  (CODE)
                                    699 ;--------------------------------------------------------
                                    700 ; Home
                                    701 ;--------------------------------------------------------
                                    702 	.area HOME    (CODE)
                                    703 	.area HOME    (CODE)
                                    704 ;--------------------------------------------------------
                                    705 ; code
                                    706 ;--------------------------------------------------------
                                    707 	.area CSEG    (CODE)
                                    708 ;------------------------------------------------------------
                                    709 ;Allocation info for local variables in function 'radio_receive_packet'
                                    710 ;------------------------------------------------------------
                                    711 ;length                    Allocated with name '_radio_receive_packet_length_1_140'
                                    712 ;------------------------------------------------------------
                                    713 ;	radio/radio.c:78: radio_receive_packet(uint8_t *length, __xdata uint8_t * __pdata buf)
                                    714 ;	-----------------------------------------
                                    715 ;	 function radio_receive_packet
                                    716 ;	-----------------------------------------
      000000                        717 _radio_receive_packet:
                           000007   718 	ar7 = 0x07
                           000006   719 	ar6 = 0x06
                           000005   720 	ar5 = 0x05
                           000004   721 	ar4 = 0x04
                           000003   722 	ar3 = 0x03
                           000002   723 	ar2 = 0x02
                           000001   724 	ar1 = 0x01
                           000000   725 	ar0 = 0x00
      000000 AF F0            [24]  726 	mov	r7,b
      000002 AE 83            [24]  727 	mov	r6,dph
      000004 E5 82            [12]  728 	mov	a,dpl
      000006 90r00rFC         [24]  729 	mov	dptr,#_radio_receive_packet_length_1_140
      000009 F0               [24]  730 	movx	@dptr,a
      00000A EE               [12]  731 	mov	a,r6
      00000B A3               [24]  732 	inc	dptr
      00000C F0               [24]  733 	movx	@dptr,a
      00000D EF               [12]  734 	mov	a,r7
      00000E A3               [24]  735 	inc	dptr
      00000F F0               [24]  736 	movx	@dptr,a
                                    737 ;	radio/radio.c:87: if (!packet_received) {
      000010 20*00 02         [24]  738 	jb	_packet_received,00102$
                                    739 ;	radio/radio.c:88: return false;
      000013 C3               [12]  740 	clr	c
      000014 22               [24]  741 	ret
      000015                        742 00102$:
                                    743 ;	radio/radio.c:91: if (receive_packet_length > MAX_PACKET_LENGTH) {
      000015 78r00            [12]  744 	mov	r0,#_receive_packet_length
      000017 C3               [12]  745 	clr	c
      000018 E2               [24]  746 	movx	a,@r0
      000019 F5 F0            [12]  747 	mov	b,a
      00001B 74 FC            [12]  748 	mov	a,#0xFC
      00001D 95 F0            [12]  749 	subb	a,b
      00001F 50 05            [24]  750 	jnc	00104$
                                    751 ;	radio/radio.c:92: radio_receiver_on();
      000021 12r03r75         [24]  752 	lcall	_radio_receiver_on
                                    753 ;	radio/radio.c:93: goto failed;
      000024 80 45            [24]  754 	sjmp	00105$
      000026                        755 00104$:
                                    756 ;	radio/radio.c:108: *length = receive_packet_length;
      000026 90r00rFC         [24]  757 	mov	dptr,#_radio_receive_packet_length_1_140
      000029 E0               [24]  758 	movx	a,@dptr
      00002A FD               [12]  759 	mov	r5,a
      00002B A3               [24]  760 	inc	dptr
      00002C E0               [24]  761 	movx	a,@dptr
      00002D FE               [12]  762 	mov	r6,a
      00002E A3               [24]  763 	inc	dptr
      00002F E0               [24]  764 	movx	a,@dptr
      000030 FF               [12]  765 	mov	r7,a
      000031 8D 82            [24]  766 	mov	dpl,r5
      000033 8E 83            [24]  767 	mov	dph,r6
      000035 8F F0            [24]  768 	mov	b,r7
      000037 78r00            [12]  769 	mov	r0,#_receive_packet_length
      000039 E2               [24]  770 	movx	a,@r0
      00003A 12r00r00         [24]  771 	lcall	__gptrput
                                    772 ;	radio/radio.c:109: memcpy(buf, radio_buffer, receive_packet_length);
      00003D 78r11            [12]  773 	mov	r0,#_radio_receive_packet_PARM_2
      00003F E2               [24]  774 	movx	a,@r0
      000040 FD               [12]  775 	mov	r5,a
      000041 08               [12]  776 	inc	r0
      000042 E2               [24]  777 	movx	a,@r0
      000043 FE               [12]  778 	mov	r6,a
      000044 7F 00            [12]  779 	mov	r7,#0x00
      000046 90r00r00         [24]  780 	mov	dptr,#_memcpy_PARM_2
      000049 74r00            [12]  781 	mov	a,#_radio_buffer
      00004B F0               [24]  782 	movx	@dptr,a
      00004C 74s00            [12]  783 	mov	a,#(_radio_buffer >> 8)
      00004E A3               [24]  784 	inc	dptr
      00004F F0               [24]  785 	movx	@dptr,a
      000050 E4               [12]  786 	clr	a
      000051 A3               [24]  787 	inc	dptr
      000052 F0               [24]  788 	movx	@dptr,a
      000053 78r00            [12]  789 	mov	r0,#_receive_packet_length
      000055 90r00r00         [24]  790 	mov	dptr,#_memcpy_PARM_3
      000058 E2               [24]  791 	movx	a,@r0
      000059 F0               [24]  792 	movx	@dptr,a
      00005A E4               [12]  793 	clr	a
      00005B A3               [24]  794 	inc	dptr
      00005C F0               [24]  795 	movx	@dptr,a
      00005D 8D 82            [24]  796 	mov	dpl,r5
      00005F 8E 83            [24]  797 	mov	dph,r6
      000061 8F F0            [24]  798 	mov	b,r7
      000063 12r00r00         [24]  799 	lcall	_memcpy
                                    800 ;	radio/radio.c:112: radio_receiver_on();
      000066 12r03r75         [24]  801 	lcall	_radio_receiver_on
                                    802 ;	radio/radio.c:113: return true;
      000069 D3               [12]  803 	setb	c
                                    804 ;	radio/radio.c:187: failed:
      00006A 22               [24]  805 	ret
      00006B                        806 00105$:
                                    807 ;	radio/radio.c:188: if (errors.rx_errors != 0xFFFF) {
      00006B 78r00            [12]  808 	mov	r0,#_errors
      00006D E2               [24]  809 	movx	a,@r0
      00006E FE               [12]  810 	mov	r6,a
      00006F 08               [12]  811 	inc	r0
      000070 E2               [24]  812 	movx	a,@r0
      000071 FF               [12]  813 	mov	r7,a
      000072 BE FF 05         [24]  814 	cjne	r6,#0xFF,00121$
      000075 BF FF 02         [24]  815 	cjne	r7,#0xFF,00121$
      000078 80 0C            [24]  816 	sjmp	00107$
      00007A                        817 00121$:
                                    818 ;	radio/radio.c:189: errors.rx_errors++;
      00007A 0E               [12]  819 	inc	r6
      00007B BE 00 01         [24]  820 	cjne	r6,#0x00,00122$
      00007E 0F               [12]  821 	inc	r7
      00007F                        822 00122$:
      00007F 78r00            [12]  823 	mov	r0,#_errors
      000081 EE               [12]  824 	mov	a,r6
      000082 F2               [24]  825 	movx	@r0,a
      000083 08               [12]  826 	inc	r0
      000084 EF               [12]  827 	mov	a,r7
      000085 F2               [24]  828 	movx	@r0,a
      000086                        829 00107$:
                                    830 ;	radio/radio.c:191: return false;
      000086 C3               [12]  831 	clr	c
      000087 22               [24]  832 	ret
                                    833 ;------------------------------------------------------------
                                    834 ;Allocation info for local variables in function 'radio_write_transmit_fifo'
                                    835 ;------------------------------------------------------------
                                    836 ;n                         Allocated to registers r7 
                                    837 ;------------------------------------------------------------
                                    838 ;	radio/radio.c:198: radio_write_transmit_fifo(register uint8_t n, __xdata uint8_t * __pdata buffer)
                                    839 ;	-----------------------------------------
                                    840 ;	 function radio_write_transmit_fifo
                                    841 ;	-----------------------------------------
      000088                        842 _radio_write_transmit_fifo:
      000088 AF 82            [24]  843 	mov	r7,dpl
                                    844 ;	radio/radio.c:200: RADIO_PAGE();
      00008A 75 A7 00         [24]  845 	mov	_SFRPAGE,#0x00
                                    846 ;	radio/radio.c:202: NSS1 = 0;
      00008D C2 94            [12]  847 	clr	_NSS1
                                    848 ;	radio/radio.c:203: SPIF1 = 0;
      00008F C2 B7            [12]  849 	clr	_SPIF1
                                    850 ;	radio/radio.c:204: SPI1DAT = (0x80 | EZRADIOPRO_FIFO_ACCESS);
      000091 75 86 FF         [24]  851 	mov	_SPI1DAT,#0xFF
                                    852 ;	radio/radio.c:206: while (n--) {
      000094 78r13            [12]  853 	mov	r0,#_radio_write_transmit_fifo_PARM_2
      000096 E2               [24]  854 	movx	a,@r0
      000097 FD               [12]  855 	mov	r5,a
      000098 08               [12]  856 	inc	r0
      000099 E2               [24]  857 	movx	a,@r0
      00009A FE               [12]  858 	mov	r6,a
      00009B                        859 00104$:
      00009B 8F 04            [24]  860 	mov	ar4,r7
      00009D 1F               [12]  861 	dec	r7
      00009E EC               [12]  862 	mov	a,r4
      00009F 60 11            [24]  863 	jz	00107$
                                    864 ;	radio/radio.c:207: while (!TXBMT1) /* noop */;
      0000A1                        865 00101$:
      0000A1 30 B1 FD         [24]  866 	jnb	_TXBMT1,00101$
                                    867 ;	radio/radio.c:208: SPI1DAT = *buffer++;
      0000A4 8D 82            [24]  868 	mov	dpl,r5
      0000A6 8E 83            [24]  869 	mov	dph,r6
      0000A8 E0               [24]  870 	movx	a,@dptr
      0000A9 F5 86            [12]  871 	mov	_SPI1DAT,a
      0000AB A3               [24]  872 	inc	dptr
      0000AC AD 82            [24]  873 	mov	r5,dpl
      0000AE AE 83            [24]  874 	mov	r6,dph
                                    875 ;	radio/radio.c:211: while (!TXBMT1) /* noop */;
      0000B0 80 E9            [24]  876 	sjmp	00104$
      0000B2                        877 00107$:
      0000B2 30 B1 FD         [24]  878 	jnb	_TXBMT1,00107$
                                    879 ;	radio/radio.c:212: while ((SPI1CFG & 0x80) == 0x80);
      0000B5                        880 00110$:
      0000B5 74 80            [12]  881 	mov	a,#0x80
      0000B7 55 84            [12]  882 	anl	a,_SPI1CFG
      0000B9 FF               [12]  883 	mov	r7,a
      0000BA BF 80 02         [24]  884 	cjne	r7,#0x80,00137$
      0000BD 80 F6            [24]  885 	sjmp	00110$
      0000BF                        886 00137$:
                                    887 ;	radio/radio.c:214: SPIF1 = 0;
      0000BF C2 B7            [12]  888 	clr	_SPIF1
                                    889 ;	radio/radio.c:215: NSS1 = 1;
      0000C1 D2 94            [12]  890 	setb	_NSS1
                                    891 ;	radio/radio.c:217: SFRPAGE = LEGACY_PAGE;
      0000C3 75 A7 00         [24]  892 	mov	_SFRPAGE,#0x00
      0000C6 22               [24]  893 	ret
                                    894 ;------------------------------------------------------------
                                    895 ;Allocation info for local variables in function 'radio_receive_in_progress'
                                    896 ;------------------------------------------------------------
                                    897 ;	radio/radio.c:223: radio_receive_in_progress(void)
                                    898 ;	-----------------------------------------
                                    899 ;	 function radio_receive_in_progress
                                    900 ;	-----------------------------------------
      0000C7                        901 _radio_receive_in_progress:
                                    902 ;	radio/radio.c:225: if (packet_received ||
      0000C7 20*00 05         [24]  903 	jb	_packet_received,00101$
                                    904 ;	radio/radio.c:226: partial_packet_length != 0) {
      0000CA 78r01            [12]  905 	mov	r0,#_partial_packet_length
      0000CC E2               [24]  906 	movx	a,@r0
      0000CD 60 02            [24]  907 	jz	00102$
      0000CF                        908 00101$:
                                    909 ;	radio/radio.c:227: return true;
      0000CF D3               [12]  910 	setb	c
      0000D0 22               [24]  911 	ret
      0000D1                        912 00102$:
                                    913 ;	radio/radio.c:231: if (register_read(EZRADIOPRO_EZMAC_STATUS) & EZRADIOPRO_PKRX) {
      0000D1 75 82 31         [24]  914 	mov	dpl,#0x31
      0000D4 12r08r44         [24]  915 	lcall	_register_read
      0000D7 E5 82            [12]  916 	mov	a,dpl
      0000D9 30 E4 02         [24]  917 	jnb	acc.4,00105$
                                    918 ;	radio/radio.c:232: return true;
      0000DC D3               [12]  919 	setb	c
      0000DD 22               [24]  920 	ret
      0000DE                        921 00105$:
                                    922 ;	radio/radio.c:234: return false;
      0000DE C3               [12]  923 	clr	c
      0000DF 22               [24]  924 	ret
                                    925 ;------------------------------------------------------------
                                    926 ;Allocation info for local variables in function 'radio_preamble_detected'
                                    927 ;------------------------------------------------------------
                                    928 ;	radio/radio.c:241: radio_preamble_detected(void)
                                    929 ;	-----------------------------------------
                                    930 ;	 function radio_preamble_detected
                                    931 ;	-----------------------------------------
      0000E0                        932 _radio_preamble_detected:
                                    933 ;	radio/radio.c:243: EX0_SAVE_DISABLE;
      0000E0 A2 A8            [12]  934 	mov	c,_EX0
      0000E2 92*02            [24]  935 	mov	_radio_preamble_detected_EX0_saved_1_154,c
      0000E4 C2 A8            [12]  936 	clr	_EX0
                                    937 ;	radio/radio.c:244: if (preamble_detected) {
                                    938 ;	radio/radio.c:245: preamble_detected = 0;
      0000E6 10*01 02         [24]  939 	jbc	_preamble_detected,00108$
      0000E9 80 06            [24]  940 	sjmp	00102$
      0000EB                        941 00108$:
                                    942 ;	radio/radio.c:246: EX0_RESTORE;
      0000EB A2*02            [12]  943 	mov	c,_radio_preamble_detected_EX0_saved_1_154
      0000ED 92 A8            [24]  944 	mov	_EX0,c
                                    945 ;	radio/radio.c:247: return true;
      0000EF D3               [12]  946 	setb	c
      0000F0 22               [24]  947 	ret
      0000F1                        948 00102$:
                                    949 ;	radio/radio.c:249: EX0_RESTORE;
      0000F1 A2*02            [12]  950 	mov	c,_radio_preamble_detected_EX0_saved_1_154
      0000F3 92 A8            [24]  951 	mov	_EX0,c
                                    952 ;	radio/radio.c:250: return false;
      0000F5 C3               [12]  953 	clr	c
      0000F6 22               [24]  954 	ret
                                    955 ;------------------------------------------------------------
                                    956 ;Allocation info for local variables in function 'radio_last_rssi'
                                    957 ;------------------------------------------------------------
                                    958 ;	radio/radio.c:258: radio_last_rssi(void)
                                    959 ;	-----------------------------------------
                                    960 ;	 function radio_last_rssi
                                    961 ;	-----------------------------------------
      0000F7                        962 _radio_last_rssi:
                                    963 ;	radio/radio.c:260: return last_rssi;
      0000F7 78r02            [12]  964 	mov	r0,#_last_rssi
      0000F9 E2               [24]  965 	movx	a,@r0
      0000FA F5 82            [12]  966 	mov	dpl,a
      0000FC 22               [24]  967 	ret
                                    968 ;------------------------------------------------------------
                                    969 ;Allocation info for local variables in function 'radio_current_rssi'
                                    970 ;------------------------------------------------------------
                                    971 ;	radio/radio.c:266: radio_current_rssi(void)
                                    972 ;	-----------------------------------------
                                    973 ;	 function radio_current_rssi
                                    974 ;	-----------------------------------------
      0000FD                        975 _radio_current_rssi:
                                    976 ;	radio/radio.c:268: return register_read(EZRADIOPRO_RECEIVED_SIGNAL_STRENGTH_INDICATOR);
      0000FD 75 82 26         [24]  977 	mov	dpl,#0x26
      000100 02r08r44         [24]  978 	ljmp	_register_read
                                    979 ;------------------------------------------------------------
                                    980 ;Allocation info for local variables in function 'radio_air_rate'
                                    981 ;------------------------------------------------------------
                                    982 ;	radio/radio.c:274: radio_air_rate(void)
                                    983 ;	-----------------------------------------
                                    984 ;	 function radio_air_rate
                                    985 ;	-----------------------------------------
      000103                        986 _radio_air_rate:
                                    987 ;	radio/radio.c:276: return settings.air_data_rate;
      000103 78r0D            [12]  988 	mov	r0,#(_settings + 0x0008)
      000105 E2               [24]  989 	movx	a,@r0
      000106 F5 82            [12]  990 	mov	dpl,a
      000108 22               [24]  991 	ret
                                    992 ;------------------------------------------------------------
                                    993 ;Allocation info for local variables in function 'radio_clear_transmit_fifo'
                                    994 ;------------------------------------------------------------
                                    995 ;control                   Allocated to registers r7 
                                    996 ;------------------------------------------------------------
                                    997 ;	radio/radio.c:282: radio_clear_transmit_fifo(void)
                                    998 ;	-----------------------------------------
                                    999 ;	 function radio_clear_transmit_fifo
                                   1000 ;	-----------------------------------------
      000109                       1001 _radio_clear_transmit_fifo:
                                   1002 ;	radio/radio.c:285: control = register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2);
      000109 75 82 08         [24] 1003 	mov	dpl,#0x08
      00010C 12r08r44         [24] 1004 	lcall	_register_read
      00010F AF 82            [24] 1005 	mov	r7,dpl
                                   1006 ;	radio/radio.c:286: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control | EZRADIOPRO_FFCLRTX);
      000111 74 01            [12] 1007 	mov	a,#0x01
      000113 4F               [12] 1008 	orl	a,r7
      000114 FE               [12] 1009 	mov	r6,a
      000115 C0 07            [24] 1010 	push	ar7
      000117 C0 06            [24] 1011 	push	ar6
      000119 75 82 08         [24] 1012 	mov	dpl,#0x08
      00011C 12r08r0E         [24] 1013 	lcall	_register_write
      00011F 15 81            [12] 1014 	dec	sp
      000121 D0 07            [24] 1015 	pop	ar7
                                   1016 ;	radio/radio.c:287: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control & ~EZRADIOPRO_FFCLRTX);
      000123 53 07 FE         [24] 1017 	anl	ar7,#0xFE
      000126 C0 07            [24] 1018 	push	ar7
      000128 75 82 08         [24] 1019 	mov	dpl,#0x08
      00012B 12r08r0E         [24] 1020 	lcall	_register_write
      00012E 15 81            [12] 1021 	dec	sp
      000130 22               [24] 1022 	ret
                                   1023 ;------------------------------------------------------------
                                   1024 ;Allocation info for local variables in function 'radio_clear_receive_fifo'
                                   1025 ;------------------------------------------------------------
                                   1026 ;control                   Allocated to registers r7 
                                   1027 ;------------------------------------------------------------
                                   1028 ;	radio/radio.c:294: radio_clear_receive_fifo(void) __reentrant
                                   1029 ;	-----------------------------------------
                                   1030 ;	 function radio_clear_receive_fifo
                                   1031 ;	-----------------------------------------
      000131                       1032 _radio_clear_receive_fifo:
                                   1033 ;	radio/radio.c:297: control = register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2);
      000131 75 82 08         [24] 1034 	mov	dpl,#0x08
      000134 12r08r44         [24] 1035 	lcall	_register_read
      000137 AF 82            [24] 1036 	mov	r7,dpl
                                   1037 ;	radio/radio.c:298: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control | EZRADIOPRO_FFCLRRX);
      000139 74 02            [12] 1038 	mov	a,#0x02
      00013B 4F               [12] 1039 	orl	a,r7
      00013C FE               [12] 1040 	mov	r6,a
      00013D C0 07            [24] 1041 	push	ar7
      00013F C0 06            [24] 1042 	push	ar6
      000141 75 82 08         [24] 1043 	mov	dpl,#0x08
      000144 12r08r0E         [24] 1044 	lcall	_register_write
      000147 15 81            [12] 1045 	dec	sp
      000149 D0 07            [24] 1046 	pop	ar7
                                   1047 ;	radio/radio.c:299: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, control & ~EZRADIOPRO_FFCLRRX);
      00014B 53 07 FD         [24] 1048 	anl	ar7,#0xFD
      00014E C0 07            [24] 1049 	push	ar7
      000150 75 82 08         [24] 1050 	mov	dpl,#0x08
      000153 12r08r0E         [24] 1051 	lcall	_register_write
      000156 15 81            [12] 1052 	dec	sp
      000158 22               [24] 1053 	ret
                                   1054 ;------------------------------------------------------------
                                   1055 ;Allocation info for local variables in function 'radio_transmit_simple'
                                   1056 ;------------------------------------------------------------
                                   1057 ;length                    Allocated to registers r7 
                                   1058 ;n                         Allocated to registers r6 
                                   1059 ;status                    Allocated to registers r3 
                                   1060 ;------------------------------------------------------------
                                   1061 ;	radio/radio.c:311: radio_transmit_simple(__data uint8_t length, __xdata uint8_t * __pdata buf, __pdata uint16_t timeout_ticks)
                                   1062 ;	-----------------------------------------
                                   1063 ;	 function radio_transmit_simple
                                   1064 ;	-----------------------------------------
      000159                       1065 _radio_transmit_simple:
                                   1066 ;	radio/radio.c:317: if (length > sizeof(radio_buffer)) {
      000159 E5 82            [12] 1067 	mov	a,dpl
      00015B FF               [12] 1068 	mov	r7,a
      00015C 24 03            [12] 1069 	add	a,#0xff - 0xFC
      00015E 50 19            [24] 1070 	jnc	00102$
                                   1071 ;	radio/radio.c:318: panic("oversized packet");
      000160 C0 07            [24] 1072 	push	ar7
      000162 74r00            [12] 1073 	mov	a,#___str_0
      000164 C0 E0            [24] 1074 	push	acc
      000166 74s00            [12] 1075 	mov	a,#(___str_0 >> 8)
      000168 C0 E0            [24] 1076 	push	acc
      00016A 74 80            [12] 1077 	mov	a,#0x80
      00016C C0 E0            [24] 1078 	push	acc
      00016E 12r00r00         [24] 1079 	lcall	_panic
      000171 15 81            [12] 1080 	dec	sp
      000173 15 81            [12] 1081 	dec	sp
      000175 15 81            [12] 1082 	dec	sp
      000177 D0 07            [24] 1083 	pop	ar7
      000179                       1084 00102$:
                                   1085 ;	radio/radio.c:321: radio_clear_transmit_fifo();
      000179 C0 07            [24] 1086 	push	ar7
      00017B 12r01r09         [24] 1087 	lcall	_radio_clear_transmit_fifo
      00017E D0 07            [24] 1088 	pop	ar7
                                   1089 ;	radio/radio.c:323: register_write(EZRADIOPRO_TRANSMIT_PACKET_LENGTH, length);
      000180 C0 07            [24] 1090 	push	ar7
      000182 C0 07            [24] 1091 	push	ar7
      000184 75 82 3E         [24] 1092 	mov	dpl,#0x3E
      000187 12r08r0E         [24] 1093 	lcall	_register_write
      00018A 15 81            [12] 1094 	dec	sp
      00018C D0 07            [24] 1095 	pop	ar7
                                   1096 ;	radio/radio.c:326: n = length;
                                   1097 ;	radio/radio.c:327: if (n > TX_FIFO_THRESHOLD_LOW) {
      00018E EF               [12] 1098 	mov	a,r7
      00018F FE               [12] 1099 	mov	r6,a
      000190 24 DF            [12] 1100 	add	a,#0xff - 0x20
      000192 50 02            [24] 1101 	jnc	00104$
                                   1102 ;	radio/radio.c:328: n = TX_FIFO_THRESHOLD_LOW;
      000194 7E 20            [12] 1103 	mov	r6,#0x20
      000196                       1104 00104$:
                                   1105 ;	radio/radio.c:330: radio_write_transmit_fifo(n, buf);
      000196 78r15            [12] 1106 	mov	r0,#_radio_transmit_simple_PARM_2
      000198 79r13            [12] 1107 	mov	r1,#_radio_write_transmit_fifo_PARM_2
      00019A E2               [24] 1108 	movx	a,@r0
      00019B F3               [24] 1109 	movx	@r1,a
      00019C 08               [12] 1110 	inc	r0
      00019D E2               [24] 1111 	movx	a,@r0
      00019E 09               [12] 1112 	inc	r1
      00019F F3               [24] 1113 	movx	@r1,a
      0001A0 8E 82            [24] 1114 	mov	dpl,r6
      0001A2 C0 07            [24] 1115 	push	ar7
      0001A4 C0 06            [24] 1116 	push	ar6
      0001A6 12r00r88         [24] 1117 	lcall	_radio_write_transmit_fifo
      0001A9 D0 06            [24] 1118 	pop	ar6
      0001AB D0 07            [24] 1119 	pop	ar7
                                   1120 ;	radio/radio.c:331: length -= n;
      0001AD EF               [12] 1121 	mov	a,r7
      0001AE C3               [12] 1122 	clr	c
      0001AF 9E               [12] 1123 	subb	a,r6
      0001B0 FF               [12] 1124 	mov	r7,a
                                   1125 ;	radio/radio.c:332: buf += n;
      0001B1 78r15            [12] 1126 	mov	r0,#_radio_transmit_simple_PARM_2
      0001B3 E2               [24] 1127 	movx	a,@r0
      0001B4 2E               [12] 1128 	add	a,r6
      0001B5 F2               [24] 1129 	movx	@r0,a
      0001B6 08               [12] 1130 	inc	r0
      0001B7 E2               [24] 1131 	movx	a,@r0
      0001B8 34 00            [12] 1132 	addc	a,#0x00
      0001BA F2               [24] 1133 	movx	@r0,a
                                   1134 ;	radio/radio.c:335: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      0001BB C0 07            [24] 1135 	push	ar7
      0001BD E4               [12] 1136 	clr	a
      0001BE C0 E0            [24] 1137 	push	acc
      0001C0 75 82 05         [24] 1138 	mov	dpl,#0x05
      0001C3 12r08r0E         [24] 1139 	lcall	_register_write
      0001C6 15 81            [12] 1140 	dec	sp
                                   1141 ;	radio/radio.c:336: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0);
      0001C8 E4               [12] 1142 	clr	a
      0001C9 C0 E0            [24] 1143 	push	acc
      0001CB 75 82 06         [24] 1144 	mov	dpl,#0x06
      0001CE 12r08r0E         [24] 1145 	lcall	_register_write
      0001D1 15 81            [12] 1146 	dec	sp
                                   1147 ;	radio/radio.c:338: preamble_detected = 0;
      0001D3 C2*01            [12] 1148 	clr	_preamble_detected
                                   1149 ;	radio/radio.c:339: transmit_started = false;
      0001D5 C2*03            [12] 1150 	clr	_radio_transmit_simple_transmit_started_1_167
                                   1151 ;	radio/radio.c:342: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, EZRADIOPRO_TXON | EZRADIOPRO_XTON);
      0001D7 74 09            [12] 1152 	mov	a,#0x09
      0001D9 C0 E0            [24] 1153 	push	acc
      0001DB 75 82 07         [24] 1154 	mov	dpl,#0x07
      0001DE 12r08r0E         [24] 1155 	lcall	_register_write
      0001E1 15 81            [12] 1156 	dec	sp
                                   1157 ;	radio/radio.c:348: tstart = timer2_tick();
      0001E3 12r00r00         [24] 1158 	lcall	_timer2_tick
      0001E6 AC 82            [24] 1159 	mov	r4,dpl
      0001E8 AD 83            [24] 1160 	mov	r5,dph
      0001EA D0 07            [24] 1161 	pop	ar7
                                   1162 ;	radio/radio.c:349: while ((uint16_t)(timer2_tick() - tstart) < timeout_ticks) {
      0001EC                       1163 00130$:
      0001EC C0 07            [24] 1164 	push	ar7
      0001EE C0 05            [24] 1165 	push	ar5
      0001F0 C0 04            [24] 1166 	push	ar4
      0001F2 12r00r00         [24] 1167 	lcall	_timer2_tick
      0001F5 AA 82            [24] 1168 	mov	r2,dpl
      0001F7 AB 83            [24] 1169 	mov	r3,dph
      0001F9 D0 04            [24] 1170 	pop	ar4
      0001FB D0 05            [24] 1171 	pop	ar5
      0001FD D0 07            [24] 1172 	pop	ar7
      0001FF EA               [12] 1173 	mov	a,r2
      000200 C3               [12] 1174 	clr	c
      000201 9C               [12] 1175 	subb	a,r4
      000202 FA               [12] 1176 	mov	r2,a
      000203 EB               [12] 1177 	mov	a,r3
      000204 9D               [12] 1178 	subb	a,r5
      000205 FB               [12] 1179 	mov	r3,a
      000206 78r17            [12] 1180 	mov	r0,#_radio_transmit_simple_PARM_3
      000208 C3               [12] 1181 	clr	c
      000209 E2               [24] 1182 	movx	a,@r0
      00020A F5 F0            [12] 1183 	mov	b,a
      00020C EA               [12] 1184 	mov	a,r2
      00020D 95 F0            [12] 1185 	subb	a,b
      00020F 08               [12] 1186 	inc	r0
      000210 E2               [24] 1187 	movx	a,@r0
      000211 F5 F0            [12] 1188 	mov	b,a
      000213 EB               [12] 1189 	mov	a,r3
      000214 95 F0            [12] 1190 	subb	a,b
      000216 40 03            [24] 1191 	jc	00199$
      000218 02r03r25         [24] 1192 	ljmp	00132$
      00021B                       1193 00199$:
                                   1194 ;	radio/radio.c:353: status = register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      00021B 75 82 03         [24] 1195 	mov	dpl,#0x03
      00021E C0 07            [24] 1196 	push	ar7
      000220 C0 05            [24] 1197 	push	ar5
      000222 C0 04            [24] 1198 	push	ar4
      000224 12r08r44         [24] 1199 	lcall	_register_read
      000227 AB 82            [24] 1200 	mov	r3,dpl
      000229 D0 04            [24] 1201 	pop	ar4
      00022B D0 05            [24] 1202 	pop	ar5
      00022D D0 07            [24] 1203 	pop	ar7
                                   1204 ;	radio/radio.c:354: if (transmit_started && length != 0 && (status & EZRADIOPRO_ITXFFAEM)) {
      00022F 30*03 40         [24] 1205 	jnb	_radio_transmit_simple_transmit_started_1_167,00108$
      000232 EF               [12] 1206 	mov	a,r7
      000233 60 3D            [24] 1207 	jz	00108$
      000235 EB               [12] 1208 	mov	a,r3
      000236 30 E5 39         [24] 1209 	jnb	acc.5,00108$
                                   1210 ;	radio/radio.c:361: n = 4;
      000239 7E 04            [12] 1211 	mov	r6,#0x04
                                   1212 ;	radio/radio.c:362: if (n > length) {
      00023B BF 04 00         [24] 1213 	cjne	r7,#0x04,00203$
      00023E                       1214 00203$:
      00023E 50 02            [24] 1215 	jnc	00106$
                                   1216 ;	radio/radio.c:363: n = length;
      000240 8F 06            [24] 1217 	mov	ar6,r7
      000242                       1218 00106$:
                                   1219 ;	radio/radio.c:365: radio_write_transmit_fifo(n, buf);
      000242 78r15            [12] 1220 	mov	r0,#_radio_transmit_simple_PARM_2
      000244 79r13            [12] 1221 	mov	r1,#_radio_write_transmit_fifo_PARM_2
      000246 E2               [24] 1222 	movx	a,@r0
      000247 F3               [24] 1223 	movx	@r1,a
      000248 08               [12] 1224 	inc	r0
      000249 E2               [24] 1225 	movx	a,@r0
      00024A 09               [12] 1226 	inc	r1
      00024B F3               [24] 1227 	movx	@r1,a
      00024C 8E 82            [24] 1228 	mov	dpl,r6
      00024E C0 07            [24] 1229 	push	ar7
      000250 C0 06            [24] 1230 	push	ar6
      000252 C0 05            [24] 1231 	push	ar5
      000254 C0 04            [24] 1232 	push	ar4
      000256 12r00r88         [24] 1233 	lcall	_radio_write_transmit_fifo
      000259 D0 04            [24] 1234 	pop	ar4
      00025B D0 05            [24] 1235 	pop	ar5
      00025D D0 06            [24] 1236 	pop	ar6
      00025F D0 07            [24] 1237 	pop	ar7
                                   1238 ;	radio/radio.c:366: length -= n;
      000261 EF               [12] 1239 	mov	a,r7
      000262 C3               [12] 1240 	clr	c
      000263 9E               [12] 1241 	subb	a,r6
      000264 FF               [12] 1242 	mov	r7,a
                                   1243 ;	radio/radio.c:367: buf += n;
      000265 78r15            [12] 1244 	mov	r0,#_radio_transmit_simple_PARM_2
      000267 E2               [24] 1245 	movx	a,@r0
      000268 2E               [12] 1246 	add	a,r6
      000269 F2               [24] 1247 	movx	@r0,a
      00026A 08               [12] 1248 	inc	r0
      00026B E2               [24] 1249 	movx	a,@r0
      00026C 34 00            [12] 1250 	addc	a,#0x00
      00026E F2               [24] 1251 	movx	@r0,a
                                   1252 ;	radio/radio.c:368: continue;
      00026F 02r01rEC         [24] 1253 	ljmp	00130$
      000272                       1254 00108$:
                                   1255 ;	radio/radio.c:370: if (transmit_started && length != 0 && (status & EZRADIOPRO_ITXFFAFULL) == 0) {
      000272 30*03 40         [24] 1256 	jnb	_radio_transmit_simple_transmit_started_1_167,00114$
      000275 EF               [12] 1257 	mov	a,r7
      000276 60 3D            [24] 1258 	jz	00114$
      000278 EB               [12] 1259 	mov	a,r3
      000279 20 E6 39         [24] 1260 	jb	acc.6,00114$
                                   1261 ;	radio/radio.c:374: n = 4;
      00027C 7E 04            [12] 1262 	mov	r6,#0x04
                                   1263 ;	radio/radio.c:375: if (n > length) {
      00027E BF 04 00         [24] 1264 	cjne	r7,#0x04,00208$
      000281                       1265 00208$:
      000281 50 02            [24] 1266 	jnc	00112$
                                   1267 ;	radio/radio.c:376: n = length;
      000283 8F 06            [24] 1268 	mov	ar6,r7
      000285                       1269 00112$:
                                   1270 ;	radio/radio.c:378: radio_write_transmit_fifo(n, buf);
      000285 78r15            [12] 1271 	mov	r0,#_radio_transmit_simple_PARM_2
      000287 79r13            [12] 1272 	mov	r1,#_radio_write_transmit_fifo_PARM_2
      000289 E2               [24] 1273 	movx	a,@r0
      00028A F3               [24] 1274 	movx	@r1,a
      00028B 08               [12] 1275 	inc	r0
      00028C E2               [24] 1276 	movx	a,@r0
      00028D 09               [12] 1277 	inc	r1
      00028E F3               [24] 1278 	movx	@r1,a
      00028F 8E 82            [24] 1279 	mov	dpl,r6
      000291 C0 07            [24] 1280 	push	ar7
      000293 C0 06            [24] 1281 	push	ar6
      000295 C0 05            [24] 1282 	push	ar5
      000297 C0 04            [24] 1283 	push	ar4
      000299 12r00r88         [24] 1284 	lcall	_radio_write_transmit_fifo
      00029C D0 04            [24] 1285 	pop	ar4
      00029E D0 05            [24] 1286 	pop	ar5
      0002A0 D0 06            [24] 1287 	pop	ar6
      0002A2 D0 07            [24] 1288 	pop	ar7
                                   1289 ;	radio/radio.c:379: length -= n;
      0002A4 EF               [12] 1290 	mov	a,r7
      0002A5 C3               [12] 1291 	clr	c
      0002A6 9E               [12] 1292 	subb	a,r6
      0002A7 FF               [12] 1293 	mov	r7,a
                                   1294 ;	radio/radio.c:380: buf += n;
      0002A8 78r15            [12] 1295 	mov	r0,#_radio_transmit_simple_PARM_2
      0002AA E2               [24] 1296 	movx	a,@r0
      0002AB 2E               [12] 1297 	add	a,r6
      0002AC F2               [24] 1298 	movx	@r0,a
      0002AD 08               [12] 1299 	inc	r0
      0002AE E2               [24] 1300 	movx	a,@r0
      0002AF 34 00            [12] 1301 	addc	a,#0x00
      0002B1 F2               [24] 1302 	movx	@r0,a
                                   1303 ;	radio/radio.c:381: continue;
      0002B2 02r01rEC         [24] 1304 	ljmp	00130$
      0002B5                       1305 00114$:
                                   1306 ;	radio/radio.c:384: if (status & EZRADIOPRO_IFFERR) {
      0002B5 EB               [12] 1307 	mov	a,r3
      0002B6 30 E7 20         [24] 1308 	jnb	acc.7,00120$
                                   1309 ;	radio/radio.c:386: radio_clear_transmit_fifo();
      0002B9 12r01r09         [24] 1310 	lcall	_radio_clear_transmit_fifo
                                   1311 ;	radio/radio.c:388: if (errors.tx_errors != 0xFFFF) {
      0002BC 78r02            [12] 1312 	mov	r0,#(_errors + 0x0002)
      0002BE E2               [24] 1313 	movx	a,@r0
      0002BF FA               [12] 1314 	mov	r2,a
      0002C0 08               [12] 1315 	inc	r0
      0002C1 E2               [24] 1316 	movx	a,@r0
      0002C2 FE               [12] 1317 	mov	r6,a
      0002C3 BA FF 05         [24] 1318 	cjne	r2,#0xFF,00211$
      0002C6 BE FF 02         [24] 1319 	cjne	r6,#0xFF,00211$
      0002C9 80 0C            [24] 1320 	sjmp	00118$
      0002CB                       1321 00211$:
                                   1322 ;	radio/radio.c:389: errors.tx_errors++;
      0002CB 0A               [12] 1323 	inc	r2
      0002CC BA 00 01         [24] 1324 	cjne	r2,#0x00,00212$
      0002CF 0E               [12] 1325 	inc	r6
      0002D0                       1326 00212$:
      0002D0 78r02            [12] 1327 	mov	r0,#(_errors + 0x0002)
      0002D2 EA               [12] 1328 	mov	a,r2
      0002D3 F2               [24] 1329 	movx	@r0,a
      0002D4 08               [12] 1330 	inc	r0
      0002D5 EE               [12] 1331 	mov	a,r6
      0002D6 F2               [24] 1332 	movx	@r0,a
      0002D7                       1333 00118$:
                                   1334 ;	radio/radio.c:394: return false;
      0002D7 C3               [12] 1335 	clr	c
      0002D8 22               [24] 1336 	ret
      0002D9                       1337 00120$:
                                   1338 ;	radio/radio.c:399: status = register_read(EZRADIOPRO_DEVICE_STATUS);
      0002D9 75 82 02         [24] 1339 	mov	dpl,#0x02
      0002DC C0 07            [24] 1340 	push	ar7
      0002DE C0 05            [24] 1341 	push	ar5
      0002E0 C0 04            [24] 1342 	push	ar4
      0002E2 12r08r44         [24] 1343 	lcall	_register_read
      0002E5 AB 82            [24] 1344 	mov	r3,dpl
      0002E7 D0 04            [24] 1345 	pop	ar4
      0002E9 D0 05            [24] 1346 	pop	ar5
      0002EB D0 07            [24] 1347 	pop	ar7
                                   1348 ;	radio/radio.c:400: if (status & 0x02) {
      0002ED EB               [12] 1349 	mov	a,r3
      0002EE 30 E1 05         [24] 1350 	jnb	acc.1,00122$
                                   1351 ;	radio/radio.c:402: transmit_started = true;
      0002F1 D2*03            [12] 1352 	setb	_radio_transmit_simple_transmit_started_1_167
                                   1353 ;	radio/radio.c:403: continue;
      0002F3 02r01rEC         [24] 1354 	ljmp	00130$
      0002F6                       1355 00122$:
                                   1356 ;	radio/radio.c:405: if (transmit_started && (status & 0x02) == 0) {
      0002F6 20*03 03         [24] 1357 	jb	_radio_transmit_simple_transmit_started_1_167,00214$
      0002F9 02r01rEC         [24] 1358 	ljmp	00130$
      0002FC                       1359 00214$:
      0002FC EB               [12] 1360 	mov	a,r3
      0002FD 30 E1 03         [24] 1361 	jnb	acc.1,00215$
      000300 02r01rEC         [24] 1362 	ljmp	00130$
      000303                       1363 00215$:
                                   1364 ;	radio/radio.c:408: if (length != 0) {
      000303 EF               [12] 1365 	mov	a,r7
      000304 60 1D            [24] 1366 	jz	00126$
                                   1367 ;	radio/radio.c:410: if (errors.tx_errors != 0xFFFF) {
      000306 78r02            [12] 1368 	mov	r0,#(_errors + 0x0002)
      000308 E2               [24] 1369 	movx	a,@r0
      000309 FE               [12] 1370 	mov	r6,a
      00030A 08               [12] 1371 	inc	r0
      00030B E2               [24] 1372 	movx	a,@r0
      00030C FF               [12] 1373 	mov	r7,a
      00030D BE FF 05         [24] 1374 	cjne	r6,#0xFF,00217$
      000310 BF FF 02         [24] 1375 	cjne	r7,#0xFF,00217$
      000313 80 0C            [24] 1376 	sjmp	00124$
      000315                       1377 00217$:
                                   1378 ;	radio/radio.c:411: errors.tx_errors++;
      000315 0E               [12] 1379 	inc	r6
      000316 BE 00 01         [24] 1380 	cjne	r6,#0x00,00218$
      000319 0F               [12] 1381 	inc	r7
      00031A                       1382 00218$:
      00031A 78r02            [12] 1383 	mov	r0,#(_errors + 0x0002)
      00031C EE               [12] 1384 	mov	a,r6
      00031D F2               [24] 1385 	movx	@r0,a
      00031E 08               [12] 1386 	inc	r0
      00031F EF               [12] 1387 	mov	a,r7
      000320 F2               [24] 1388 	movx	@r0,a
      000321                       1389 00124$:
                                   1390 ;	radio/radio.c:416: return false;
      000321 C3               [12] 1391 	clr	c
      000322 22               [24] 1392 	ret
      000323                       1393 00126$:
                                   1394 ;	radio/radio.c:421: return true;
      000323 D3               [12] 1395 	setb	c
      000324 22               [24] 1396 	ret
      000325                       1397 00132$:
                                   1398 ;	radio/radio.c:435: if (errors.tx_errors != 0xFFFF) {
      000325 78r02            [12] 1399 	mov	r0,#(_errors + 0x0002)
      000327 E2               [24] 1400 	movx	a,@r0
      000328 FE               [12] 1401 	mov	r6,a
      000329 08               [12] 1402 	inc	r0
      00032A E2               [24] 1403 	movx	a,@r0
      00032B FF               [12] 1404 	mov	r7,a
      00032C BE FF 05         [24] 1405 	cjne	r6,#0xFF,00219$
      00032F BF FF 02         [24] 1406 	cjne	r7,#0xFF,00219$
      000332 80 0C            [24] 1407 	sjmp	00134$
      000334                       1408 00219$:
                                   1409 ;	radio/radio.c:436: errors.tx_errors++;
      000334 0E               [12] 1410 	inc	r6
      000335 BE 00 01         [24] 1411 	cjne	r6,#0x00,00220$
      000338 0F               [12] 1412 	inc	r7
      000339                       1413 00220$:
      000339 78r02            [12] 1414 	mov	r0,#(_errors + 0x0002)
      00033B EE               [12] 1415 	mov	a,r6
      00033C F2               [24] 1416 	movx	@r0,a
      00033D 08               [12] 1417 	inc	r0
      00033E EF               [12] 1418 	mov	a,r7
      00033F F2               [24] 1419 	movx	@r0,a
      000340                       1420 00134$:
                                   1421 ;	radio/radio.c:439: return false;
      000340 C3               [12] 1422 	clr	c
      000341 22               [24] 1423 	ret
                                   1424 ;------------------------------------------------------------
                                   1425 ;Allocation info for local variables in function 'radio_transmit'
                                   1426 ;------------------------------------------------------------
                                   1427 ;length                    Allocated with name '_radio_transmit_length_1_182'
                                   1428 ;------------------------------------------------------------
                                   1429 ;	radio/radio.c:503: radio_transmit(uint8_t length, __xdata uint8_t * __pdata buf, __pdata uint16_t timeout_ticks)
                                   1430 ;	-----------------------------------------
                                   1431 ;	 function radio_transmit
                                   1432 ;	-----------------------------------------
      000342                       1433 _radio_transmit:
      000342 E5 82            [12] 1434 	mov	a,dpl
      000344 90r00rFF         [24] 1435 	mov	dptr,#_radio_transmit_length_1_182
      000347 F0               [24] 1436 	movx	@dptr,a
                                   1437 ;	radio/radio.c:507: EX0_SAVE_DISABLE;
      000348 A2 A8            [12] 1438 	mov	c,_EX0
      00034A 92*05            [24] 1439 	mov	_radio_transmit_EX0_saved_1_183,c
      00034C C2 A8            [12] 1440 	clr	_EX0
                                   1441 ;	radio/radio.c:520: ret = radio_transmit_simple(length, buf, timeout_ticks);
      00034E 90r00rFF         [24] 1442 	mov	dptr,#_radio_transmit_length_1_182
      000351 E0               [24] 1443 	movx	a,@dptr
      000352 FF               [12] 1444 	mov	r7,a
      000353 78r19            [12] 1445 	mov	r0,#_radio_transmit_PARM_2
      000355 79r15            [12] 1446 	mov	r1,#_radio_transmit_simple_PARM_2
      000357 E2               [24] 1447 	movx	a,@r0
      000358 F3               [24] 1448 	movx	@r1,a
      000359 08               [12] 1449 	inc	r0
      00035A E2               [24] 1450 	movx	a,@r0
      00035B 09               [12] 1451 	inc	r1
      00035C F3               [24] 1452 	movx	@r1,a
      00035D 78r1B            [12] 1453 	mov	r0,#_radio_transmit_PARM_3
      00035F 79r17            [12] 1454 	mov	r1,#_radio_transmit_simple_PARM_3
      000361 E2               [24] 1455 	movx	a,@r0
      000362 F3               [24] 1456 	movx	@r1,a
      000363 08               [12] 1457 	inc	r0
      000364 E2               [24] 1458 	movx	a,@r0
      000365 09               [12] 1459 	inc	r1
      000366 F3               [24] 1460 	movx	@r1,a
      000367 8F 82            [24] 1461 	mov	dpl,r7
      000369 12r01r59         [24] 1462 	lcall	_radio_transmit_simple
      00036C 92*04            [24] 1463 	mov	_radio_transmit_ret_1_183,c
                                   1464 ;	radio/radio.c:526: EX0_RESTORE;
      00036E A2*05            [12] 1465 	mov	c,_radio_transmit_EX0_saved_1_183
      000370 92 A8            [24] 1466 	mov	_EX0,c
                                   1467 ;	radio/radio.c:527: return ret;
      000372 A2*04            [12] 1468 	mov	c,_radio_transmit_ret_1_183
      000374 22               [24] 1469 	ret
                                   1470 ;------------------------------------------------------------
                                   1471 ;Allocation info for local variables in function 'radio_receiver_on'
                                   1472 ;------------------------------------------------------------
                                   1473 ;	radio/radio.c:534: radio_receiver_on(void)
                                   1474 ;	-----------------------------------------
                                   1475 ;	 function radio_receiver_on
                                   1476 ;	-----------------------------------------
      000375                       1477 _radio_receiver_on:
                                   1478 ;	radio/radio.c:536: EX0 = 0;
      000375 C2 A8            [12] 1479 	clr	_EX0
                                   1480 ;	radio/radio.c:538: packet_received = 0;
      000377 C2*00            [12] 1481 	clr	_packet_received
                                   1482 ;	radio/radio.c:539: receive_packet_length = 0;
      000379 78r00            [12] 1483 	mov	r0,#_receive_packet_length
      00037B E4               [12] 1484 	clr	a
      00037C F2               [24] 1485 	movx	@r0,a
                                   1486 ;	radio/radio.c:540: preamble_detected = 0;
      00037D C2*01            [12] 1487 	clr	_preamble_detected
                                   1488 ;	radio/radio.c:541: partial_packet_length = 0;
      00037F 78r01            [12] 1489 	mov	r0,#_partial_packet_length
      000381 E4               [12] 1490 	clr	a
      000382 F2               [24] 1491 	movx	@r0,a
                                   1492 ;	radio/radio.c:544: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, RADIO_RX_INTERRUPTS);
      000383 74 13            [12] 1493 	mov	a,#0x13
      000385 C0 E0            [24] 1494 	push	acc
      000387 75 82 05         [24] 1495 	mov	dpl,#0x05
      00038A 12r08r0E         [24] 1496 	lcall	_register_write
      00038D 15 81            [12] 1497 	dec	sp
                                   1498 ;	radio/radio.c:545: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, EZRADIOPRO_ENPREAVAL);
      00038F 74 40            [12] 1499 	mov	a,#0x40
      000391 C0 E0            [24] 1500 	push	acc
      000393 75 82 06         [24] 1501 	mov	dpl,#0x06
      000396 12r08r0E         [24] 1502 	lcall	_register_write
      000399 15 81            [12] 1503 	dec	sp
                                   1504 ;	radio/radio.c:547: clear_status_registers();
      00039B 12r08rB8         [24] 1505 	lcall	_clear_status_registers
                                   1506 ;	radio/radio.c:548: radio_clear_transmit_fifo();
      00039E 12r01r09         [24] 1507 	lcall	_radio_clear_transmit_fifo
                                   1508 ;	radio/radio.c:549: radio_clear_receive_fifo();
      0003A1 12r01r31         [24] 1509 	lcall	_radio_clear_receive_fifo
                                   1510 ;	radio/radio.c:552: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, EZRADIOPRO_RXON | EZRADIOPRO_XTON);
      0003A4 74 05            [12] 1511 	mov	a,#0x05
      0003A6 C0 E0            [24] 1512 	push	acc
      0003A8 75 82 07         [24] 1513 	mov	dpl,#0x07
      0003AB 12r08r0E         [24] 1514 	lcall	_register_write
      0003AE 15 81            [12] 1515 	dec	sp
                                   1516 ;	radio/radio.c:555: EX0 = 1;
      0003B0 D2 A8            [12] 1517 	setb	_EX0
                                   1518 ;	radio/radio.c:557: return true;
      0003B2 D3               [12] 1519 	setb	c
      0003B3 22               [24] 1520 	ret
                                   1521 ;------------------------------------------------------------
                                   1522 ;Allocation info for local variables in function 'radio_initialise'
                                   1523 ;------------------------------------------------------------
                                   1524 ;status                    Allocated with name '_radio_initialise_status_1_187'
                                   1525 ;------------------------------------------------------------
                                   1526 ;	radio/radio.c:564: radio_initialise(void)
                                   1527 ;	-----------------------------------------
                                   1528 ;	 function radio_initialise
                                   1529 ;	-----------------------------------------
      0003B4                       1530 _radio_initialise:
                                   1531 ;	radio/radio.c:568: delay_msec(50);
      0003B4 90 00 32         [24] 1532 	mov	dptr,#0x0032
      0003B7 12r00r00         [24] 1533 	lcall	_delay_msec
                                   1534 ;	radio/radio.c:571: status = register_read(EZRADIOPRO_DEVICE_VERSION);
      0003BA 75 82 01         [24] 1535 	mov	dpl,#0x01
      0003BD 12r08r44         [24] 1536 	lcall	_register_read
      0003C0 AF 82            [24] 1537 	mov	r7,dpl
                                   1538 ;	radio/radio.c:572: if (status == 0xFF || status < 5) {
      0003C2 BF FF 02         [24] 1539 	cjne	r7,#0xFF,00119$
      0003C5 80 05            [24] 1540 	sjmp	00101$
      0003C7                       1541 00119$:
      0003C7 BF 05 00         [24] 1542 	cjne	r7,#0x05,00120$
      0003CA                       1543 00120$:
      0003CA 50 02            [24] 1544 	jnc	00102$
      0003CC                       1545 00101$:
                                   1546 ;	radio/radio.c:574: return false;
      0003CC C3               [12] 1547 	clr	c
      0003CD 22               [24] 1548 	ret
      0003CE                       1549 00102$:
                                   1550 ;	radio/radio.c:578: software_reset();
      0003CE 12r09r18         [24] 1551 	lcall	_software_reset
                                   1552 ;	radio/radio.c:580: status = register_read(EZRADIOPRO_DEVICE_VERSION);
      0003D1 75 82 01         [24] 1553 	mov	dpl,#0x01
      0003D4 12r08r44         [24] 1554 	lcall	_register_read
                                   1555 ;	radio/radio.c:582: if ((status & EZRADIOPRO_IPOR) == 0) {
      0003D7 E5 82            [12] 1556 	mov	a,dpl
      0003D9 FF               [12] 1557 	mov	r7,a
      0003DA 20 E0 06         [24] 1558 	jb	acc.0,00105$
                                   1559 ;	radio/radio.c:584: return software_reset();
      0003DD 12r09r18         [24] 1560 	lcall	_software_reset
      0003E0 92*06            [24] 1561 	mov  _radio_initialise_sloc0_1_0,c
      0003E2 22               [24] 1562 	ret
      0003E3                       1563 00105$:
                                   1564 ;	radio/radio.c:587: if (status & EZRADIOPRO_ICHIPRDY) {
      0003E3 EF               [12] 1565 	mov	a,r7
      0003E4 30 E1 02         [24] 1566 	jnb	acc.1,00107$
                                   1567 ;	radio/radio.c:589: return true;
      0003E7 D3               [12] 1568 	setb	c
      0003E8 22               [24] 1569 	ret
      0003E9                       1570 00107$:
                                   1571 ;	radio/radio.c:592: return false;
      0003E9 C3               [12] 1572 	clr	c
      0003EA 22               [24] 1573 	ret
                                   1574 ;------------------------------------------------------------
                                   1575 ;Allocation info for local variables in function 'radio_set_frequency'
                                   1576 ;------------------------------------------------------------
                                   1577 ;	radio/radio.c:599: radio_set_frequency(__pdata uint32_t value)
                                   1578 ;	-----------------------------------------
                                   1579 ;	 function radio_set_frequency
                                   1580 ;	-----------------------------------------
      0003EB                       1581 _radio_set_frequency:
      0003EB AC 82            [24] 1582 	mov	r4,dpl
      0003ED AD 83            [24] 1583 	mov	r5,dph
      0003EF AE F0            [24] 1584 	mov	r6,b
      0003F1 FF               [12] 1585 	mov	r7,a
                                   1586 ;	radio/radio.c:601: if (value < 240000000UL || value > 935000000UL) {
      0003F2 C3               [12] 1587 	clr	c
      0003F3 ED               [12] 1588 	mov	a,r5
      0003F4 94 1C            [12] 1589 	subb	a,#0x1C
      0003F6 EE               [12] 1590 	mov	a,r6
      0003F7 94 4E            [12] 1591 	subb	a,#0x4E
      0003F9 EF               [12] 1592 	mov	a,r7
      0003FA 94 0E            [12] 1593 	subb	a,#0x0E
      0003FC 40 0E            [24] 1594 	jc	00101$
      0003FE 74 C0            [12] 1595 	mov	a,#0xC0
      000400 9C               [12] 1596 	subb	a,r4
      000401 74 F7            [12] 1597 	mov	a,#0xF7
      000403 9D               [12] 1598 	subb	a,r5
      000404 74 BA            [12] 1599 	mov	a,#0xBA
      000406 9E               [12] 1600 	subb	a,r6
      000407 74 37            [12] 1601 	mov	a,#0x37
      000409 9F               [12] 1602 	subb	a,r7
      00040A 50 02            [24] 1603 	jnc	00102$
      00040C                       1604 00101$:
                                   1605 ;	radio/radio.c:602: return false;
      00040C C3               [12] 1606 	clr	c
      00040D 22               [24] 1607 	ret
      00040E                       1608 00102$:
                                   1609 ;	radio/radio.c:604: settings.frequency = value;
      00040E 78r05            [12] 1610 	mov	r0,#_settings
      000410 EC               [12] 1611 	mov	a,r4
      000411 F2               [24] 1612 	movx	@r0,a
      000412 08               [12] 1613 	inc	r0
      000413 ED               [12] 1614 	mov	a,r5
      000414 F2               [24] 1615 	movx	@r0,a
      000415 08               [12] 1616 	inc	r0
      000416 EE               [12] 1617 	mov	a,r6
      000417 F2               [24] 1618 	movx	@r0,a
      000418 08               [12] 1619 	inc	r0
      000419 EF               [12] 1620 	mov	a,r7
      00041A F2               [24] 1621 	movx	@r0,a
                                   1622 ;	radio/radio.c:605: set_frequency_registers(value);
      00041B 8C 82            [24] 1623 	mov	dpl,r4
      00041D 8D 83            [24] 1624 	mov	dph,r5
      00041F 8E F0            [24] 1625 	mov	b,r6
      000421 EF               [12] 1626 	mov	a,r7
      000422 12r09r84         [24] 1627 	lcall	_set_frequency_registers
                                   1628 ;	radio/radio.c:606: return true;
      000425 D3               [12] 1629 	setb	c
      000426 22               [24] 1630 	ret
                                   1631 ;------------------------------------------------------------
                                   1632 ;Allocation info for local variables in function 'radio_set_channel_spacing'
                                   1633 ;------------------------------------------------------------
                                   1634 ;	radio/radio.c:613: radio_set_channel_spacing(__pdata uint32_t value)
                                   1635 ;	-----------------------------------------
                                   1636 ;	 function radio_set_channel_spacing
                                   1637 ;	-----------------------------------------
      000427                       1638 _radio_set_channel_spacing:
      000427 AC 82            [24] 1639 	mov	r4,dpl
      000429 AD 83            [24] 1640 	mov	r5,dph
      00042B AE F0            [24] 1641 	mov	r6,b
      00042D FF               [12] 1642 	mov	r7,a
                                   1643 ;	radio/radio.c:615: if (value > 2550000L)
      00042E C3               [12] 1644 	clr	c
      00042F 74 F0            [12] 1645 	mov	a,#0xF0
      000431 9C               [12] 1646 	subb	a,r4
      000432 74 E8            [12] 1647 	mov	a,#0xE8
      000434 9D               [12] 1648 	subb	a,r5
      000435 74 26            [12] 1649 	mov	a,#0x26
      000437 9E               [12] 1650 	subb	a,r6
      000438 E4               [12] 1651 	clr	a
      000439 9F               [12] 1652 	subb	a,r7
      00043A 50 02            [24] 1653 	jnc	00102$
                                   1654 ;	radio/radio.c:616: return false;
      00043C C3               [12] 1655 	clr	c
      00043D 22               [24] 1656 	ret
      00043E                       1657 00102$:
                                   1658 ;	radio/radio.c:617: value = scale_uint32(value, 10000);
      00043E 78r1D            [12] 1659 	mov	r0,#_scale_uint32_PARM_2
      000440 74 10            [12] 1660 	mov	a,#0x10
      000442 F2               [24] 1661 	movx	@r0,a
      000443 08               [12] 1662 	inc	r0
      000444 74 27            [12] 1663 	mov	a,#0x27
      000446 F2               [24] 1664 	movx	@r0,a
      000447 08               [12] 1665 	inc	r0
      000448 E4               [12] 1666 	clr	a
      000449 F2               [24] 1667 	movx	@r0,a
      00044A 08               [12] 1668 	inc	r0
      00044B F2               [24] 1669 	movx	@r0,a
      00044C 8C 82            [24] 1670 	mov	dpl,r4
      00044E 8D 83            [24] 1671 	mov	dph,r5
      000450 8E F0            [24] 1672 	mov	b,r6
      000452 EF               [12] 1673 	mov	a,r7
      000453 12r08rC4         [24] 1674 	lcall	_scale_uint32
      000456 AC 82            [24] 1675 	mov	r4,dpl
      000458 AD 83            [24] 1676 	mov	r5,dph
      00045A AE F0            [24] 1677 	mov	r6,b
      00045C FF               [12] 1678 	mov	r7,a
                                   1679 ;	radio/radio.c:618: settings.channel_spacing = value;
      00045D 78r09            [12] 1680 	mov	r0,#(_settings + 0x0004)
      00045F EC               [12] 1681 	mov	a,r4
      000460 F2               [24] 1682 	movx	@r0,a
      000461 08               [12] 1683 	inc	r0
      000462 ED               [12] 1684 	mov	a,r5
      000463 F2               [24] 1685 	movx	@r0,a
      000464 08               [12] 1686 	inc	r0
      000465 EE               [12] 1687 	mov	a,r6
      000466 F2               [24] 1688 	movx	@r0,a
      000467 08               [12] 1689 	inc	r0
      000468 EF               [12] 1690 	mov	a,r7
      000469 F2               [24] 1691 	movx	@r0,a
                                   1692 ;	radio/radio.c:619: register_write(EZRADIOPRO_FREQUENCY_HOPPING_STEP_SIZE, value);
      00046A C0 04            [24] 1693 	push	ar4
      00046C 75 82 7A         [24] 1694 	mov	dpl,#0x7A
      00046F 12r08r0E         [24] 1695 	lcall	_register_write
      000472 15 81            [12] 1696 	dec	sp
                                   1697 ;	radio/radio.c:620: return true;
      000474 D3               [12] 1698 	setb	c
      000475 22               [24] 1699 	ret
                                   1700 ;------------------------------------------------------------
                                   1701 ;Allocation info for local variables in function 'radio_set_channel'
                                   1702 ;------------------------------------------------------------
                                   1703 ;channel                   Allocated with name '_radio_set_channel_channel_1_196'
                                   1704 ;------------------------------------------------------------
                                   1705 ;	radio/radio.c:626: radio_set_channel(uint8_t channel)
                                   1706 ;	-----------------------------------------
                                   1707 ;	 function radio_set_channel
                                   1708 ;	-----------------------------------------
      000476                       1709 _radio_set_channel:
      000476 E5 82            [12] 1710 	mov	a,dpl
      000478 90r01r00         [24] 1711 	mov	dptr,#_radio_set_channel_channel_1_196
      00047B F0               [24] 1712 	movx	@dptr,a
                                   1713 ;	radio/radio.c:628: if (channel != settings.current_channel) {
      00047C 78r0E            [12] 1714 	mov	r0,#(_settings + 0x0009)
      00047E E2               [24] 1715 	movx	a,@r0
      00047F FF               [12] 1716 	mov	r7,a
      000480 E0               [24] 1717 	movx	a,@dptr
      000481 FE               [12] 1718 	mov	r6,a
      000482 B5 07 01         [24] 1719 	cjne	a,ar7,00108$
      000485 22               [24] 1720 	ret
      000486                       1721 00108$:
                                   1722 ;	radio/radio.c:629: settings.current_channel = channel;
      000486 78r0E            [12] 1723 	mov	r0,#(_settings + 0x0009)
      000488 EE               [12] 1724 	mov	a,r6
      000489 F2               [24] 1725 	movx	@r0,a
                                   1726 ;	radio/radio.c:630: register_write(EZRADIOPRO_FREQUENCY_HOPPING_CHANNEL_SELECT, channel);
      00048A C0 06            [24] 1727 	push	ar6
      00048C 75 82 79         [24] 1728 	mov	dpl,#0x79
      00048F 12r08r0E         [24] 1729 	lcall	_register_write
      000492 15 81            [12] 1730 	dec	sp
                                   1731 ;	radio/radio.c:631: preamble_detected = 0;
      000494 C2*01            [12] 1732 	clr	_preamble_detected
      000496 22               [24] 1733 	ret
                                   1734 ;------------------------------------------------------------
                                   1735 ;Allocation info for local variables in function 'radio_get_channel'
                                   1736 ;------------------------------------------------------------
                                   1737 ;	radio/radio.c:638: radio_get_channel(void)
                                   1738 ;	-----------------------------------------
                                   1739 ;	 function radio_get_channel
                                   1740 ;	-----------------------------------------
      000497                       1741 _radio_get_channel:
                                   1742 ;	radio/radio.c:640: return settings.current_channel;
      000497 78r0E            [12] 1743 	mov	r0,#(_settings + 0x0009)
      000499 E2               [24] 1744 	movx	a,@r0
      00049A F5 82            [12] 1745 	mov	dpl,a
      00049C 22               [24] 1746 	ret
                                   1747 ;------------------------------------------------------------
                                   1748 ;Allocation info for local variables in function 'radio_configure'
                                   1749 ;------------------------------------------------------------
                                   1750 ;	radio/radio.c:737: radio_configure(__pdata uint8_t air_rate)
                                   1751 ;	-----------------------------------------
                                   1752 ;	 function radio_configure
                                   1753 ;	-----------------------------------------
      00049D                       1754 _radio_configure:
      00049D AF 82            [24] 1755 	mov	r7,dpl
                                   1756 ;	radio/radio.c:742: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0x00);
      00049F C0 07            [24] 1757 	push	ar7
      0004A1 E4               [12] 1758 	clr	a
      0004A2 C0 E0            [24] 1759 	push	acc
      0004A4 75 82 05         [24] 1760 	mov	dpl,#0x05
      0004A7 12r08r0E         [24] 1761 	lcall	_register_write
      0004AA 15 81            [12] 1762 	dec	sp
                                   1763 ;	radio/radio.c:743: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0x00);
      0004AC E4               [12] 1764 	clr	a
      0004AD C0 E0            [24] 1765 	push	acc
      0004AF 75 82 06         [24] 1766 	mov	dpl,#0x06
      0004B2 12r08r0E         [24] 1767 	lcall	_register_write
      0004B5 15 81            [12] 1768 	dec	sp
                                   1769 ;	radio/radio.c:745: clear_status_registers();
      0004B7 12r08rB8         [24] 1770 	lcall	_clear_status_registers
                                   1771 ;	radio/radio.c:755: register_write(EZRADIOPRO_GPIO0_CONFIGURATION, 0x15);	// RX state (output)
      0004BA 74 15            [12] 1772 	mov	a,#0x15
      0004BC C0 E0            [24] 1773 	push	acc
      0004BE 75 82 0B         [24] 1774 	mov	dpl,#0x0B
      0004C1 12r08r0E         [24] 1775 	lcall	_register_write
      0004C4 15 81            [12] 1776 	dec	sp
                                   1777 ;	radio/radio.c:756: register_write(EZRADIOPRO_GPIO1_CONFIGURATION, 0x12);	// TX state (output)
      0004C6 74 12            [12] 1778 	mov	a,#0x12
      0004C8 C0 E0            [24] 1779 	push	acc
      0004CA 75 82 0C         [24] 1780 	mov	dpl,#0x0C
      0004CD 12r08r0E         [24] 1781 	lcall	_register_write
      0004D0 15 81            [12] 1782 	dec	sp
                                   1783 ;	radio/radio.c:774: register_write(EZRADIOPRO_CRYSTAL_OSCILLATOR_LOAD_CAPACITANCE, EZRADIOPRO_OSC_CAP_VALUE);
      0004D2 74 B4            [12] 1784 	mov	a,#0xB4
      0004D4 C0 E0            [24] 1785 	push	acc
      0004D6 75 82 09         [24] 1786 	mov	dpl,#0x09
      0004D9 12r08r0E         [24] 1787 	lcall	_register_write
      0004DC 15 81            [12] 1788 	dec	sp
      0004DE D0 07            [24] 1789 	pop	ar7
                                   1790 ;	radio/radio.c:777: if (air_rate > 100) {
      0004E0 EF               [12] 1791 	mov	a,r7
      0004E1 24 9B            [12] 1792 	add	a,#0xff - 0x64
      0004E3 50 10            [24] 1793 	jnc	00102$
                                   1794 ;	radio/radio.c:778: register_write(EZRADIOPRO_CHARGEPUMP_CURRENT_TRIMMING_OVERRIDE, 0xC0);
      0004E5 C0 07            [24] 1795 	push	ar7
      0004E7 74 C0            [12] 1796 	mov	a,#0xC0
      0004E9 C0 E0            [24] 1797 	push	acc
      0004EB 75 82 58         [24] 1798 	mov	dpl,#0x58
      0004EE 12r08r0E         [24] 1799 	lcall	_register_write
      0004F1 15 81            [12] 1800 	dec	sp
      0004F3 D0 07            [24] 1801 	pop	ar7
      0004F5                       1802 00102$:
                                   1803 ;	radio/radio.c:782: set_frequency_registers(settings.frequency);
      0004F5 78r05            [12] 1804 	mov	r0,#_settings
      0004F7 E2               [24] 1805 	movx	a,@r0
      0004F8 FB               [12] 1806 	mov	r3,a
      0004F9 08               [12] 1807 	inc	r0
      0004FA E2               [24] 1808 	movx	a,@r0
      0004FB FC               [12] 1809 	mov	r4,a
      0004FC 08               [12] 1810 	inc	r0
      0004FD E2               [24] 1811 	movx	a,@r0
      0004FE FD               [12] 1812 	mov	r5,a
      0004FF 08               [12] 1813 	inc	r0
      000500 E2               [24] 1814 	movx	a,@r0
      000501 8B 82            [24] 1815 	mov	dpl,r3
      000503 8C 83            [24] 1816 	mov	dph,r4
      000505 8D F0            [24] 1817 	mov	b,r5
      000507 C0 07            [24] 1818 	push	ar7
      000509 12r09r84         [24] 1819 	lcall	_set_frequency_registers
                                   1820 ;	radio/radio.c:783: register_write(EZRADIOPRO_FREQUENCY_HOPPING_STEP_SIZE, settings.channel_spacing);
      00050C 78r09            [12] 1821 	mov	r0,#(_settings + 0x0004)
      00050E E2               [24] 1822 	movx	a,@r0
      00050F FB               [12] 1823 	mov	r3,a
      000510 08               [12] 1824 	inc	r0
      000511 E2               [24] 1825 	movx	a,@r0
      000512 08               [12] 1826 	inc	r0
      000513 E2               [24] 1827 	movx	a,@r0
      000514 08               [12] 1828 	inc	r0
      000515 E2               [24] 1829 	movx	a,@r0
      000516 C0 03            [24] 1830 	push	ar3
      000518 75 82 7A         [24] 1831 	mov	dpl,#0x7A
      00051B 12r08r0E         [24] 1832 	lcall	_register_write
      00051E 15 81            [12] 1833 	dec	sp
      000520 D0 07            [24] 1834 	pop	ar7
                                   1835 ;	radio/radio.c:785: if (feature_golay) {
      000522 30*00 29         [24] 1836 	jnb	_feature_golay,00104$
                                   1837 ;	radio/radio.c:789: register_write(EZRADIOPRO_DATA_ACCESS_CONTROL,
      000525 C0 07            [24] 1838 	push	ar7
      000527 74 88            [12] 1839 	mov	a,#0x88
      000529 C0 E0            [24] 1840 	push	acc
      00052B 75 82 30         [24] 1841 	mov	dpl,#0x30
      00052E 12r08r0E         [24] 1842 	lcall	_register_write
      000531 15 81            [12] 1843 	dec	sp
                                   1844 ;	radio/radio.c:793: register_write(EZRADIOPRO_HEADER_CONTROL_2, EZRADIOPRO_HDLEN_0BYTE | EZRADIOPRO_SYNCLEN_2BYTE);
      000533 74 02            [12] 1845 	mov	a,#0x02
      000535 C0 E0            [24] 1846 	push	acc
      000537 75 82 33         [24] 1847 	mov	dpl,#0x33
      00053A 12r08r0E         [24] 1848 	lcall	_register_write
      00053D 15 81            [12] 1849 	dec	sp
                                   1850 ;	radio/radio.c:796: register_write(EZRADIOPRO_HEADER_CONTROL_1, 0x00);
      00053F E4               [12] 1851 	clr	a
      000540 C0 E0            [24] 1852 	push	acc
      000542 75 82 32         [24] 1853 	mov	dpl,#0x32
      000545 12r08r0E         [24] 1854 	lcall	_register_write
      000548 15 81            [12] 1855 	dec	sp
      00054A D0 07            [24] 1856 	pop	ar7
      00054C 80 40            [24] 1857 	sjmp	00105$
      00054E                       1858 00104$:
                                   1859 ;	radio/radio.c:798: register_write(EZRADIOPRO_DATA_ACCESS_CONTROL,
      00054E C0 07            [24] 1860 	push	ar7
      000550 74 8D            [12] 1861 	mov	a,#0x8D
      000552 C0 E0            [24] 1862 	push	acc
      000554 75 82 30         [24] 1863 	mov	dpl,#0x30
      000557 12r08r0E         [24] 1864 	lcall	_register_write
      00055A 15 81            [12] 1865 	dec	sp
                                   1866 ;	radio/radio.c:804: register_write(EZRADIOPRO_HEADER_CONTROL_2, EZRADIOPRO_HDLEN_2BYTE | EZRADIOPRO_SYNCLEN_2BYTE);
      00055C 74 22            [12] 1867 	mov	a,#0x22
      00055E C0 E0            [24] 1868 	push	acc
      000560 75 82 33         [24] 1869 	mov	dpl,#0x33
      000563 12r08r0E         [24] 1870 	lcall	_register_write
      000566 15 81            [12] 1871 	dec	sp
                                   1872 ;	radio/radio.c:806: register_write(EZRADIOPRO_HEADER_CONTROL_1, 0x0C);
      000568 74 0C            [12] 1873 	mov	a,#0x0C
      00056A C0 E0            [24] 1874 	push	acc
      00056C 75 82 32         [24] 1875 	mov	dpl,#0x32
      00056F 12r08r0E         [24] 1876 	lcall	_register_write
      000572 15 81            [12] 1877 	dec	sp
                                   1878 ;	radio/radio.c:807: register_write(EZRADIOPRO_HEADER_ENABLE_3, 0xFF);
      000574 74 FF            [12] 1879 	mov	a,#0xFF
      000576 C0 E0            [24] 1880 	push	acc
      000578 75 82 43         [24] 1881 	mov	dpl,#0x43
      00057B 12r08r0E         [24] 1882 	lcall	_register_write
      00057E 15 81            [12] 1883 	dec	sp
                                   1884 ;	radio/radio.c:808: register_write(EZRADIOPRO_HEADER_ENABLE_2, 0xFF);
      000580 74 FF            [12] 1885 	mov	a,#0xFF
      000582 C0 E0            [24] 1886 	push	acc
      000584 75 82 44         [24] 1887 	mov	dpl,#0x44
      000587 12r08r0E         [24] 1888 	lcall	_register_write
      00058A 15 81            [12] 1889 	dec	sp
      00058C D0 07            [24] 1890 	pop	ar7
      00058E                       1891 00105$:
                                   1892 ;	radio/radio.c:813: register_write(EZRADIOPRO_TX_FIFO_CONTROL_1, TX_FIFO_THRESHOLD_HIGH);
      00058E C0 07            [24] 1893 	push	ar7
      000590 74 3C            [12] 1894 	mov	a,#0x3C
      000592 C0 E0            [24] 1895 	push	acc
      000594 75 82 7C         [24] 1896 	mov	dpl,#0x7C
      000597 12r08r0E         [24] 1897 	lcall	_register_write
      00059A 15 81            [12] 1898 	dec	sp
                                   1899 ;	radio/radio.c:814: register_write(EZRADIOPRO_TX_FIFO_CONTROL_2, TX_FIFO_THRESHOLD_LOW);
      00059C 74 20            [12] 1900 	mov	a,#0x20
      00059E C0 E0            [24] 1901 	push	acc
      0005A0 75 82 7D         [24] 1902 	mov	dpl,#0x7D
      0005A3 12r08r0E         [24] 1903 	lcall	_register_write
      0005A6 15 81            [12] 1904 	dec	sp
                                   1905 ;	radio/radio.c:815: register_write(EZRADIOPRO_RX_FIFO_CONTROL, RX_FIFO_THRESHOLD_HIGH);
      0005A8 74 32            [12] 1906 	mov	a,#0x32
      0005AA C0 E0            [24] 1907 	push	acc
      0005AC 75 82 7E         [24] 1908 	mov	dpl,#0x7E
      0005AF 12r08r0E         [24] 1909 	lcall	_register_write
      0005B2 15 81            [12] 1910 	dec	sp
                                   1911 ;	radio/radio.c:817: settings.preamble_length = 16;
      0005B4 78r10            [12] 1912 	mov	r0,#(_settings + 0x000b)
      0005B6 74 10            [12] 1913 	mov	a,#0x10
      0005B8 F2               [24] 1914 	movx	@r0,a
                                   1915 ;	radio/radio.c:819: register_write(EZRADIOPRO_PREAMBLE_LENGTH, settings.preamble_length); // nibbles 
      0005B9 78r10            [12] 1916 	mov	r0,#(_settings + 0x000b)
      0005BB E2               [24] 1917 	movx	a,@r0
      0005BC FE               [12] 1918 	mov	r6,a
      0005BD C0 06            [24] 1919 	push	ar6
      0005BF 75 82 34         [24] 1920 	mov	dpl,#0x34
      0005C2 12r08r0E         [24] 1921 	lcall	_register_write
      0005C5 15 81            [12] 1922 	dec	sp
                                   1923 ;	radio/radio.c:820: register_write(EZRADIOPRO_PREAMBLE_DETECTION_CONTROL, 5<<3); // 5 nibbles
      0005C7 74 28            [12] 1924 	mov	a,#0x28
      0005C9 C0 E0            [24] 1925 	push	acc
      0005CB 75 82 35         [24] 1926 	mov	dpl,#0x35
      0005CE 12r08r0E         [24] 1927 	lcall	_register_write
      0005D1 15 81            [12] 1928 	dec	sp
                                   1929 ;	radio/radio.c:823: radio_set_transmit_power(0);
      0005D3 75 82 00         [24] 1930 	mov	dpl,#0x00
      0005D6 12r07r70         [24] 1931 	lcall	_radio_set_transmit_power
      0005D9 D0 07            [24] 1932 	pop	ar7
                                   1933 ;	radio/radio.c:826: for (i = 0; i < NUM_DATA_RATES - 1; i++) {
      0005DB 7E 00            [12] 1934 	mov	r6,#0x00
      0005DD                       1935 00131$:
                                   1936 ;	radio/radio.c:827: if (air_data_rates[i] >= air_rate) break;
      0005DD EE               [12] 1937 	mov	a,r6
      0005DE 90r00r1D         [24] 1938 	mov	dptr,#_air_data_rates
      0005E1 93               [24] 1939 	movc	a,@a+dptr
      0005E2 FD               [12] 1940 	mov	r5,a
      0005E3 C3               [12] 1941 	clr	c
      0005E4 9F               [12] 1942 	subb	a,r7
      0005E5 50 06            [24] 1943 	jnc	00108$
                                   1944 ;	radio/radio.c:826: for (i = 0; i < NUM_DATA_RATES - 1; i++) {
      0005E7 0E               [12] 1945 	inc	r6
      0005E8 BE 0C 00         [24] 1946 	cjne	r6,#0x0C,00205$
      0005EB                       1947 00205$:
      0005EB 40 F0            [24] 1948 	jc	00131$
      0005ED                       1949 00108$:
                                   1950 ;	radio/radio.c:829: rate_selection = i;
                                   1951 ;	radio/radio.c:831: settings.air_data_rate = air_data_rates[rate_selection];
      0005ED EE               [12] 1952 	mov	a,r6
      0005EE FF               [12] 1953 	mov	r7,a
      0005EF 90r00r1D         [24] 1954 	mov	dptr,#_air_data_rates
      0005F2 93               [24] 1955 	movc	a,@a+dptr
      0005F3 FE               [12] 1956 	mov	r6,a
      0005F4 78r0D            [12] 1957 	mov	r0,#(_settings + 0x0008)
      0005F6 F2               [24] 1958 	movx	@r0,a
                                   1959 ;	radio/radio.c:833: if (settings.air_data_rate >= 32) {
      0005F7 BE 20 00         [24] 1960 	cjne	r6,#0x20,00207$
      0005FA                       1961 00207$:
      0005FA 40 04            [24] 1962 	jc	00110$
                                   1963 ;	radio/radio.c:834: control = 0x0D;
      0005FC 7E 0D            [12] 1964 	mov	r6,#0x0D
      0005FE 80 02            [24] 1965 	sjmp	00111$
      000600                       1966 00110$:
                                   1967 ;	radio/radio.c:836: control = 0x2D;
      000600 7E 2D            [12] 1968 	mov	r6,#0x2D
      000602                       1969 00111$:
                                   1970 ;	radio/radio.c:838: if (param_get(PARAM_MANCHESTER) && settings.air_data_rate <= 128) {
      000602 75 82 0D         [24] 1971 	mov	dpl,#0x0D
      000605 C0 07            [24] 1972 	push	ar7
      000607 C0 06            [24] 1973 	push	ar6
      000609 12r00r00         [24] 1974 	lcall	_param_get
      00060C AA 82            [24] 1975 	mov	r2,dpl
      00060E AB 83            [24] 1976 	mov	r3,dph
      000610 AC F0            [24] 1977 	mov	r4,b
      000612 FD               [12] 1978 	mov	r5,a
      000613 D0 06            [24] 1979 	pop	ar6
      000615 D0 07            [24] 1980 	pop	ar7
      000617 EA               [12] 1981 	mov	a,r2
      000618 4B               [12] 1982 	orl	a,r3
      000619 4C               [12] 1983 	orl	a,r4
      00061A 4D               [12] 1984 	orl	a,r5
      00061B 60 0B            [24] 1985 	jz	00113$
      00061D 78r0D            [12] 1986 	mov	r0,#(_settings + 0x0008)
      00061F E2               [24] 1987 	movx	a,@r0
      000620 FD               [12] 1988 	mov  r5,a
      000621 24 7F            [12] 1989 	add	a,#0xff - 0x80
      000623 40 03            [24] 1990 	jc	00113$
                                   1991 ;	radio/radio.c:840: control |= EZRADIOPRO_ENMANCH;
      000625 43 06 02         [24] 1992 	orl	ar6,#0x02
      000628                       1993 00113$:
                                   1994 ;	radio/radio.c:842: register_write(EZRADIOPRO_MODULATION_MODE_CONTROL_1, control);
      000628 C0 07            [24] 1995 	push	ar7
      00062A C0 06            [24] 1996 	push	ar6
      00062C 75 82 70         [24] 1997 	mov	dpl,#0x70
      00062F 12r08r0E         [24] 1998 	lcall	_register_write
      000632 15 81            [12] 1999 	dec	sp
                                   2000 ;	radio/radio.c:844: register_write(EZRADIOPRO_MODULATION_MODE_CONTROL_2, 0x23);
      000634 74 23            [12] 2001 	mov	a,#0x23
      000636 C0 E0            [24] 2002 	push	acc
      000638 75 82 71         [24] 2003 	mov	dpl,#0x71
      00063B 12r08r0E         [24] 2004 	lcall	_register_write
      00063E 15 81            [12] 2005 	dec	sp
                                   2006 ;	radio/radio.c:848: register_write(EZRADIOPRO_AFC_LOOP_GEARSHIFT_OVERRIDE, 0x44);
      000640 74 44            [12] 2007 	mov	a,#0x44
      000642 C0 E0            [24] 2008 	push	acc
      000644 75 82 1D         [24] 2009 	mov	dpl,#0x1D
      000647 12r08r0E         [24] 2010 	lcall	_register_write
      00064A 15 81            [12] 2011 	dec	sp
      00064C D0 07            [24] 2012 	pop	ar7
                                   2013 ;	radio/radio.c:852: if (settings.air_data_rate < 200) {
      00064E 78r0D            [12] 2014 	mov	r0,#(_settings + 0x0008)
      000650 E2               [24] 2015 	movx	a,@r0
      000651 FE               [12] 2016 	mov	r6,a
      000652 BE C8 00         [24] 2017 	cjne	r6,#0xC8,00211$
      000655                       2018 00211$:
      000655 50 12            [24] 2019 	jnc	00116$
                                   2020 ;	radio/radio.c:853: register_write(EZRADIOPRO_AFC_TIMING_CONTROL, 0x0A);
      000657 C0 07            [24] 2021 	push	ar7
      000659 74 0A            [12] 2022 	mov	a,#0x0A
      00065B C0 E0            [24] 2023 	push	acc
      00065D 75 82 1E         [24] 2024 	mov	dpl,#0x1E
      000660 12r08r0E         [24] 2025 	lcall	_register_write
      000663 15 81            [12] 2026 	dec	sp
      000665 D0 07            [24] 2027 	pop	ar7
      000667 80 10            [24] 2028 	sjmp	00117$
      000669                       2029 00116$:
                                   2030 ;	radio/radio.c:855: register_write(EZRADIOPRO_AFC_TIMING_CONTROL, 0x02);
      000669 C0 07            [24] 2031 	push	ar7
      00066B 74 02            [12] 2032 	mov	a,#0x02
      00066D C0 E0            [24] 2033 	push	acc
      00066F 75 82 1E         [24] 2034 	mov	dpl,#0x1E
      000672 12r08r0E         [24] 2035 	lcall	_register_write
      000675 15 81            [12] 2036 	dec	sp
      000677 D0 07            [24] 2037 	pop	ar7
      000679                       2038 00117$:
                                   2039 ;	radio/radio.c:859: if (g_board_frequency == FREQ_433) {
      000679 78r00            [12] 2040 	mov	r0,#_g_board_frequency
      00067B E2               [24] 2041 	movx	a,@r0
      00067C B4 43 3A         [24] 2042 	cjne	a,#0x43,00129$
                                   2043 ;	radio/radio.c:860: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      00067F 7E 00            [12] 2044 	mov	r6,#0x00
      000681                       2045 00133$:
                                   2046 ;	radio/radio.c:862: reg_table_433[i][rate_selection]);
      000681 EE               [12] 2047 	mov	a,r6
      000682 75 F0 0D         [24] 2048 	mov	b,#0x0D
      000685 A4               [48] 2049 	mul	ab
      000686 24r2A            [12] 2050 	add	a,#_reg_table_433
      000688 FC               [12] 2051 	mov	r4,a
      000689 74s00            [12] 2052 	mov	a,#(_reg_table_433 >> 8)
      00068B 35 F0            [12] 2053 	addc	a,b
      00068D FD               [12] 2054 	mov	r5,a
      00068E EF               [12] 2055 	mov	a,r7
      00068F 2C               [12] 2056 	add	a,r4
      000690 F5 82            [12] 2057 	mov	dpl,a
      000692 E4               [12] 2058 	clr	a
      000693 3D               [12] 2059 	addc	a,r5
      000694 F5 83            [12] 2060 	mov	dph,a
      000696 E4               [12] 2061 	clr	a
      000697 93               [24] 2062 	movc	a,@a+dptr
      000698 FD               [12] 2063 	mov	r5,a
                                   2064 ;	radio/radio.c:861: register_write(reg_index[i],
      000699 EE               [12] 2065 	mov	a,r6
      00069A 90r00r11         [24] 2066 	mov	dptr,#_reg_index
      00069D 93               [24] 2067 	movc	a,@a+dptr
      00069E FC               [12] 2068 	mov	r4,a
      00069F C0 07            [24] 2069 	push	ar7
      0006A1 C0 06            [24] 2070 	push	ar6
      0006A3 C0 05            [24] 2071 	push	ar5
      0006A5 8C 82            [24] 2072 	mov	dpl,r4
      0006A7 12r08r0E         [24] 2073 	lcall	_register_write
      0006AA 15 81            [12] 2074 	dec	sp
      0006AC D0 06            [24] 2075 	pop	ar6
      0006AE D0 07            [24] 2076 	pop	ar7
                                   2077 ;	radio/radio.c:860: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      0006B0 0E               [12] 2078 	inc	r6
      0006B1 BE 0C 00         [24] 2079 	cjne	r6,#0x0C,00215$
      0006B4                       2080 00215$:
      0006B4 40 CB            [24] 2081 	jc	00133$
      0006B6 02r07r6E         [24] 2082 	ljmp	00130$
      0006B9                       2083 00129$:
                                   2084 ;	radio/radio.c:864: } else if (g_board_frequency == FREQ_470) {
      0006B9 78r00            [12] 2085 	mov	r0,#_g_board_frequency
      0006BB E2               [24] 2086 	movx	a,@r0
      0006BC B4 47 39         [24] 2087 	cjne	a,#0x47,00126$
                                   2088 ;	radio/radio.c:865: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      0006BF 7E 00            [12] 2089 	mov	r6,#0x00
      0006C1                       2090 00135$:
                                   2091 ;	radio/radio.c:867: reg_table_470[i][rate_selection]);
      0006C1 EE               [12] 2092 	mov	a,r6
      0006C2 75 F0 0D         [24] 2093 	mov	b,#0x0D
      0006C5 A4               [48] 2094 	mul	ab
      0006C6 24rC6            [12] 2095 	add	a,#_reg_table_470
      0006C8 FC               [12] 2096 	mov	r4,a
      0006C9 74s00            [12] 2097 	mov	a,#(_reg_table_470 >> 8)
      0006CB 35 F0            [12] 2098 	addc	a,b
      0006CD FD               [12] 2099 	mov	r5,a
      0006CE EF               [12] 2100 	mov	a,r7
      0006CF 2C               [12] 2101 	add	a,r4
      0006D0 F5 82            [12] 2102 	mov	dpl,a
      0006D2 E4               [12] 2103 	clr	a
      0006D3 3D               [12] 2104 	addc	a,r5
      0006D4 F5 83            [12] 2105 	mov	dph,a
      0006D6 E4               [12] 2106 	clr	a
      0006D7 93               [24] 2107 	movc	a,@a+dptr
      0006D8 FD               [12] 2108 	mov	r5,a
                                   2109 ;	radio/radio.c:866: register_write(reg_index[i],
      0006D9 EE               [12] 2110 	mov	a,r6
      0006DA 90r00r11         [24] 2111 	mov	dptr,#_reg_index
      0006DD 93               [24] 2112 	movc	a,@a+dptr
      0006DE FC               [12] 2113 	mov	r4,a
      0006DF C0 07            [24] 2114 	push	ar7
      0006E1 C0 06            [24] 2115 	push	ar6
      0006E3 C0 05            [24] 2116 	push	ar5
      0006E5 8C 82            [24] 2117 	mov	dpl,r4
      0006E7 12r08r0E         [24] 2118 	lcall	_register_write
      0006EA 15 81            [12] 2119 	dec	sp
      0006EC D0 06            [24] 2120 	pop	ar6
      0006EE D0 07            [24] 2121 	pop	ar7
                                   2122 ;	radio/radio.c:865: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      0006F0 0E               [12] 2123 	inc	r6
      0006F1 BE 0C 00         [24] 2124 	cjne	r6,#0x0C,00219$
      0006F4                       2125 00219$:
      0006F4 40 CB            [24] 2126 	jc	00135$
      0006F6 80 76            [24] 2127 	sjmp	00130$
      0006F8                       2128 00126$:
                                   2129 ;	radio/radio.c:869: } else if (g_board_frequency == FREQ_868) {
      0006F8 78r00            [12] 2130 	mov	r0,#_g_board_frequency
      0006FA E2               [24] 2131 	movx	a,@r0
      0006FB B4 86 39         [24] 2132 	cjne	a,#0x86,00160$
                                   2133 ;	radio/radio.c:870: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      0006FE 7E 00            [12] 2134 	mov	r6,#0x00
      000700                       2135 00137$:
                                   2136 ;	radio/radio.c:872: reg_table_868[i][rate_selection]);
      000700 EE               [12] 2137 	mov	a,r6
      000701 75 F0 0D         [24] 2138 	mov	b,#0x0D
      000704 A4               [48] 2139 	mul	ab
      000705 24r62            [12] 2140 	add	a,#_reg_table_868
      000707 FC               [12] 2141 	mov	r4,a
      000708 74s01            [12] 2142 	mov	a,#(_reg_table_868 >> 8)
      00070A 35 F0            [12] 2143 	addc	a,b
      00070C FD               [12] 2144 	mov	r5,a
      00070D EF               [12] 2145 	mov	a,r7
      00070E 2C               [12] 2146 	add	a,r4
      00070F F5 82            [12] 2147 	mov	dpl,a
      000711 E4               [12] 2148 	clr	a
      000712 3D               [12] 2149 	addc	a,r5
      000713 F5 83            [12] 2150 	mov	dph,a
      000715 E4               [12] 2151 	clr	a
      000716 93               [24] 2152 	movc	a,@a+dptr
      000717 FD               [12] 2153 	mov	r5,a
                                   2154 ;	radio/radio.c:871: register_write(reg_index[i],
      000718 EE               [12] 2155 	mov	a,r6
      000719 90r00r11         [24] 2156 	mov	dptr,#_reg_index
      00071C 93               [24] 2157 	movc	a,@a+dptr
      00071D FC               [12] 2158 	mov	r4,a
      00071E C0 07            [24] 2159 	push	ar7
      000720 C0 06            [24] 2160 	push	ar6
      000722 C0 05            [24] 2161 	push	ar5
      000724 8C 82            [24] 2162 	mov	dpl,r4
      000726 12r08r0E         [24] 2163 	lcall	_register_write
      000729 15 81            [12] 2164 	dec	sp
      00072B D0 06            [24] 2165 	pop	ar6
      00072D D0 07            [24] 2166 	pop	ar7
                                   2167 ;	radio/radio.c:870: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      00072F 0E               [12] 2168 	inc	r6
      000730 BE 0C 00         [24] 2169 	cjne	r6,#0x0C,00223$
      000733                       2170 00223$:
      000733 40 CB            [24] 2171 	jc	00137$
                                   2172 ;	radio/radio.c:875: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      000735 80 37            [24] 2173 	sjmp	00130$
      000737                       2174 00160$:
      000737 7E 00            [12] 2175 	mov	r6,#0x00
      000739                       2176 00139$:
                                   2177 ;	radio/radio.c:877: reg_table_915[i][rate_selection]);
      000739 EE               [12] 2178 	mov	a,r6
      00073A 75 F0 0D         [24] 2179 	mov	b,#0x0D
      00073D A4               [48] 2180 	mul	ab
      00073E 24rFE            [12] 2181 	add	a,#_reg_table_915
      000740 FC               [12] 2182 	mov	r4,a
      000741 74s01            [12] 2183 	mov	a,#(_reg_table_915 >> 8)
      000743 35 F0            [12] 2184 	addc	a,b
      000745 FD               [12] 2185 	mov	r5,a
      000746 EF               [12] 2186 	mov	a,r7
      000747 2C               [12] 2187 	add	a,r4
      000748 F5 82            [12] 2188 	mov	dpl,a
      00074A E4               [12] 2189 	clr	a
      00074B 3D               [12] 2190 	addc	a,r5
      00074C F5 83            [12] 2191 	mov	dph,a
      00074E E4               [12] 2192 	clr	a
      00074F 93               [24] 2193 	movc	a,@a+dptr
      000750 FD               [12] 2194 	mov	r5,a
                                   2195 ;	radio/radio.c:876: register_write(reg_index[i],
      000751 EE               [12] 2196 	mov	a,r6
      000752 90r00r11         [24] 2197 	mov	dptr,#_reg_index
      000755 93               [24] 2198 	movc	a,@a+dptr
      000756 FC               [12] 2199 	mov	r4,a
      000757 C0 07            [24] 2200 	push	ar7
      000759 C0 06            [24] 2201 	push	ar6
      00075B C0 05            [24] 2202 	push	ar5
      00075D 8C 82            [24] 2203 	mov	dpl,r4
      00075F 12r08r0E         [24] 2204 	lcall	_register_write
      000762 15 81            [12] 2205 	dec	sp
      000764 D0 06            [24] 2206 	pop	ar6
      000766 D0 07            [24] 2207 	pop	ar7
                                   2208 ;	radio/radio.c:875: for (i = 0; i < NUM_RADIO_REGISTERS; i++) {
      000768 0E               [12] 2209 	inc	r6
      000769 BE 0C 00         [24] 2210 	cjne	r6,#0x0C,00225$
      00076C                       2211 00225$:
      00076C 40 CB            [24] 2212 	jc	00139$
      00076E                       2213 00130$:
                                   2214 ;	radio/radio.c:881: return true;
      00076E D3               [12] 2215 	setb	c
      00076F 22               [24] 2216 	ret
                                   2217 ;------------------------------------------------------------
                                   2218 ;Allocation info for local variables in function 'radio_set_transmit_power'
                                   2219 ;------------------------------------------------------------
                                   2220 ;power                     Allocated with name '_radio_set_transmit_power_power_1_220'
                                   2221 ;i                         Allocated with name '_radio_set_transmit_power_i_1_221'
                                   2222 ;------------------------------------------------------------
                                   2223 ;	radio/radio.c:902: radio_set_transmit_power(uint8_t power)
                                   2224 ;	-----------------------------------------
                                   2225 ;	 function radio_set_transmit_power
                                   2226 ;	-----------------------------------------
      000770                       2227 _radio_set_transmit_power:
      000770 E5 82            [12] 2228 	mov	a,dpl
      000772 90r01r01         [24] 2229 	mov	dptr,#_radio_set_transmit_power_power_1_220
      000775 F0               [24] 2230 	movx	@dptr,a
                                   2231 ;	radio/radio.c:921: for (i=0; i<NUM_POWER_LEVELS; i++) {
      000776 E0               [24] 2232 	movx	a,@dptr
      000777 FF               [12] 2233 	mov	r7,a
      000778 7E 00            [12] 2234 	mov	r6,#0x00
      00077A                       2235 00106$:
                                   2236 ;	radio/radio.c:922: if (power <= power_levels[i]) break;
      00077A EE               [12] 2237 	mov	a,r6
      00077B 90r02r9A         [24] 2238 	mov	dptr,#_power_levels
      00077E 93               [24] 2239 	movc	a,@a+dptr
      00077F FD               [12] 2240 	mov	r5,a
      000780 C3               [12] 2241 	clr	c
      000781 9F               [12] 2242 	subb	a,r7
      000782 50 06            [24] 2243 	jnc	00113$
                                   2244 ;	radio/radio.c:921: for (i=0; i<NUM_POWER_LEVELS; i++) {
      000784 0E               [12] 2245 	inc	r6
      000785 BE 08 00         [24] 2246 	cjne	r6,#0x08,00121$
      000788                       2247 00121$:
      000788 40 F0            [24] 2248 	jc	00106$
      00078A                       2249 00113$:
      00078A 90r01r02         [24] 2250 	mov	dptr,#_radio_set_transmit_power_i_1_221
      00078D EE               [12] 2251 	mov	a,r6
      00078E F0               [24] 2252 	movx	@dptr,a
                                   2253 ;	radio/radio.c:924: if (i == NUM_POWER_LEVELS) {
      00078F BE 08 06         [24] 2254 	cjne	r6,#0x08,00105$
                                   2255 ;	radio/radio.c:925: i = NUM_POWER_LEVELS-1;
      000792 90r01r02         [24] 2256 	mov	dptr,#_radio_set_transmit_power_i_1_221
      000795 74 07            [12] 2257 	mov	a,#0x07
      000797 F0               [24] 2258 	movx	@dptr,a
      000798                       2259 00105$:
                                   2260 ;	radio/radio.c:927: settings.transmit_power = power_levels[i];
      000798 90r01r02         [24] 2261 	mov	dptr,#_radio_set_transmit_power_i_1_221
      00079B E0               [24] 2262 	movx	a,@dptr
      00079C FF               [12] 2263 	mov	r7,a
      00079D 90r02r9A         [24] 2264 	mov	dptr,#_power_levels
      0007A0 93               [24] 2265 	movc	a,@a+dptr
      0007A1 FE               [12] 2266 	mov	r6,a
      0007A2 78r0F            [12] 2267 	mov	r0,#(_settings + 0x000a)
      0007A4 EE               [12] 2268 	mov	a,r6
      0007A5 F2               [24] 2269 	movx	@r0,a
                                   2270 ;	radio/radio.c:928: register_write(EZRADIOPRO_TX_POWER, i);
      0007A6 C0 07            [24] 2271 	push	ar7
      0007A8 75 82 6D         [24] 2272 	mov	dpl,#0x6D
      0007AB 12r08r0E         [24] 2273 	lcall	_register_write
      0007AE 15 81            [12] 2274 	dec	sp
      0007B0 22               [24] 2275 	ret
                                   2276 ;------------------------------------------------------------
                                   2277 ;Allocation info for local variables in function 'radio_get_transmit_power'
                                   2278 ;------------------------------------------------------------
                                   2279 ;	radio/radio.c:935: radio_get_transmit_power(void)
                                   2280 ;	-----------------------------------------
                                   2281 ;	 function radio_get_transmit_power
                                   2282 ;	-----------------------------------------
      0007B1                       2283 _radio_get_transmit_power:
                                   2284 ;	radio/radio.c:937: return settings.transmit_power;
      0007B1 78r0F            [12] 2285 	mov	r0,#(_settings + 0x000a)
      0007B3 E2               [24] 2286 	movx	a,@r0
      0007B4 F5 82            [12] 2287 	mov	dpl,a
      0007B6 22               [24] 2288 	ret
                                   2289 ;------------------------------------------------------------
                                   2290 ;Allocation info for local variables in function 'radio_set_network_id'
                                   2291 ;------------------------------------------------------------
                                   2292 ;id                        Allocated with name '_radio_set_network_id_id_1_226'
                                   2293 ;------------------------------------------------------------
                                   2294 ;	radio/radio.c:943: radio_set_network_id(uint16_t id)
                                   2295 ;	-----------------------------------------
                                   2296 ;	 function radio_set_network_id
                                   2297 ;	-----------------------------------------
      0007B7                       2298 _radio_set_network_id:
      0007B7 AF 83            [24] 2299 	mov	r7,dph
      0007B9 E5 82            [12] 2300 	mov	a,dpl
      0007BB 90r01r03         [24] 2301 	mov	dptr,#_radio_set_network_id_id_1_226
      0007BE F0               [24] 2302 	movx	@dptr,a
      0007BF EF               [12] 2303 	mov	a,r7
      0007C0 A3               [24] 2304 	inc	dptr
      0007C1 F0               [24] 2305 	movx	@dptr,a
                                   2306 ;	radio/radio.c:945: netid[0] = id&0xFF;
      0007C2 90r01r03         [24] 2307 	mov	dptr,#_radio_set_network_id_id_1_226
      0007C5 E0               [24] 2308 	movx	a,@dptr
      0007C6 FE               [12] 2309 	mov	r6,a
      0007C7 A3               [24] 2310 	inc	dptr
      0007C8 E0               [24] 2311 	movx	a,@dptr
      0007C9 FF               [12] 2312 	mov	r7,a
      0007CA 8E 04            [24] 2313 	mov	ar4,r6
      0007CC 78r03            [12] 2314 	mov	r0,#_netid
      0007CE EC               [12] 2315 	mov	a,r4
      0007CF F2               [24] 2316 	movx	@r0,a
                                   2317 ;	radio/radio.c:946: netid[1] = id>>8;
      0007D0 8F 05            [24] 2318 	mov	ar5,r7
      0007D2 78r04            [12] 2319 	mov	r0,#(_netid + 0x0001)
      0007D4 ED               [12] 2320 	mov	a,r5
      0007D5 F2               [24] 2321 	movx	@r0,a
                                   2322 ;	radio/radio.c:947: if (!feature_golay) {
      0007D6 20*00 34         [24] 2323 	jb	_feature_golay,00103$
                                   2324 ;	radio/radio.c:950: register_write(EZRADIOPRO_TRANSMIT_HEADER_3, id >> 8);
      0007D9 C0 07            [24] 2325 	push	ar7
      0007DB C0 06            [24] 2326 	push	ar6
      0007DD C0 05            [24] 2327 	push	ar5
      0007DF C0 05            [24] 2328 	push	ar5
      0007E1 75 82 3A         [24] 2329 	mov	dpl,#0x3A
      0007E4 12r08r0E         [24] 2330 	lcall	_register_write
      0007E7 15 81            [12] 2331 	dec	sp
      0007E9 D0 05            [24] 2332 	pop	ar5
      0007EB D0 06            [24] 2333 	pop	ar6
      0007ED D0 07            [24] 2334 	pop	ar7
                                   2335 ;	radio/radio.c:951: register_write(EZRADIOPRO_TRANSMIT_HEADER_2, id & 0xFF);
      0007EF C0 06            [24] 2336 	push	ar6
      0007F1 C0 05            [24] 2337 	push	ar5
      0007F3 C0 06            [24] 2338 	push	ar6
      0007F5 75 82 3B         [24] 2339 	mov	dpl,#0x3B
      0007F8 12r08r0E         [24] 2340 	lcall	_register_write
      0007FB 15 81            [12] 2341 	dec	sp
                                   2342 ;	radio/radio.c:952: register_write(EZRADIOPRO_CHECK_HEADER_3, id >> 8);
      0007FD 75 82 3F         [24] 2343 	mov	dpl,#0x3F
      000800 12r08r0E         [24] 2344 	lcall	_register_write
      000803 15 81            [12] 2345 	dec	sp
                                   2346 ;	radio/radio.c:953: register_write(EZRADIOPRO_CHECK_HEADER_2, id & 0xFF);
      000805 75 82 40         [24] 2347 	mov	dpl,#0x40
      000808 12r08r0E         [24] 2348 	lcall	_register_write
      00080B 15 81            [12] 2349 	dec	sp
      00080D                       2350 00103$:
      00080D 22               [24] 2351 	ret
                                   2352 ;------------------------------------------------------------
                                   2353 ;Allocation info for local variables in function 'register_write'
                                   2354 ;------------------------------------------------------------
                                   2355 ;value                     Allocated to stack - sp -2
                                   2356 ;reg                       Allocated to registers r7 
                                   2357 ;EX0_saved                 Allocated to registers b0 
                                   2358 ;------------------------------------------------------------
                                   2359 ;	radio/radio.c:964: register_write(uint8_t reg, uint8_t value) __reentrant
                                   2360 ;	-----------------------------------------
                                   2361 ;	 function register_write
                                   2362 ;	-----------------------------------------
      00080E                       2363 _register_write:
      00080E AF 82            [24] 2364 	mov	r7,dpl
                                   2365 ;	radio/radio.c:966: EX0_SAVE_DISABLE;
      000810 A2 A8            [12] 2366 	mov	c,_EX0
      000812 92*00            [24] 2367 	mov	b0,c
      000814 C2 A8            [12] 2368 	clr	_EX0
                                   2369 ;	radio/radio.c:968: RADIO_PAGE();
      000816 75 A7 00         [24] 2370 	mov	_SFRPAGE,#0x00
                                   2371 ;	radio/radio.c:969: NSS1 = 0;                           // drive NSS low
      000819 C2 94            [12] 2372 	clr	_NSS1
                                   2373 ;	radio/radio.c:970: SPIF1 = 0;                          // clear SPIF
      00081B C2 B7            [12] 2374 	clr	_SPIF1
                                   2375 ;	radio/radio.c:971: SPI1DAT = (reg | 0x80);             // write reg address
      00081D 74 80            [12] 2376 	mov	a,#0x80
      00081F 4F               [12] 2377 	orl	a,r7
      000820 F5 86            [12] 2378 	mov	_SPI1DAT,a
                                   2379 ;	radio/radio.c:972: while (!TXBMT1);                    // wait on TXBMT
      000822                       2380 00101$:
      000822 30 B1 FD         [24] 2381 	jnb	_TXBMT1,00101$
                                   2382 ;	radio/radio.c:973: SPI1DAT = value;                    // write value
      000825 A8 81            [24] 2383 	mov	r0,sp
      000827 18               [12] 2384 	dec	r0
      000828 18               [12] 2385 	dec	r0
      000829 86 86            [24] 2386 	mov	_SPI1DAT,@r0
                                   2387 ;	radio/radio.c:974: while (!TXBMT1);                    // wait on TXBMT
      00082B                       2388 00104$:
      00082B 30 B1 FD         [24] 2389 	jnb	_TXBMT1,00104$
                                   2390 ;	radio/radio.c:975: while ((SPI1CFG & 0x80) == 0x80);   // wait on SPIBSY
      00082E                       2391 00107$:
      00082E 74 80            [12] 2392 	mov	a,#0x80
      000830 55 84            [12] 2393 	anl	a,_SPI1CFG
      000832 FF               [12] 2394 	mov	r7,a
      000833 BF 80 02         [24] 2395 	cjne	r7,#0x80,00129$
      000836 80 F6            [24] 2396 	sjmp	00107$
      000838                       2397 00129$:
                                   2398 ;	radio/radio.c:977: SPIF1 = 0;                          // leave SPIF cleared
      000838 C2 B7            [12] 2399 	clr	_SPIF1
                                   2400 ;	radio/radio.c:978: NSS1 = 1;                           // drive NSS high
      00083A D2 94            [12] 2401 	setb	_NSS1
                                   2402 ;	radio/radio.c:979: SFRPAGE = LEGACY_PAGE;
      00083C 75 A7 00         [24] 2403 	mov	_SFRPAGE,#0x00
                                   2404 ;	radio/radio.c:981: EX0_RESTORE;
      00083F A2*00            [12] 2405 	mov	c,b0
      000841 92 A8            [24] 2406 	mov	_EX0,c
      000843 22               [24] 2407 	ret
                                   2408 ;------------------------------------------------------------
                                   2409 ;Allocation info for local variables in function 'register_read'
                                   2410 ;------------------------------------------------------------
                                   2411 ;reg                       Allocated to registers r7 
                                   2412 ;value                     Allocated to registers r7 
                                   2413 ;EX0_saved                 Allocated to registers b0 
                                   2414 ;------------------------------------------------------------
                                   2415 ;	radio/radio.c:991: register_read(uint8_t reg) __reentrant
                                   2416 ;	-----------------------------------------
                                   2417 ;	 function register_read
                                   2418 ;	-----------------------------------------
      000844                       2419 _register_read:
      000844 AF 82            [24] 2420 	mov	r7,dpl
                                   2421 ;	radio/radio.c:994: EX0_SAVE_DISABLE;
      000846 A2 A8            [12] 2422 	mov	c,_EX0
      000848 92*00            [24] 2423 	mov	b0,c
      00084A C2 A8            [12] 2424 	clr	_EX0
                                   2425 ;	radio/radio.c:996: RADIO_PAGE();
      00084C 75 A7 00         [24] 2426 	mov	_SFRPAGE,#0x00
                                   2427 ;	radio/radio.c:997: NSS1 = 0;				// dsrive NSS low
      00084F C2 94            [12] 2428 	clr	_NSS1
                                   2429 ;	radio/radio.c:998: SPIF1 = 0;				// clear SPIF
      000851 C2 B7            [12] 2430 	clr	_SPIF1
                                   2431 ;	radio/radio.c:999: SPI1DAT = (reg);			// write reg address
      000853 8F 86            [24] 2432 	mov	_SPI1DAT,r7
                                   2433 ;	radio/radio.c:1000: while (!TXBMT1);			// wait on TXBMT
      000855                       2434 00101$:
      000855 30 B1 FD         [24] 2435 	jnb	_TXBMT1,00101$
                                   2436 ;	radio/radio.c:1001: SPI1DAT = 0x00;				// write anything
      000858 75 86 00         [24] 2437 	mov	_SPI1DAT,#0x00
                                   2438 ;	radio/radio.c:1002: while (!TXBMT1);			// wait on TXBMT
      00085B                       2439 00104$:
      00085B 30 B1 FD         [24] 2440 	jnb	_TXBMT1,00104$
                                   2441 ;	radio/radio.c:1003: while ((SPI1CFG & 0x80) == 0x80);	// wait on SPIBSY
      00085E                       2442 00107$:
      00085E 74 80            [12] 2443 	mov	a,#0x80
      000860 55 84            [12] 2444 	anl	a,_SPI1CFG
      000862 FF               [12] 2445 	mov	r7,a
      000863 BF 80 02         [24] 2446 	cjne	r7,#0x80,00129$
      000866 80 F6            [24] 2447 	sjmp	00107$
      000868                       2448 00129$:
                                   2449 ;	radio/radio.c:1004: value = SPI1DAT;			// read value
      000868 AF 86            [24] 2450 	mov	r7,_SPI1DAT
                                   2451 ;	radio/radio.c:1005: SPIF1 = 0;				// leave SPIF cleared
      00086A C2 B7            [12] 2452 	clr	_SPIF1
                                   2453 ;	radio/radio.c:1006: NSS1 = 1;				// drive NSS high
      00086C D2 94            [12] 2454 	setb	_NSS1
                                   2455 ;	radio/radio.c:1007: SFRPAGE = LEGACY_PAGE;
      00086E 75 A7 00         [24] 2456 	mov	_SFRPAGE,#0x00
                                   2457 ;	radio/radio.c:1009: EX0_RESTORE;
      000871 A2*00            [12] 2458 	mov	c,b0
      000873 92 A8            [24] 2459 	mov	_EX0,c
                                   2460 ;	radio/radio.c:1011: return value;
      000875 8F 82            [24] 2461 	mov	dpl,r7
      000877 22               [24] 2462 	ret
                                   2463 ;------------------------------------------------------------
                                   2464 ;Allocation info for local variables in function 'read_receive_fifo'
                                   2465 ;------------------------------------------------------------
                                   2466 ;buf                       Allocated to stack - sp -3
                                   2467 ;n                         Allocated to registers r7 
                                   2468 ;------------------------------------------------------------
                                   2469 ;	radio/radio.c:1018: read_receive_fifo(register uint8_t n, __xdata uint8_t * buf) __reentrant
                                   2470 ;	-----------------------------------------
                                   2471 ;	 function read_receive_fifo
                                   2472 ;	-----------------------------------------
      000878                       2473 _read_receive_fifo:
      000878 AF 82            [24] 2474 	mov	r7,dpl
                                   2475 ;	radio/radio.c:1020: RADIO_PAGE();
      00087A 75 A7 00         [24] 2476 	mov	_SFRPAGE,#0x00
                                   2477 ;	radio/radio.c:1021: NSS1 = 0;				// drive NSS low
      00087D C2 94            [12] 2478 	clr	_NSS1
                                   2479 ;	radio/radio.c:1022: SPIF1 = 0;				// clear SPIF
      00087F C2 B7            [12] 2480 	clr	_SPIF1
                                   2481 ;	radio/radio.c:1023: SPI1DAT = EZRADIOPRO_FIFO_ACCESS;
      000881 75 86 7F         [24] 2482 	mov	_SPI1DAT,#0x7F
                                   2483 ;	radio/radio.c:1024: while (!SPIF1);				// wait on SPIF
      000884                       2484 00101$:
      000884 30 B7 FD         [24] 2485 	jnb	_SPIF1,00101$
                                   2486 ;	radio/radio.c:1025: ACC = SPI1DAT;				// discard first byte
      000887 85 86 E0         [24] 2487 	mov	_ACC,_SPI1DAT
                                   2488 ;	radio/radio.c:1027: while (n--) {
      00088A E5 81            [12] 2489 	mov	a,sp
      00088C 24 FD            [12] 2490 	add	a,#0xfd
      00088E F8               [12] 2491 	mov	r0,a
      00088F 86 05            [24] 2492 	mov	ar5,@r0
      000891 08               [12] 2493 	inc	r0
      000892 86 06            [24] 2494 	mov	ar6,@r0
      000894                       2495 00107$:
      000894 8F 04            [24] 2496 	mov	ar4,r7
      000896 1F               [12] 2497 	dec	r7
      000897 EC               [12] 2498 	mov	a,r4
      000898 60 16            [24] 2499 	jz	00109$
                                   2500 ;	radio/radio.c:1028: SPIF1 = 0;			// clear SPIF
      00089A C2 B7            [12] 2501 	clr	_SPIF1
                                   2502 ;	radio/radio.c:1029: SPI1DAT = 0x00;			// write anything
      00089C 75 86 00         [24] 2503 	mov	_SPI1DAT,#0x00
                                   2504 ;	radio/radio.c:1030: while (!SPIF1);			// wait on SPIF
      00089F                       2505 00104$:
      00089F 30 B7 FD         [24] 2506 	jnb	_SPIF1,00104$
                                   2507 ;	radio/radio.c:1031: *buf++ = SPI1DAT;		// copy to buffer
      0008A2 8D 82            [24] 2508 	mov	dpl,r5
      0008A4 8E 83            [24] 2509 	mov	dph,r6
      0008A6 E5 86            [12] 2510 	mov	a,_SPI1DAT
      0008A8 F0               [24] 2511 	movx	@dptr,a
      0008A9 A3               [24] 2512 	inc	dptr
      0008AA AD 82            [24] 2513 	mov	r5,dpl
      0008AC AE 83            [24] 2514 	mov	r6,dph
      0008AE 80 E4            [24] 2515 	sjmp	00107$
      0008B0                       2516 00109$:
                                   2517 ;	radio/radio.c:1034: SPIF1 = 0;				// leave SPIF cleared
      0008B0 C2 B7            [12] 2518 	clr	_SPIF1
                                   2519 ;	radio/radio.c:1035: NSS1 = 1;				// drive NSS high
      0008B2 D2 94            [12] 2520 	setb	_NSS1
                                   2521 ;	radio/radio.c:1036: SFRPAGE = LEGACY_PAGE;
      0008B4 75 A7 00         [24] 2522 	mov	_SFRPAGE,#0x00
      0008B7 22               [24] 2523 	ret
                                   2524 ;------------------------------------------------------------
                                   2525 ;Allocation info for local variables in function 'clear_status_registers'
                                   2526 ;------------------------------------------------------------
                                   2527 ;	radio/radio.c:1042: clear_status_registers(void)
                                   2528 ;	-----------------------------------------
                                   2529 ;	 function clear_status_registers
                                   2530 ;	-----------------------------------------
      0008B8                       2531 _clear_status_registers:
                                   2532 ;	radio/radio.c:1044: register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      0008B8 75 82 03         [24] 2533 	mov	dpl,#0x03
      0008BB 12r08r44         [24] 2534 	lcall	_register_read
                                   2535 ;	radio/radio.c:1045: register_read(EZRADIOPRO_INTERRUPT_STATUS_2);
      0008BE 75 82 04         [24] 2536 	mov	dpl,#0x04
      0008C1 02r08r44         [24] 2537 	ljmp	_register_read
                                   2538 ;------------------------------------------------------------
                                   2539 ;Allocation info for local variables in function 'scale_uint32'
                                   2540 ;------------------------------------------------------------
                                   2541 ;	radio/radio.c:1055: scale_uint32(__pdata uint32_t value, __pdata uint32_t scale)
                                   2542 ;	-----------------------------------------
                                   2543 ;	 function scale_uint32
                                   2544 ;	-----------------------------------------
      0008C4                       2545 _scale_uint32:
      0008C4 AF 82            [24] 2546 	mov	r7,dpl
      0008C6 AE 83            [24] 2547 	mov	r6,dph
      0008C8 AD F0            [24] 2548 	mov	r5,b
      0008CA FC               [12] 2549 	mov	r4,a
      0008CB 78r21            [12] 2550 	mov	r0,#_scale_uint32_value_1_238
      0008CD EF               [12] 2551 	mov	a,r7
      0008CE F2               [24] 2552 	movx	@r0,a
      0008CF 08               [12] 2553 	inc	r0
      0008D0 EE               [12] 2554 	mov	a,r6
      0008D1 F2               [24] 2555 	movx	@r0,a
      0008D2 08               [12] 2556 	inc	r0
      0008D3 ED               [12] 2557 	mov	a,r5
      0008D4 F2               [24] 2558 	movx	@r0,a
      0008D5 08               [12] 2559 	inc	r0
      0008D6 EC               [12] 2560 	mov	a,r4
      0008D7 F2               [24] 2561 	movx	@r0,a
                                   2562 ;	radio/radio.c:1057: return (value + (scale >> 1)) / scale;
      0008D8 78r20            [12] 2563 	mov	r0,#(_scale_uint32_PARM_2 + 3)
      0008DA E2               [24] 2564 	movx	a,@r0
      0008DB C3               [12] 2565 	clr	c
      0008DC 13               [12] 2566 	rrc	a
      0008DD FF               [12] 2567 	mov	r7,a
      0008DE 18               [12] 2568 	dec	r0
      0008DF E2               [24] 2569 	movx	a,@r0
      0008E0 13               [12] 2570 	rrc	a
      0008E1 FE               [12] 2571 	mov	r6,a
      0008E2 18               [12] 2572 	dec	r0
      0008E3 E2               [24] 2573 	movx	a,@r0
      0008E4 13               [12] 2574 	rrc	a
      0008E5 FB               [12] 2575 	mov	r3,a
      0008E6 18               [12] 2576 	dec	r0
      0008E7 E2               [24] 2577 	movx	a,@r0
      0008E8 13               [12] 2578 	rrc	a
      0008E9 FA               [12] 2579 	mov	r2,a
      0008EA 78r21            [12] 2580 	mov	r0,#_scale_uint32_value_1_238
      0008EC E2               [24] 2581 	movx	a,@r0
      0008ED 2A               [12] 2582 	add	a,r2
      0008EE FA               [12] 2583 	mov	r2,a
      0008EF 08               [12] 2584 	inc	r0
      0008F0 E2               [24] 2585 	movx	a,@r0
      0008F1 3B               [12] 2586 	addc	a,r3
      0008F2 FB               [12] 2587 	mov	r3,a
      0008F3 08               [12] 2588 	inc	r0
      0008F4 E2               [24] 2589 	movx	a,@r0
      0008F5 3E               [12] 2590 	addc	a,r6
      0008F6 FE               [12] 2591 	mov	r6,a
      0008F7 08               [12] 2592 	inc	r0
      0008F8 E2               [24] 2593 	movx	a,@r0
      0008F9 3F               [12] 2594 	addc	a,r7
      0008FA FF               [12] 2595 	mov	r7,a
      0008FB 78r1D            [12] 2596 	mov	r0,#_scale_uint32_PARM_2
      0008FD 90r00r00         [24] 2597 	mov	dptr,#__divulong_PARM_2
      000900 E2               [24] 2598 	movx	a,@r0
      000901 F0               [24] 2599 	movx	@dptr,a
      000902 08               [12] 2600 	inc	r0
      000903 E2               [24] 2601 	movx	a,@r0
      000904 A3               [24] 2602 	inc	dptr
      000905 F0               [24] 2603 	movx	@dptr,a
      000906 08               [12] 2604 	inc	r0
      000907 E2               [24] 2605 	movx	a,@r0
      000908 A3               [24] 2606 	inc	dptr
      000909 F0               [24] 2607 	movx	@dptr,a
      00090A 08               [12] 2608 	inc	r0
      00090B E2               [24] 2609 	movx	a,@r0
      00090C A3               [24] 2610 	inc	dptr
      00090D F0               [24] 2611 	movx	@dptr,a
      00090E 8A 82            [24] 2612 	mov	dpl,r2
      000910 8B 83            [24] 2613 	mov	dph,r3
      000912 8E F0            [24] 2614 	mov	b,r6
      000914 EF               [12] 2615 	mov	a,r7
      000915 02r00r00         [24] 2616 	ljmp	__divulong
                                   2617 ;------------------------------------------------------------
                                   2618 ;Allocation info for local variables in function 'software_reset'
                                   2619 ;------------------------------------------------------------
                                   2620 ;status                    Allocated with name '_software_reset_status_1_241'
                                   2621 ;------------------------------------------------------------
                                   2622 ;	radio/radio.c:1065: software_reset(void)
                                   2623 ;	-----------------------------------------
                                   2624 ;	 function software_reset
                                   2625 ;	-----------------------------------------
      000918                       2626 _software_reset:
                                   2627 ;	radio/radio.c:1070: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      000918 E4               [12] 2628 	clr	a
      000919 C0 E0            [24] 2629 	push	acc
      00091B 75 82 05         [24] 2630 	mov	dpl,#0x05
      00091E 12r08r0E         [24] 2631 	lcall	_register_write
      000921 15 81            [12] 2632 	dec	sp
                                   2633 ;	radio/radio.c:1071: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0);
      000923 E4               [12] 2634 	clr	a
      000924 C0 E0            [24] 2635 	push	acc
      000926 75 82 06         [24] 2636 	mov	dpl,#0x06
      000929 12r08r0E         [24] 2637 	lcall	_register_write
      00092C 15 81            [12] 2638 	dec	sp
                                   2639 ;	radio/radio.c:1073: clear_status_registers();
      00092E 12r08rB8         [24] 2640 	lcall	_clear_status_registers
                                   2641 ;	radio/radio.c:1076: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, (EZRADIOPRO_SWRES | EZRADIOPRO_XTON));
      000931 74 81            [12] 2642 	mov	a,#0x81
      000933 C0 E0            [24] 2643 	push	acc
      000935 75 82 07         [24] 2644 	mov	dpl,#0x07
      000938 12r08r0E         [24] 2645 	lcall	_register_write
      00093B 15 81            [12] 2646 	dec	sp
                                   2647 ;	radio/radio.c:1079: delay_set(2);
      00093D 90 00 02         [24] 2648 	mov	dptr,#0x0002
      000940 12r00r00         [24] 2649 	lcall	_delay_set
                                   2650 ;	radio/radio.c:1080: while (IRQ) {
      000943                       2651 00103$:
      000943 30 87 07         [24] 2652 	jnb	_IRQ,00105$
                                   2653 ;	radio/radio.c:1081: if (delay_expired()) {
      000946 12r00r00         [24] 2654 	lcall	_delay_expired
      000949 50 F8            [24] 2655 	jnc	00103$
                                   2656 ;	radio/radio.c:1082: return false;
      00094B C3               [12] 2657 	clr	c
      00094C 22               [24] 2658 	ret
      00094D                       2659 00105$:
                                   2660 ;	radio/radio.c:1087: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      00094D E4               [12] 2661 	clr	a
      00094E C0 E0            [24] 2662 	push	acc
      000950 75 82 05         [24] 2663 	mov	dpl,#0x05
      000953 12r08r0E         [24] 2664 	lcall	_register_write
      000956 15 81            [12] 2665 	dec	sp
                                   2666 ;	radio/radio.c:1088: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, EZRADIOPRO_ENCHIPRDY);
      000958 74 02            [12] 2667 	mov	a,#0x02
      00095A C0 E0            [24] 2668 	push	acc
      00095C 75 82 06         [24] 2669 	mov	dpl,#0x06
      00095F 12r08r0E         [24] 2670 	lcall	_register_write
      000962 15 81            [12] 2671 	dec	sp
                                   2672 ;	radio/radio.c:1090: delay_set(20);
      000964 90 00 14         [24] 2673 	mov	dptr,#0x0014
      000967 12r00r00         [24] 2674 	lcall	_delay_set
                                   2675 ;	radio/radio.c:1091: while (!delay_expired()) {
      00096A                       2676 00108$:
      00096A 12r00r00         [24] 2677 	lcall	_delay_expired
      00096D 40 13            [24] 2678 	jc	00110$
                                   2679 ;	radio/radio.c:1092: status = register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      00096F 75 82 03         [24] 2680 	mov	dpl,#0x03
      000972 12r08r44         [24] 2681 	lcall	_register_read
                                   2682 ;	radio/radio.c:1093: status = register_read(EZRADIOPRO_INTERRUPT_STATUS_2);
      000975 75 82 04         [24] 2683 	mov	dpl,#0x04
      000978 12r08r44         [24] 2684 	lcall	_register_read
      00097B E5 82            [12] 2685 	mov	a,dpl
                                   2686 ;	radio/radio.c:1094: if (status & EZRADIOPRO_ICHIPRDY) {
      00097D 30 E1 EA         [24] 2687 	jnb	acc.1,00108$
                                   2688 ;	radio/radio.c:1095: return true;
      000980 D3               [12] 2689 	setb	c
      000981 22               [24] 2690 	ret
      000982                       2691 00110$:
                                   2692 ;	radio/radio.c:1098: return false;
      000982 C3               [12] 2693 	clr	c
      000983 22               [24] 2694 	ret
                                   2695 ;------------------------------------------------------------
                                   2696 ;Allocation info for local variables in function 'set_frequency_registers'
                                   2697 ;------------------------------------------------------------
                                   2698 ;band                      Allocated with name '_set_frequency_registers_band_1_247'
                                   2699 ;carrier                   Allocated with name '_set_frequency_registers_carrier_1_247'
                                   2700 ;------------------------------------------------------------
                                   2701 ;	radio/radio.c:1105: set_frequency_registers(__pdata uint32_t frequency)
                                   2702 ;	-----------------------------------------
                                   2703 ;	 function set_frequency_registers
                                   2704 ;	-----------------------------------------
      000984                       2705 _set_frequency_registers:
      000984 AF 82            [24] 2706 	mov	r7,dpl
      000986 AE 83            [24] 2707 	mov	r6,dph
      000988 AD F0            [24] 2708 	mov	r5,b
      00098A FC               [12] 2709 	mov	r4,a
      00098B 78r25            [12] 2710 	mov	r0,#_set_frequency_registers_frequency_1_246
      00098D EF               [12] 2711 	mov	a,r7
      00098E F2               [24] 2712 	movx	@r0,a
      00098F 08               [12] 2713 	inc	r0
      000990 EE               [12] 2714 	mov	a,r6
      000991 F2               [24] 2715 	movx	@r0,a
      000992 08               [12] 2716 	inc	r0
      000993 ED               [12] 2717 	mov	a,r5
      000994 F2               [24] 2718 	movx	@r0,a
      000995 08               [12] 2719 	inc	r0
      000996 EC               [12] 2720 	mov	a,r4
      000997 F2               [24] 2721 	movx	@r0,a
                                   2722 ;	radio/radio.c:1110: if (frequency > 480000000UL) {
      000998 78r25            [12] 2723 	mov	r0,#_set_frequency_registers_frequency_1_246
      00099A C3               [12] 2724 	clr	c
      00099B E2               [24] 2725 	movx	a,@r0
      00099C F5 F0            [12] 2726 	mov	b,a
      00099E E4               [12] 2727 	clr	a
      00099F 95 F0            [12] 2728 	subb	a,b
      0009A1 08               [12] 2729 	inc	r0
      0009A2 E2               [24] 2730 	movx	a,@r0
      0009A3 F5 F0            [12] 2731 	mov	b,a
      0009A5 74 38            [12] 2732 	mov	a,#0x38
      0009A7 95 F0            [12] 2733 	subb	a,b
      0009A9 08               [12] 2734 	inc	r0
      0009AA E2               [24] 2735 	movx	a,@r0
      0009AB F5 F0            [12] 2736 	mov	b,a
      0009AD 74 9C            [12] 2737 	mov	a,#0x9C
      0009AF 95 F0            [12] 2738 	subb	a,b
      0009B1 08               [12] 2739 	inc	r0
      0009B2 E2               [24] 2740 	movx	a,@r0
      0009B3 F5 F0            [12] 2741 	mov	b,a
      0009B5 74 1C            [12] 2742 	mov	a,#0x1C
      0009B7 95 F0            [12] 2743 	subb	a,b
      0009B9 40 03            [24] 2744 	jc	00109$
      0009BB 02r0Ar79         [24] 2745 	ljmp	00102$
      0009BE                       2746 00109$:
                                   2747 ;	radio/radio.c:1111: frequency -= 480000000UL;
      0009BE 78r26            [12] 2748 	mov	r0,#(_set_frequency_registers_frequency_1_246 + 1)
      0009C0 E2               [24] 2749 	movx	a,@r0
      0009C1 24 C8            [12] 2750 	add	a,#0xC8
      0009C3 F2               [24] 2751 	movx	@r0,a
      0009C4 08               [12] 2752 	inc	r0
      0009C5 E2               [24] 2753 	movx	a,@r0
      0009C6 34 63            [12] 2754 	addc	a,#0x63
      0009C8 F2               [24] 2755 	movx	@r0,a
      0009C9 08               [12] 2756 	inc	r0
      0009CA E2               [24] 2757 	movx	a,@r0
      0009CB 34 E3            [12] 2758 	addc	a,#0xE3
      0009CD F2               [24] 2759 	movx	@r0,a
                                   2760 ;	radio/radio.c:1112: band  = frequency / 20000000UL;
      0009CE 90r00r00         [24] 2761 	mov	dptr,#__divulong_PARM_2
      0009D1 E4               [12] 2762 	clr	a
      0009D2 F0               [24] 2763 	movx	@dptr,a
      0009D3 74 2D            [12] 2764 	mov	a,#0x2D
      0009D5 A3               [24] 2765 	inc	dptr
      0009D6 F0               [24] 2766 	movx	@dptr,a
      0009D7 74 31            [12] 2767 	mov	a,#0x31
      0009D9 A3               [24] 2768 	inc	dptr
      0009DA F0               [24] 2769 	movx	@dptr,a
      0009DB 74 01            [12] 2770 	mov	a,#0x01
      0009DD A3               [24] 2771 	inc	dptr
      0009DE F0               [24] 2772 	movx	@dptr,a
      0009DF 78r25            [12] 2773 	mov	r0,#_set_frequency_registers_frequency_1_246
      0009E1 E2               [24] 2774 	movx	a,@r0
      0009E2 F5 82            [12] 2775 	mov	dpl,a
      0009E4 08               [12] 2776 	inc	r0
      0009E5 E2               [24] 2777 	movx	a,@r0
      0009E6 F5 83            [12] 2778 	mov	dph,a
      0009E8 08               [12] 2779 	inc	r0
      0009E9 E2               [24] 2780 	movx	a,@r0
      0009EA F5 F0            [12] 2781 	mov	b,a
      0009EC 08               [12] 2782 	inc	r0
      0009ED E2               [24] 2783 	movx	a,@r0
      0009EE 12r00r00         [24] 2784 	lcall	__divulong
      0009F1 AA 82            [24] 2785 	mov	r2,dpl
      0009F3 90r01r05         [24] 2786 	mov	dptr,#_set_frequency_registers_band_1_247
      0009F6 EA               [12] 2787 	mov	a,r2
      0009F7 F0               [24] 2788 	movx	@dptr,a
                                   2789 ;	radio/radio.c:1113: frequency -= (uint32_t)band * 20000000UL;
      0009F8 90r00r00         [24] 2790 	mov	dptr,#__mullong_PARM_2
      0009FB EA               [12] 2791 	mov	a,r2
      0009FC F0               [24] 2792 	movx	@dptr,a
      0009FD E4               [12] 2793 	clr	a
      0009FE A3               [24] 2794 	inc	dptr
      0009FF F0               [24] 2795 	movx	@dptr,a
      000A00 A3               [24] 2796 	inc	dptr
      000A01 F0               [24] 2797 	movx	@dptr,a
      000A02 A3               [24] 2798 	inc	dptr
      000A03 F0               [24] 2799 	movx	@dptr,a
      000A04 90 2D 00         [24] 2800 	mov	dptr,#0x2D00
      000A07 75 F0 31         [24] 2801 	mov	b,#0x31
      000A0A 74 01            [12] 2802 	mov	a,#0x01
      000A0C 12r00r00         [24] 2803 	lcall	__mullong
      000A0F AC 82            [24] 2804 	mov	r4,dpl
      000A11 AD 83            [24] 2805 	mov	r5,dph
      000A13 AE F0            [24] 2806 	mov	r6,b
      000A15 FF               [12] 2807 	mov	r7,a
      000A16 78r25            [12] 2808 	mov	r0,#_set_frequency_registers_frequency_1_246
      000A18 E2               [24] 2809 	movx	a,@r0
      000A19 C3               [12] 2810 	clr	c
      000A1A 9C               [12] 2811 	subb	a,r4
      000A1B F2               [24] 2812 	movx	@r0,a
      000A1C 08               [12] 2813 	inc	r0
      000A1D E2               [24] 2814 	movx	a,@r0
      000A1E 9D               [12] 2815 	subb	a,r5
      000A1F F2               [24] 2816 	movx	@r0,a
      000A20 08               [12] 2817 	inc	r0
      000A21 E2               [24] 2818 	movx	a,@r0
      000A22 9E               [12] 2819 	subb	a,r6
      000A23 F2               [24] 2820 	movx	@r0,a
      000A24 08               [12] 2821 	inc	r0
      000A25 E2               [24] 2822 	movx	a,@r0
      000A26 9F               [12] 2823 	subb	a,r7
      000A27 F2               [24] 2824 	movx	@r0,a
                                   2825 ;	radio/radio.c:1114: frequency  = scale_uint32(frequency, 625);
      000A28 78r1D            [12] 2826 	mov	r0,#_scale_uint32_PARM_2
      000A2A 74 71            [12] 2827 	mov	a,#0x71
      000A2C F2               [24] 2828 	movx	@r0,a
      000A2D 08               [12] 2829 	inc	r0
      000A2E 74 02            [12] 2830 	mov	a,#0x02
      000A30 F2               [24] 2831 	movx	@r0,a
      000A31 08               [12] 2832 	inc	r0
      000A32 E4               [12] 2833 	clr	a
      000A33 F2               [24] 2834 	movx	@r0,a
      000A34 08               [12] 2835 	inc	r0
      000A35 F2               [24] 2836 	movx	@r0,a
      000A36 78r25            [12] 2837 	mov	r0,#_set_frequency_registers_frequency_1_246
      000A38 E2               [24] 2838 	movx	a,@r0
      000A39 F5 82            [12] 2839 	mov	dpl,a
      000A3B 08               [12] 2840 	inc	r0
      000A3C E2               [24] 2841 	movx	a,@r0
      000A3D F5 83            [12] 2842 	mov	dph,a
      000A3F 08               [12] 2843 	inc	r0
      000A40 E2               [24] 2844 	movx	a,@r0
      000A41 F5 F0            [12] 2845 	mov	b,a
      000A43 08               [12] 2846 	inc	r0
      000A44 E2               [24] 2847 	movx	a,@r0
      000A45 12r08rC4         [24] 2848 	lcall	_scale_uint32
      000A48 78r25            [12] 2849 	mov	r0,#_set_frequency_registers_frequency_1_246
      000A4A C0 E0            [24] 2850 	push	acc
      000A4C E5 82            [12] 2851 	mov	a,dpl
      000A4E F2               [24] 2852 	movx	@r0,a
      000A4F 08               [12] 2853 	inc	r0
      000A50 E5 83            [12] 2854 	mov	a,dph
      000A52 F2               [24] 2855 	movx	@r0,a
      000A53 08               [12] 2856 	inc	r0
      000A54 E5 F0            [12] 2857 	mov	a,b
      000A56 F2               [24] 2858 	movx	@r0,a
      000A57 D0 E0            [24] 2859 	pop	acc
      000A59 08               [12] 2860 	inc	r0
      000A5A F2               [24] 2861 	movx	@r0,a
                                   2862 ;	radio/radio.c:1115: frequency <<= 1;
      000A5B 78r25            [12] 2863 	mov	r0,#_set_frequency_registers_frequency_1_246
      000A5D E2               [24] 2864 	movx	a,@r0
      000A5E 25 E0            [12] 2865 	add	a,acc
      000A60 F2               [24] 2866 	movx	@r0,a
      000A61 08               [12] 2867 	inc	r0
      000A62 E2               [24] 2868 	movx	a,@r0
      000A63 33               [12] 2869 	rlc	a
      000A64 F2               [24] 2870 	movx	@r0,a
      000A65 08               [12] 2871 	inc	r0
      000A66 E2               [24] 2872 	movx	a,@r0
      000A67 33               [12] 2873 	rlc	a
      000A68 F2               [24] 2874 	movx	@r0,a
      000A69 08               [12] 2875 	inc	r0
      000A6A E2               [24] 2876 	movx	a,@r0
      000A6B 33               [12] 2877 	rlc	a
      000A6C F2               [24] 2878 	movx	@r0,a
                                   2879 ;	radio/radio.c:1116: band |= EZRADIOPRO_HBSEL;
      000A6D 90r01r05         [24] 2880 	mov	dptr,#_set_frequency_registers_band_1_247
      000A70 E0               [24] 2881 	movx	a,@dptr
      000A71 FF               [12] 2882 	mov	r7,a
      000A72 74 20            [12] 2883 	mov	a,#0x20
      000A74 4F               [12] 2884 	orl	a,r7
      000A75 F0               [24] 2885 	movx	@dptr,a
      000A76 02r0Br3A         [24] 2886 	ljmp	00103$
      000A79                       2887 00102$:
                                   2888 ;	radio/radio.c:1118: frequency -= 240000000UL;
      000A79 78r26            [12] 2889 	mov	r0,#(_set_frequency_registers_frequency_1_246 + 1)
      000A7B E2               [24] 2890 	movx	a,@r0
      000A7C 24 E4            [12] 2891 	add	a,#0xE4
      000A7E F2               [24] 2892 	movx	@r0,a
      000A7F 08               [12] 2893 	inc	r0
      000A80 E2               [24] 2894 	movx	a,@r0
      000A81 34 B1            [12] 2895 	addc	a,#0xB1
      000A83 F2               [24] 2896 	movx	@r0,a
      000A84 08               [12] 2897 	inc	r0
      000A85 E2               [24] 2898 	movx	a,@r0
      000A86 34 F1            [12] 2899 	addc	a,#0xF1
      000A88 F2               [24] 2900 	movx	@r0,a
                                   2901 ;	radio/radio.c:1119: band  = frequency / 10000000UL;
      000A89 90r00r00         [24] 2902 	mov	dptr,#__divulong_PARM_2
      000A8C 74 80            [12] 2903 	mov	a,#0x80
      000A8E F0               [24] 2904 	movx	@dptr,a
      000A8F 74 96            [12] 2905 	mov	a,#0x96
      000A91 A3               [24] 2906 	inc	dptr
      000A92 F0               [24] 2907 	movx	@dptr,a
      000A93 74 98            [12] 2908 	mov	a,#0x98
      000A95 A3               [24] 2909 	inc	dptr
      000A96 F0               [24] 2910 	movx	@dptr,a
      000A97 E4               [12] 2911 	clr	a
      000A98 A3               [24] 2912 	inc	dptr
      000A99 F0               [24] 2913 	movx	@dptr,a
      000A9A 78r25            [12] 2914 	mov	r0,#_set_frequency_registers_frequency_1_246
      000A9C E2               [24] 2915 	movx	a,@r0
      000A9D F5 82            [12] 2916 	mov	dpl,a
      000A9F 08               [12] 2917 	inc	r0
      000AA0 E2               [24] 2918 	movx	a,@r0
      000AA1 F5 83            [12] 2919 	mov	dph,a
      000AA3 08               [12] 2920 	inc	r0
      000AA4 E2               [24] 2921 	movx	a,@r0
      000AA5 F5 F0            [12] 2922 	mov	b,a
      000AA7 08               [12] 2923 	inc	r0
      000AA8 E2               [24] 2924 	movx	a,@r0
      000AA9 12r00r00         [24] 2925 	lcall	__divulong
      000AAC AC 82            [24] 2926 	mov	r4,dpl
      000AAE 90r01r05         [24] 2927 	mov	dptr,#_set_frequency_registers_band_1_247
      000AB1 EC               [12] 2928 	mov	a,r4
      000AB2 F0               [24] 2929 	movx	@dptr,a
                                   2930 ;	radio/radio.c:1120: frequency -= (uint32_t)band * 10000000UL;
      000AB3 90r00r00         [24] 2931 	mov	dptr,#__mullong_PARM_2
      000AB6 EC               [12] 2932 	mov	a,r4
      000AB7 F0               [24] 2933 	movx	@dptr,a
      000AB8 E4               [12] 2934 	clr	a
      000AB9 A3               [24] 2935 	inc	dptr
      000ABA F0               [24] 2936 	movx	@dptr,a
      000ABB A3               [24] 2937 	inc	dptr
      000ABC F0               [24] 2938 	movx	@dptr,a
      000ABD A3               [24] 2939 	inc	dptr
      000ABE F0               [24] 2940 	movx	@dptr,a
      000ABF 90 96 80         [24] 2941 	mov	dptr,#0x9680
      000AC2 75 F0 98         [24] 2942 	mov	b,#0x98
      000AC5 E4               [12] 2943 	clr	a
      000AC6 12r00r00         [24] 2944 	lcall	__mullong
      000AC9 AC 82            [24] 2945 	mov	r4,dpl
      000ACB AD 83            [24] 2946 	mov	r5,dph
      000ACD AE F0            [24] 2947 	mov	r6,b
      000ACF FF               [12] 2948 	mov	r7,a
      000AD0 78r25            [12] 2949 	mov	r0,#_set_frequency_registers_frequency_1_246
      000AD2 E2               [24] 2950 	movx	a,@r0
      000AD3 C3               [12] 2951 	clr	c
      000AD4 9C               [12] 2952 	subb	a,r4
      000AD5 F2               [24] 2953 	movx	@r0,a
      000AD6 08               [12] 2954 	inc	r0
      000AD7 E2               [24] 2955 	movx	a,@r0
      000AD8 9D               [12] 2956 	subb	a,r5
      000AD9 F2               [24] 2957 	movx	@r0,a
      000ADA 08               [12] 2958 	inc	r0
      000ADB E2               [24] 2959 	movx	a,@r0
      000ADC 9E               [12] 2960 	subb	a,r6
      000ADD F2               [24] 2961 	movx	@r0,a
      000ADE 08               [12] 2962 	inc	r0
      000ADF E2               [24] 2963 	movx	a,@r0
      000AE0 9F               [12] 2964 	subb	a,r7
      000AE1 F2               [24] 2965 	movx	@r0,a
                                   2966 ;	radio/radio.c:1121: frequency  = scale_uint32(frequency, 625);
      000AE2 78r1D            [12] 2967 	mov	r0,#_scale_uint32_PARM_2
      000AE4 74 71            [12] 2968 	mov	a,#0x71
      000AE6 F2               [24] 2969 	movx	@r0,a
      000AE7 08               [12] 2970 	inc	r0
      000AE8 74 02            [12] 2971 	mov	a,#0x02
      000AEA F2               [24] 2972 	movx	@r0,a
      000AEB 08               [12] 2973 	inc	r0
      000AEC E4               [12] 2974 	clr	a
      000AED F2               [24] 2975 	movx	@r0,a
      000AEE 08               [12] 2976 	inc	r0
      000AEF F2               [24] 2977 	movx	@r0,a
      000AF0 78r25            [12] 2978 	mov	r0,#_set_frequency_registers_frequency_1_246
      000AF2 E2               [24] 2979 	movx	a,@r0
      000AF3 F5 82            [12] 2980 	mov	dpl,a
      000AF5 08               [12] 2981 	inc	r0
      000AF6 E2               [24] 2982 	movx	a,@r0
      000AF7 F5 83            [12] 2983 	mov	dph,a
      000AF9 08               [12] 2984 	inc	r0
      000AFA E2               [24] 2985 	movx	a,@r0
      000AFB F5 F0            [12] 2986 	mov	b,a
      000AFD 08               [12] 2987 	inc	r0
      000AFE E2               [24] 2988 	movx	a,@r0
      000AFF 12r08rC4         [24] 2989 	lcall	_scale_uint32
      000B02 78r25            [12] 2990 	mov	r0,#_set_frequency_registers_frequency_1_246
      000B04 C0 E0            [24] 2991 	push	acc
      000B06 E5 82            [12] 2992 	mov	a,dpl
      000B08 F2               [24] 2993 	movx	@r0,a
      000B09 08               [12] 2994 	inc	r0
      000B0A E5 83            [12] 2995 	mov	a,dph
      000B0C F2               [24] 2996 	movx	@r0,a
      000B0D 08               [12] 2997 	inc	r0
      000B0E E5 F0            [12] 2998 	mov	a,b
      000B10 F2               [24] 2999 	movx	@r0,a
      000B11 D0 E0            [24] 3000 	pop	acc
      000B13 08               [12] 3001 	inc	r0
      000B14 F2               [24] 3002 	movx	@r0,a
                                   3003 ;	radio/radio.c:1122: frequency <<= 2;
      000B15 78r25            [12] 3004 	mov	r0,#_set_frequency_registers_frequency_1_246
      000B17 E2               [24] 3005 	movx	a,@r0
      000B18 25 E0            [12] 3006 	add	a,acc
      000B1A F2               [24] 3007 	movx	@r0,a
      000B1B 08               [12] 3008 	inc	r0
      000B1C E2               [24] 3009 	movx	a,@r0
      000B1D 33               [12] 3010 	rlc	a
      000B1E F2               [24] 3011 	movx	@r0,a
      000B1F 08               [12] 3012 	inc	r0
      000B20 E2               [24] 3013 	movx	a,@r0
      000B21 33               [12] 3014 	rlc	a
      000B22 F2               [24] 3015 	movx	@r0,a
      000B23 08               [12] 3016 	inc	r0
      000B24 E2               [24] 3017 	movx	a,@r0
      000B25 33               [12] 3018 	rlc	a
      000B26 F2               [24] 3019 	movx	@r0,a
      000B27 18               [12] 3020 	dec	r0
      000B28 18               [12] 3021 	dec	r0
      000B29 18               [12] 3022 	dec	r0
      000B2A E2               [24] 3023 	movx	a,@r0
      000B2B 25 E0            [12] 3024 	add	a,acc
      000B2D F2               [24] 3025 	movx	@r0,a
      000B2E 08               [12] 3026 	inc	r0
      000B2F E2               [24] 3027 	movx	a,@r0
      000B30 33               [12] 3028 	rlc	a
      000B31 F2               [24] 3029 	movx	@r0,a
      000B32 08               [12] 3030 	inc	r0
      000B33 E2               [24] 3031 	movx	a,@r0
      000B34 33               [12] 3032 	rlc	a
      000B35 F2               [24] 3033 	movx	@r0,a
      000B36 08               [12] 3034 	inc	r0
      000B37 E2               [24] 3035 	movx	a,@r0
      000B38 33               [12] 3036 	rlc	a
      000B39 F2               [24] 3037 	movx	@r0,a
      000B3A                       3038 00103$:
                                   3039 ;	radio/radio.c:1125: band |= EZRADIOPRO_SBSEL;
      000B3A 90r01r05         [24] 3040 	mov	dptr,#_set_frequency_registers_band_1_247
      000B3D E0               [24] 3041 	movx	a,@dptr
      000B3E FF               [12] 3042 	mov	r7,a
      000B3F 74 40            [12] 3043 	mov	a,#0x40
      000B41 4F               [12] 3044 	orl	a,r7
      000B42 F0               [24] 3045 	movx	@dptr,a
                                   3046 ;	radio/radio.c:1126: carrier = (uint16_t)frequency;
      000B43 78r25            [12] 3047 	mov	r0,#_set_frequency_registers_frequency_1_246
      000B45 E2               [24] 3048 	movx	a,@r0
      000B46 FC               [12] 3049 	mov	r4,a
      000B47 08               [12] 3050 	inc	r0
      000B48 E2               [24] 3051 	movx	a,@r0
      000B49 FD               [12] 3052 	mov	r5,a
                                   3053 ;	radio/radio.c:1128: register_write(EZRADIOPRO_FREQUENCY_BAND_SELECT, band);
      000B4A C0 05            [24] 3054 	push	ar5
      000B4C C0 04            [24] 3055 	push	ar4
      000B4E E0               [24] 3056 	movx	a,@dptr
      000B4F C0 E0            [24] 3057 	push	acc
      000B51 75 82 75         [24] 3058 	mov	dpl,#0x75
      000B54 12r08r0E         [24] 3059 	lcall	_register_write
      000B57 15 81            [12] 3060 	dec	sp
      000B59 D0 04            [24] 3061 	pop	ar4
      000B5B D0 05            [24] 3062 	pop	ar5
                                   3063 ;	radio/radio.c:1129: register_write(EZRADIOPRO_NOMINAL_CARRIER_FREQUENCY_1, carrier >> 8);
      000B5D 8D 07            [24] 3064 	mov	ar7,r5
      000B5F C0 05            [24] 3065 	push	ar5
      000B61 C0 04            [24] 3066 	push	ar4
      000B63 C0 07            [24] 3067 	push	ar7
      000B65 75 82 76         [24] 3068 	mov	dpl,#0x76
      000B68 12r08r0E         [24] 3069 	lcall	_register_write
      000B6B 15 81            [12] 3070 	dec	sp
      000B6D D0 04            [24] 3071 	pop	ar4
      000B6F D0 05            [24] 3072 	pop	ar5
                                   3073 ;	radio/radio.c:1130: register_write(EZRADIOPRO_NOMINAL_CARRIER_FREQUENCY_0, carrier & 0xFF);
      000B71 C0 04            [24] 3074 	push	ar4
      000B73 75 82 77         [24] 3075 	mov	dpl,#0x77
      000B76 12r08r0E         [24] 3076 	lcall	_register_write
      000B79 15 81            [12] 3077 	dec	sp
      000B7B 22               [24] 3078 	ret
                                   3079 ;------------------------------------------------------------
                                   3080 ;Allocation info for local variables in function 'radio_temperature'
                                   3081 ;------------------------------------------------------------
                                   3082 ;temp_local                Allocated to registers r6 r7 
                                   3083 ;------------------------------------------------------------
                                   3084 ;	radio/radio.c:1139: radio_temperature(void)
                                   3085 ;	-----------------------------------------
                                   3086 ;	 function radio_temperature
                                   3087 ;	-----------------------------------------
      000B7C                       3088 _radio_temperature:
                                   3089 ;	radio/radio.c:1156: AD0BUSY = 1;		// Start ADC conversion
      000B7C D2 EC            [12] 3090 	setb	_AD0BUSY
                                   3091 ;	radio/radio.c:1157: while (AD0BUSY) ;  	// Wait for completion of conversion
      000B7E                       3092 00101$:
      000B7E 20 EC FD         [24] 3093 	jb	_AD0BUSY,00101$
                                   3094 ;	radio/radio.c:1159: temp_local = (ADC0H << 8) | ADC0L;
      000B81 AF BE            [24] 3095 	mov	r7,_ADC0H
      000B83 7E 00            [12] 3096 	mov	r6,#0x00
      000B85 AC BD            [24] 3097 	mov	r4,_ADC0L
      000B87 7D 00            [12] 3098 	mov	r5,#0x00
      000B89 EC               [12] 3099 	mov	a,r4
      000B8A 42 06            [12] 3100 	orl	ar6,a
      000B8C ED               [12] 3101 	mov	a,r5
      000B8D 42 07            [12] 3102 	orl	ar7,a
                                   3103 ;	radio/radio.c:1160: temp_local *= 1.64060;  // convert reading into mV ( (val/1024) * 1680 )  vref=1680mV
      000B8F 8E 82            [24] 3104 	mov	dpl,r6
      000B91 8F 83            [24] 3105 	mov	dph,r7
      000B93 12r00r00         [24] 3106 	lcall	___sint2fs
      000B96 AA 82            [24] 3107 	mov	r2,dpl
      000B98 AB 83            [24] 3108 	mov	r3,dph
      000B9A AC F0            [24] 3109 	mov	r4,b
      000B9C FD               [12] 3110 	mov	r5,a
      000B9D C0 02            [24] 3111 	push	ar2
      000B9F C0 03            [24] 3112 	push	ar3
      000BA1 C0 04            [24] 3113 	push	ar4
      000BA3 C0 05            [24] 3114 	push	ar5
      000BA5 90 FF 2E         [24] 3115 	mov	dptr,#0xFF2E
      000BA8 75 F0 D1         [24] 3116 	mov	b,#0xD1
      000BAB 74 3F            [12] 3117 	mov	a,#0x3F
      000BAD 12r00r00         [24] 3118 	lcall	___fsmul
      000BB0 AA 82            [24] 3119 	mov	r2,dpl
      000BB2 AB 83            [24] 3120 	mov	r3,dph
      000BB4 AC F0            [24] 3121 	mov	r4,b
      000BB6 FD               [12] 3122 	mov	r5,a
      000BB7 E5 81            [12] 3123 	mov	a,sp
      000BB9 24 FC            [12] 3124 	add	a,#0xfc
      000BBB F5 81            [12] 3125 	mov	sp,a
      000BBD 8A 82            [24] 3126 	mov	dpl,r2
      000BBF 8B 83            [24] 3127 	mov	dph,r3
      000BC1 8C F0            [24] 3128 	mov	b,r4
      000BC3 ED               [12] 3129 	mov	a,r5
      000BC4 12r00r00         [24] 3130 	lcall	___fs2sint
      000BC7 AE 82            [24] 3131 	mov	r6,dpl
      000BC9 AF 83            [24] 3132 	mov	r7,dph
                                   3133 ;	radio/radio.c:1161: temp_local = 25.0 + (temp_local - 1025) / 3.4; // convert mV reading into degC.
      000BCB EE               [12] 3134 	mov	a,r6
      000BCC 24 FF            [12] 3135 	add	a,#0xFF
      000BCE FC               [12] 3136 	mov	r4,a
      000BCF EF               [12] 3137 	mov	a,r7
      000BD0 34 FB            [12] 3138 	addc	a,#0xFB
      000BD2 FD               [12] 3139 	mov	r5,a
      000BD3 8C 82            [24] 3140 	mov	dpl,r4
      000BD5 8D 83            [24] 3141 	mov	dph,r5
      000BD7 12r00r00         [24] 3142 	lcall	___sint2fs
      000BDA AA 82            [24] 3143 	mov	r2,dpl
      000BDC AB 83            [24] 3144 	mov	r3,dph
      000BDE AC F0            [24] 3145 	mov	r4,b
      000BE0 FD               [12] 3146 	mov	r5,a
      000BE1 74 9A            [12] 3147 	mov	a,#0x9A
      000BE3 C0 E0            [24] 3148 	push	acc
      000BE5 14               [12] 3149 	dec	a
      000BE6 C0 E0            [24] 3150 	push	acc
      000BE8 74 59            [12] 3151 	mov	a,#0x59
      000BEA C0 E0            [24] 3152 	push	acc
      000BEC 74 40            [12] 3153 	mov	a,#0x40
      000BEE C0 E0            [24] 3154 	push	acc
      000BF0 8A 82            [24] 3155 	mov	dpl,r2
      000BF2 8B 83            [24] 3156 	mov	dph,r3
      000BF4 8C F0            [24] 3157 	mov	b,r4
      000BF6 ED               [12] 3158 	mov	a,r5
      000BF7 12r00r00         [24] 3159 	lcall	___fsdiv
      000BFA AA 82            [24] 3160 	mov	r2,dpl
      000BFC AB 83            [24] 3161 	mov	r3,dph
      000BFE AC F0            [24] 3162 	mov	r4,b
      000C00 FD               [12] 3163 	mov	r5,a
      000C01 E5 81            [12] 3164 	mov	a,sp
      000C03 24 FC            [12] 3165 	add	a,#0xfc
      000C05 F5 81            [12] 3166 	mov	sp,a
      000C07 E4               [12] 3167 	clr	a
      000C08 C0 E0            [24] 3168 	push	acc
      000C0A C0 E0            [24] 3169 	push	acc
      000C0C 74 C8            [12] 3170 	mov	a,#0xC8
      000C0E C0 E0            [24] 3171 	push	acc
      000C10 74 41            [12] 3172 	mov	a,#0x41
      000C12 C0 E0            [24] 3173 	push	acc
      000C14 8A 82            [24] 3174 	mov	dpl,r2
      000C16 8B 83            [24] 3175 	mov	dph,r3
      000C18 8C F0            [24] 3176 	mov	b,r4
      000C1A ED               [12] 3177 	mov	a,r5
      000C1B 12r00r00         [24] 3178 	lcall	___fsadd
      000C1E AA 82            [24] 3179 	mov	r2,dpl
      000C20 AB 83            [24] 3180 	mov	r3,dph
      000C22 AC F0            [24] 3181 	mov	r4,b
      000C24 FD               [12] 3182 	mov	r5,a
      000C25 E5 81            [12] 3183 	mov	a,sp
      000C27 24 FC            [12] 3184 	add	a,#0xfc
      000C29 F5 81            [12] 3185 	mov	sp,a
      000C2B 8A 82            [24] 3186 	mov	dpl,r2
      000C2D 8B 83            [24] 3187 	mov	dph,r3
      000C2F 8C F0            [24] 3188 	mov	b,r4
      000C31 ED               [12] 3189 	mov	a,r5
                                   3190 ;	radio/radio.c:1163: return temp_local;
      000C32 02r00r00         [24] 3191 	ljmp	___fs2sint
                                   3192 ;------------------------------------------------------------
                                   3193 ;Allocation info for local variables in function 'radio_set_diversity'
                                   3194 ;------------------------------------------------------------
                                   3195 ;state                     Allocated with name '_radio_set_diversity_state_1_252'
                                   3196 ;------------------------------------------------------------
                                   3197 ;	radio/radio.c:1169: radio_set_diversity(enum DIVERSITY_Enum state)
                                   3198 ;	-----------------------------------------
                                   3199 ;	 function radio_set_diversity
                                   3200 ;	-----------------------------------------
      000C35                       3201 _radio_set_diversity:
      000C35 E5 82            [12] 3202 	mov	a,dpl
      000C37 90r01r06         [24] 3203 	mov	dptr,#_radio_set_diversity_state_1_252
      000C3A F0               [24] 3204 	movx	@dptr,a
                                   3205 ;	radio/radio.c:1171: switch (state) {
      000C3B E0               [24] 3206 	movx	a,@dptr
      000C3C FF               [12] 3207 	mov  r7,a
      000C3D 24 FC            [12] 3208 	add	a,#0xff - 0x03
      000C3F 40 68            [24] 3209 	jc	00105$
      000C41 EF               [12] 3210 	mov	a,r7
      000C42 2F               [12] 3211 	add	a,r7
      000C43 2F               [12] 3212 	add	a,r7
      000C44 90r0Cr48         [24] 3213 	mov	dptr,#00113$
      000C47 73               [24] 3214 	jmp	@a+dptr
      000C48                       3215 00113$:
      000C48 02r0Cr54         [24] 3216 	ljmp	00101$
      000C4B 02r0CrA9         [24] 3217 	ljmp	00103$
      000C4E 02r0CrA9         [24] 3218 	ljmp	00104$
      000C51 02r0Cr79         [24] 3219 	ljmp	00102$
                                   3220 ;	radio/radio.c:1172: case DIVERSITY_ENABLED:
      000C54                       3221 00101$:
                                   3222 ;	radio/radio.c:1173: register_write(EZRADIOPRO_GPIO2_CONFIGURATION, 0x18);
      000C54 74 18            [12] 3223 	mov	a,#0x18
      000C56 C0 E0            [24] 3224 	push	acc
      000C58 75 82 0D         [24] 3225 	mov	dpl,#0x0D
      000C5B 12r08r0E         [24] 3226 	lcall	_register_write
      000C5E 15 81            [12] 3227 	dec	sp
                                   3228 ;	radio/radio.c:1175: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, (register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2) & ~EZRADIOPRO_ANTDIV_MASK) | 0x80);
      000C60 75 82 08         [24] 3229 	mov	dpl,#0x08
      000C63 12r08r44         [24] 3230 	lcall	_register_read
      000C66 AF 82            [24] 3231 	mov	r7,dpl
      000C68 74 1F            [12] 3232 	mov	a,#0x1F
      000C6A 5F               [12] 3233 	anl	a,r7
      000C6B 44 80            [12] 3234 	orl	a,#0x80
      000C6D FF               [12] 3235 	mov	r7,a
      000C6E C0 07            [24] 3236 	push	ar7
      000C70 75 82 08         [24] 3237 	mov	dpl,#0x08
      000C73 12r08r0E         [24] 3238 	lcall	_register_write
      000C76 15 81            [12] 3239 	dec	sp
                                   3240 ;	radio/radio.c:1176: break;
                                   3241 ;	radio/radio.c:1178: case DIVERSITY_ANT2:
      000C78 22               [24] 3242 	ret
      000C79                       3243 00102$:
                                   3244 ;	radio/radio.c:1180: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, (register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2) & ~EZRADIOPRO_ANTDIV_MASK) | 0x20);
      000C79 75 82 08         [24] 3245 	mov	dpl,#0x08
      000C7C 12r08r44         [24] 3246 	lcall	_register_read
      000C7F AF 82            [24] 3247 	mov	r7,dpl
      000C81 74 1F            [12] 3248 	mov	a,#0x1F
      000C83 5F               [12] 3249 	anl	a,r7
      000C84 44 20            [12] 3250 	orl	a,#0x20
      000C86 FF               [12] 3251 	mov	r7,a
      000C87 C0 07            [24] 3252 	push	ar7
      000C89 75 82 08         [24] 3253 	mov	dpl,#0x08
      000C8C 12r08r0E         [24] 3254 	lcall	_register_write
      000C8F 15 81            [12] 3255 	dec	sp
                                   3256 ;	radio/radio.c:1182: register_write(EZRADIOPRO_GPIO2_CONFIGURATION, 0x0A);	// GPIO2 output set high fixed
      000C91 74 0A            [12] 3257 	mov	a,#0x0A
      000C93 C0 E0            [24] 3258 	push	acc
      000C95 75 82 0D         [24] 3259 	mov	dpl,#0x0D
      000C98 12r08r0E         [24] 3260 	lcall	_register_write
      000C9B 15 81            [12] 3261 	dec	sp
                                   3262 ;	radio/radio.c:1183: register_write(EZRADIOPRO_IO_PORT_CONFIGURATION, 0x00);	// GPIO2 output set low (fixed on ant 2)
      000C9D E4               [12] 3263 	clr	a
      000C9E C0 E0            [24] 3264 	push	acc
      000CA0 75 82 0E         [24] 3265 	mov	dpl,#0x0E
      000CA3 12r08r0E         [24] 3266 	lcall	_register_write
      000CA6 15 81            [12] 3267 	dec	sp
                                   3268 ;	radio/radio.c:1184: break;
                                   3269 ;	radio/radio.c:1186: case DIVERSITY_DISABLED:
      000CA8 22               [24] 3270 	ret
      000CA9                       3271 00103$:
                                   3272 ;	radio/radio.c:1187: case DIVERSITY_ANT1:
      000CA9                       3273 00104$:
                                   3274 ;	radio/radio.c:1188: default:
      000CA9                       3275 00105$:
                                   3276 ;	radio/radio.c:1190: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2, (register_read(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_2) & ~EZRADIOPRO_ANTDIV_MASK));
      000CA9 75 82 08         [24] 3277 	mov	dpl,#0x08
      000CAC 12r08r44         [24] 3278 	lcall	_register_read
      000CAF AF 82            [24] 3279 	mov	r7,dpl
      000CB1 53 07 1F         [24] 3280 	anl	ar7,#0x1F
      000CB4 C0 07            [24] 3281 	push	ar7
      000CB6 75 82 08         [24] 3282 	mov	dpl,#0x08
      000CB9 12r08r0E         [24] 3283 	lcall	_register_write
      000CBC 15 81            [12] 3284 	dec	sp
                                   3285 ;	radio/radio.c:1192: register_write(EZRADIOPRO_GPIO2_CONFIGURATION, 0x0A);	// GPIO2 output set high fixed
      000CBE 74 0A            [12] 3286 	mov	a,#0x0A
      000CC0 C0 E0            [24] 3287 	push	acc
      000CC2 75 82 0D         [24] 3288 	mov	dpl,#0x0D
      000CC5 12r08r0E         [24] 3289 	lcall	_register_write
      000CC8 15 81            [12] 3290 	dec	sp
                                   3291 ;	radio/radio.c:1193: register_write(EZRADIOPRO_IO_PORT_CONFIGURATION, 0x04);	// GPIO2 output set high (fixed on ant 1)
      000CCA 74 04            [12] 3292 	mov	a,#0x04
      000CCC C0 E0            [24] 3293 	push	acc
      000CCE 75 82 0E         [24] 3294 	mov	dpl,#0x0E
      000CD1 12r08r0E         [24] 3295 	lcall	_register_write
      000CD4 15 81            [12] 3296 	dec	sp
                                   3297 ;	radio/radio.c:1195: }
      000CD6 22               [24] 3298 	ret
                                   3299 ;------------------------------------------------------------
                                   3300 ;Allocation info for local variables in function 'Receiver_ISR'
                                   3301 ;------------------------------------------------------------
                                   3302 ;status                    Allocated to registers r6 
                                   3303 ;status2                   Allocated to registers r7 
                                   3304 ;len                       Allocated to registers r7 
                                   3305 ;------------------------------------------------------------
                                   3306 ;	radio/radio.c:1206: INTERRUPT(Receiver_ISR, INTERRUPT_INT0)
                                   3307 ;	-----------------------------------------
                                   3308 ;	 function Receiver_ISR
                                   3309 ;	-----------------------------------------
      000CD7                       3310 _Receiver_ISR:
      000CD7 C0*00            [24] 3311 	push	bits
      000CD9 C0 E0            [24] 3312 	push	acc
      000CDB C0 F0            [24] 3313 	push	b
      000CDD C0 82            [24] 3314 	push	dpl
      000CDF C0 83            [24] 3315 	push	dph
      000CE1 C0 07            [24] 3316 	push	(0+7)
      000CE3 C0 06            [24] 3317 	push	(0+6)
      000CE5 C0 05            [24] 3318 	push	(0+5)
      000CE7 C0 04            [24] 3319 	push	(0+4)
      000CE9 C0 03            [24] 3320 	push	(0+3)
      000CEB C0 02            [24] 3321 	push	(0+2)
      000CED C0 01            [24] 3322 	push	(0+1)
      000CEF C0 00            [24] 3323 	push	(0+0)
      000CF1 C0 D0            [24] 3324 	push	psw
      000CF3 75 D0 00         [24] 3325 	mov	psw,#0x00
                                   3326 ;	radio/radio.c:1214: status2 = register_read(EZRADIOPRO_INTERRUPT_STATUS_2);
      000CF6 75 82 04         [24] 3327 	mov	dpl,#0x04
      000CF9 12r08r44         [24] 3328 	lcall	_register_read
      000CFC AF 82            [24] 3329 	mov	r7,dpl
                                   3330 ;	radio/radio.c:1215: status  = register_read(EZRADIOPRO_INTERRUPT_STATUS_1);
      000CFE 75 82 03         [24] 3331 	mov	dpl,#0x03
      000D01 C0 07            [24] 3332 	push	ar7
      000D03 12r08r44         [24] 3333 	lcall	_register_read
      000D06 AE 82            [24] 3334 	mov	r6,dpl
      000D08 D0 07            [24] 3335 	pop	ar7
                                   3336 ;	radio/radio.c:1217: if (status & EZRADIOPRO_IRXFFAFULL) {
      000D0A EE               [12] 3337 	mov	a,r6
      000D0B 30 E4 49         [24] 3338 	jnb	acc.4,00104$
                                   3339 ;	radio/radio.c:1218: if (RX_FIFO_THRESHOLD_HIGH + (uint16_t)partial_packet_length > MAX_PACKET_LENGTH) {
      000D0E 78r01            [12] 3340 	mov	r0,#_partial_packet_length
      000D10 E2               [24] 3341 	movx	a,@r0
      000D11 FC               [12] 3342 	mov	r4,a
      000D12 7D 00            [12] 3343 	mov	r5,#0x00
      000D14 74 32            [12] 3344 	mov	a,#0x32
      000D16 2C               [12] 3345 	add	a,r4
      000D17 FC               [12] 3346 	mov	r4,a
      000D18 E4               [12] 3347 	clr	a
      000D19 3D               [12] 3348 	addc	a,r5
      000D1A FD               [12] 3349 	mov	r5,a
      000D1B C3               [12] 3350 	clr	c
      000D1C 74 FC            [12] 3351 	mov	a,#0xFC
      000D1E 9C               [12] 3352 	subb	a,r4
      000D1F E4               [12] 3353 	clr	a
      000D20 9D               [12] 3354 	subb	a,r5
      000D21 50 03            [24] 3355 	jnc	00150$
      000D23 02r0DrE2         [24] 3356 	ljmp	00117$
      000D26                       3357 00150$:
                                   3358 ;	radio/radio.c:1222: read_receive_fifo(RX_FIFO_THRESHOLD_HIGH, &radio_buffer[partial_packet_length]);
      000D26 78r01            [12] 3359 	mov	r0,#_partial_packet_length
      000D28 E2               [24] 3360 	movx	a,@r0
      000D29 24r00            [12] 3361 	add	a,#_radio_buffer
      000D2B FC               [12] 3362 	mov	r4,a
      000D2C E4               [12] 3363 	clr	a
      000D2D 34s00            [12] 3364 	addc	a,#(_radio_buffer >> 8)
      000D2F FD               [12] 3365 	mov	r5,a
      000D30 C0 07            [24] 3366 	push	ar7
      000D32 C0 06            [24] 3367 	push	ar6
      000D34 C0 04            [24] 3368 	push	ar4
      000D36 C0 05            [24] 3369 	push	ar5
      000D38 75 82 32         [24] 3370 	mov	dpl,#0x32
      000D3B 12r08r78         [24] 3371 	lcall	_read_receive_fifo
      000D3E 15 81            [12] 3372 	dec	sp
      000D40 15 81            [12] 3373 	dec	sp
                                   3374 ;	radio/radio.c:1223: partial_packet_length += RX_FIFO_THRESHOLD_HIGH;
      000D42 78r01            [12] 3375 	mov	r0,#_partial_packet_length
      000D44 E2               [24] 3376 	movx	a,@r0
      000D45 24 32            [12] 3377 	add	a,#0x32
      000D47 F2               [24] 3378 	movx	@r0,a
                                   3379 ;	radio/radio.c:1224: last_rssi = register_read(EZRADIOPRO_RECEIVED_SIGNAL_STRENGTH_INDICATOR);
      000D48 75 82 26         [24] 3380 	mov	dpl,#0x26
      000D4B 12r08r44         [24] 3381 	lcall	_register_read
      000D4E E5 82            [12] 3382 	mov	a,dpl
      000D50 D0 06            [24] 3383 	pop	ar6
      000D52 D0 07            [24] 3384 	pop	ar7
      000D54 78r02            [12] 3385 	mov	r0,#_last_rssi
      000D56 F2               [24] 3386 	movx	@r0,a
      000D57                       3387 00104$:
                                   3388 ;	radio/radio.c:1227: if (status2 & EZRADIOPRO_IPREAVAL) {
      000D57 EF               [12] 3389 	mov	a,r7
      000D58 30 E6 11         [24] 3390 	jnb	acc.6,00106$
                                   3391 ;	radio/radio.c:1229: preamble_detected = true;
      000D5B D2*01            [12] 3392 	setb	_preamble_detected
                                   3393 ;	radio/radio.c:1232: last_rssi = register_read(EZRADIOPRO_RECEIVED_SIGNAL_STRENGTH_INDICATOR);
      000D5D 75 82 26         [24] 3394 	mov	dpl,#0x26
      000D60 C0 06            [24] 3395 	push	ar6
      000D62 12r08r44         [24] 3396 	lcall	_register_read
      000D65 E5 82            [12] 3397 	mov	a,dpl
      000D67 D0 06            [24] 3398 	pop	ar6
      000D69 78r02            [12] 3399 	mov	r0,#_last_rssi
      000D6B F2               [24] 3400 	movx	@r0,a
      000D6C                       3401 00106$:
                                   3402 ;	radio/radio.c:1235: if (feature_golay == false && (status & EZRADIOPRO_ICRCERROR)) {
      000D6C 20*00 04         [24] 3403 	jb	_feature_golay,00108$
      000D6F EE               [12] 3404 	mov	a,r6
      000D70 20 E0 6F         [24] 3405 	jb	acc.0,00117$
                                   3406 ;	radio/radio.c:1236: goto rxfail;
      000D73                       3407 00108$:
                                   3408 ;	radio/radio.c:1239: if (status & EZRADIOPRO_IPKVALID) {
      000D73 EE               [12] 3409 	mov	a,r6
      000D74 30 E1 69         [24] 3410 	jnb	acc.1,00116$
                                   3411 ;	radio/radio.c:1240: __data uint8_t len = register_read(EZRADIOPRO_RECEIVED_PACKET_LENGTH);
      000D77 75 82 4B         [24] 3412 	mov	dpl,#0x4B
      000D7A 12r08r44         [24] 3413 	lcall	_register_read
                                   3414 ;	radio/radio.c:1241: if (len > MAX_PACKET_LENGTH || partial_packet_length > len) {
      000D7D E5 82            [12] 3415 	mov	a,dpl
      000D7F FF               [12] 3416 	mov	r7,a
      000D80 24 03            [12] 3417 	add	a,#0xff - 0xFC
      000D82 40 5E            [24] 3418 	jc	00117$
      000D84 78r01            [12] 3419 	mov	r0,#_partial_packet_length
      000D86 C3               [12] 3420 	clr	c
      000D87 E2               [24] 3421 	movx	a,@r0
      000D88 F5 F0            [12] 3422 	mov	b,a
      000D8A EF               [12] 3423 	mov	a,r7
      000D8B 95 F0            [12] 3424 	subb	a,b
      000D8D 40 53            [24] 3425 	jc	00117$
                                   3426 ;	radio/radio.c:1245: if (partial_packet_length < len) {
      000D8F 78r01            [12] 3427 	mov	r0,#_partial_packet_length
      000D91 C3               [12] 3428 	clr	c
      000D92 E2               [24] 3429 	movx	a,@r0
      000D93 9F               [12] 3430 	subb	a,r7
      000D94 50 22            [24] 3431 	jnc	00114$
                                   3432 ;	radio/radio.c:1246: read_receive_fifo(len-partial_packet_length, &radio_buffer[partial_packet_length]);
      000D96 78r01            [12] 3433 	mov	r0,#_partial_packet_length
      000D98 E2               [24] 3434 	movx	a,@r0
      000D99 24r00            [12] 3435 	add	a,#_radio_buffer
      000D9B FD               [12] 3436 	mov	r5,a
      000D9C E4               [12] 3437 	clr	a
      000D9D 34s00            [12] 3438 	addc	a,#(_radio_buffer >> 8)
      000D9F FE               [12] 3439 	mov	r6,a
      000DA0 78r01            [12] 3440 	mov	r0,#_partial_packet_length
      000DA2 D3               [12] 3441 	setb	c
      000DA3 E2               [24] 3442 	movx	a,@r0
      000DA4 9F               [12] 3443 	subb	a,r7
      000DA5 F4               [12] 3444 	cpl	a
      000DA6 FC               [12] 3445 	mov	r4,a
      000DA7 C0 07            [24] 3446 	push	ar7
      000DA9 C0 05            [24] 3447 	push	ar5
      000DAB C0 06            [24] 3448 	push	ar6
      000DAD 8C 82            [24] 3449 	mov	dpl,r4
      000DAF 12r08r78         [24] 3450 	lcall	_read_receive_fifo
      000DB2 15 81            [12] 3451 	dec	sp
      000DB4 15 81            [12] 3452 	dec	sp
      000DB6 D0 07            [24] 3453 	pop	ar7
      000DB8                       3454 00114$:
                                   3455 ;	radio/radio.c:1248: receive_packet_length = len;
      000DB8 78r00            [12] 3456 	mov	r0,#_receive_packet_length
      000DBA EF               [12] 3457 	mov	a,r7
      000DBB F2               [24] 3458 	movx	@r0,a
                                   3459 ;	radio/radio.c:1251: packet_received = true;
      000DBC D2*00            [12] 3460 	setb	_packet_received
                                   3461 ;	radio/radio.c:1254: register_write(EZRADIOPRO_INTERRUPT_ENABLE_1, 0);
      000DBE E4               [12] 3462 	clr	a
      000DBF C0 E0            [24] 3463 	push	acc
      000DC1 75 82 05         [24] 3464 	mov	dpl,#0x05
      000DC4 12r08r0E         [24] 3465 	lcall	_register_write
      000DC7 15 81            [12] 3466 	dec	sp
                                   3467 ;	radio/radio.c:1255: register_write(EZRADIOPRO_INTERRUPT_ENABLE_2, 0);
      000DC9 E4               [12] 3468 	clr	a
      000DCA C0 E0            [24] 3469 	push	acc
      000DCC 75 82 06         [24] 3470 	mov	dpl,#0x06
      000DCF 12r08r0E         [24] 3471 	lcall	_register_write
      000DD2 15 81            [12] 3472 	dec	sp
                                   3473 ;	radio/radio.c:1258: register_write(EZRADIOPRO_OPERATING_AND_FUNCTION_CONTROL_1, EZRADIOPRO_PLLON);
      000DD4 74 02            [12] 3474 	mov	a,#0x02
      000DD6 C0 E0            [24] 3475 	push	acc
      000DD8 75 82 07         [24] 3476 	mov	dpl,#0x07
      000DDB 12r08r0E         [24] 3477 	lcall	_register_write
      000DDE 15 81            [12] 3478 	dec	sp
      000DE0                       3479 00116$:
                                   3480 ;	radio/radio.c:1263: return;
                                   3481 ;	radio/radio.c:1265: rxfail:
      000DE0 80 1E            [24] 3482 	sjmp	00120$
      000DE2                       3483 00117$:
                                   3484 ;	radio/radio.c:1266: if (errors.rx_errors != 0xFFFF) {
      000DE2 78r00            [12] 3485 	mov	r0,#_errors
      000DE4 E2               [24] 3486 	movx	a,@r0
      000DE5 FE               [12] 3487 	mov	r6,a
      000DE6 08               [12] 3488 	inc	r0
      000DE7 E2               [24] 3489 	movx	a,@r0
      000DE8 FF               [12] 3490 	mov	r7,a
      000DE9 BE FF 05         [24] 3491 	cjne	r6,#0xFF,00158$
      000DEC BF FF 02         [24] 3492 	cjne	r7,#0xFF,00158$
      000DEF 80 0C            [24] 3493 	sjmp	00119$
      000DF1                       3494 00158$:
                                   3495 ;	radio/radio.c:1267: errors.rx_errors++;
      000DF1 0E               [12] 3496 	inc	r6
      000DF2 BE 00 01         [24] 3497 	cjne	r6,#0x00,00159$
      000DF5 0F               [12] 3498 	inc	r7
      000DF6                       3499 00159$:
      000DF6 78r00            [12] 3500 	mov	r0,#_errors
      000DF8 EE               [12] 3501 	mov	a,r6
      000DF9 F2               [24] 3502 	movx	@r0,a
      000DFA 08               [12] 3503 	inc	r0
      000DFB EF               [12] 3504 	mov	a,r7
      000DFC F2               [24] 3505 	movx	@r0,a
      000DFD                       3506 00119$:
                                   3507 ;	radio/radio.c:1269: radio_receiver_on();
      000DFD 12r03r75         [24] 3508 	lcall	_radio_receiver_on
      000E00                       3509 00120$:
      000E00 D0 D0            [24] 3510 	pop	psw
      000E02 D0 00            [24] 3511 	pop	(0+0)
      000E04 D0 01            [24] 3512 	pop	(0+1)
      000E06 D0 02            [24] 3513 	pop	(0+2)
      000E08 D0 03            [24] 3514 	pop	(0+3)
      000E0A D0 04            [24] 3515 	pop	(0+4)
      000E0C D0 05            [24] 3516 	pop	(0+5)
      000E0E D0 06            [24] 3517 	pop	(0+6)
      000E10 D0 07            [24] 3518 	pop	(0+7)
      000E12 D0 83            [24] 3519 	pop	dph
      000E14 D0 82            [24] 3520 	pop	dpl
      000E16 D0 F0            [24] 3521 	pop	b
      000E18 D0 E0            [24] 3522 	pop	acc
      000E1A D0*00            [24] 3523 	pop	bits
      000E1C 32               [24] 3524 	reti
                                   3525 	.area CSEG    (CODE)
                                   3526 	.area CONST   (CODE)
      000000                       3527 ___str_0:
      000000 6F 76 65 72 73 69 7A  3528 	.ascii "oversized packet"
             65 64 20 70 61 63 6B
             65 74
      000010 00                    3529 	.db 0x00
      000011                       3530 _reg_index:
      000011 1C                    3531 	.db #0x1C	; 28
      000012 1F                    3532 	.db #0x1F	; 31
      000013 20                    3533 	.db #0x20	; 32
      000014 21                    3534 	.db #0x21	; 33
      000015 22                    3535 	.db #0x22	; 34
      000016 23                    3536 	.db #0x23	; 35
      000017 24                    3537 	.db #0x24	; 36
      000018 25                    3538 	.db #0x25	; 37
      000019 2A                    3539 	.db #0x2A	; 42
      00001A 6E                    3540 	.db #0x6E	; 110	'n'
      00001B 6F                    3541 	.db #0x6F	; 111	'o'
      00001C 72                    3542 	.db #0x72	; 114	'r'
      00001D                       3543 _air_data_rates:
      00001D 02                    3544 	.db #0x02	; 2
      00001E 04                    3545 	.db #0x04	; 4
      00001F 08                    3546 	.db #0x08	; 8
      000020 10                    3547 	.db #0x10	; 16
      000021 13                    3548 	.db #0x13	; 19
      000022 18                    3549 	.db #0x18	; 24
      000023 20                    3550 	.db #0x20	; 32
      000024 30                    3551 	.db #0x30	; 48	'0'
      000025 40                    3552 	.db #0x40	; 64
      000026 60                    3553 	.db #0x60	; 96
      000027 80                    3554 	.db #0x80	; 128
      000028 C0                    3555 	.db #0xC0	; 192
      000029 FA                    3556 	.db #0xFA	; 250
      00002A                       3557 _reg_table_433:
      00002A 27                    3558 	.db #0x27	; 39
      00002B 27                    3559 	.db #0x27	; 39
      00002C 27                    3560 	.db #0x27	; 39
      00002D 2E                    3561 	.db #0x2E	; 46
      00002E 16                    3562 	.db #0x16	; 22
      00002F 01                    3563 	.db #0x01	; 1
      000030 05                    3564 	.db #0x05	; 5
      000031 0B                    3565 	.db #0x0B	; 11
      000032 9A                    3566 	.db #0x9A	; 154
      000033 88                    3567 	.db #0x88	; 136
      000034 8A                    3568 	.db #0x8A	; 138
      000035 8C                    3569 	.db #0x8C	; 140
      000036 8D                    3570 	.db #0x8D	; 141
      000037 03                    3571 	.db #0x03	; 3
      000038 03                    3572 	.db #0x03	; 3
      000039 03                    3573 	.db #0x03	; 3
      00003A 03                    3574 	.db #0x03	; 3
      00003B 03                    3575 	.db #0x03	; 3
      00003C 03                    3576 	.db #0x03	; 3
      00003D 03                    3577 	.db #0x03	; 3
      00003E 03                    3578 	.db #0x03	; 3
      00003F 03                    3579 	.db #0x03	; 3
      000040 03                    3580 	.db #0x03	; 3
      000041 03                    3581 	.db #0x03	; 3
      000042 03                    3582 	.db #0x03	; 3
      000043 03                    3583 	.db #0x03	; 3
      000044 F4                    3584 	.db #0xF4	; 244
      000045 FA                    3585 	.db #0xFA	; 250
      000046 7D                    3586 	.db #0x7D	; 125
      000047 3F                    3587 	.db #0x3F	; 63
      000048 69                    3588 	.db #0x69	; 105	'i'
      000049 A7                    3589 	.db #0xA7	; 167
      00004A 7D                    3590 	.db #0x7D	; 125
      00004B 53                    3591 	.db #0x53	; 83	'S'
      00004C 5E                    3592 	.db #0x5E	; 94
      00004D 7D                    3593 	.db #0x7D	; 125
      00004E 5E                    3594 	.db #0x5E	; 94
      00004F 3F                    3595 	.db #0x3F	; 63
      000050 30                    3596 	.db #0x30	; 48	'0'
      000051 20                    3597 	.db #0x20	; 32
      000052 00                    3598 	.db #0x00	; 0
      000053 01                    3599 	.db #0x01	; 1
      000054 02                    3600 	.db #0x02	; 2
      000055 01                    3601 	.db #0x01	; 1
      000056 00                    3602 	.db #0x00	; 0
      000057 01                    3603 	.db #0x01	; 1
      000058 01                    3604 	.db #0x01	; 1
      000059 01                    3605 	.db #0x01	; 1
      00005A 01                    3606 	.db #0x01	; 1
      00005B 01                    3607 	.db #0x01	; 1
      00005C 02                    3608 	.db #0x02	; 2
      00005D 02                    3609 	.db #0x02	; 2
      00005E 41                    3610 	.db #0x41	; 65	'A'
      00005F 83                    3611 	.db #0x83	; 131
      000060 06                    3612 	.db #0x06	; 6
      000061 0C                    3613 	.db #0x0C	; 12
      000062 37                    3614 	.db #0x37	; 55	'7'
      000063 C4                    3615 	.db #0xC4	; 196
      000064 06                    3616 	.db #0x06	; 6
      000065 89                    3617 	.db #0x89	; 137
      000066 5D                    3618 	.db #0x5D	; 93
      000067 06                    3619 	.db #0x06	; 6
      000068 5D                    3620 	.db #0x5D	; 93
      000069 0C                    3621 	.db #0x0C	; 12
      00006A AA                    3622 	.db #0xAA	; 170
      00006B 89                    3623 	.db #0x89	; 137
      00006C 12                    3624 	.db #0x12	; 18
      00006D 25                    3625 	.db #0x25	; 37
      00006E 4A                    3626 	.db #0x4A	; 74	'J'
      00006F 4C                    3627 	.db #0x4C	; 76	'L'
      000070 9C                    3628 	.db #0x9C	; 156
      000071 25                    3629 	.db #0x25	; 37
      000072 37                    3630 	.db #0x37	; 55	'7'
      000073 86                    3631 	.db #0x86	; 134
      000074 25                    3632 	.db #0x25	; 37
      000075 86                    3633 	.db #0x86	; 134
      000076 4A                    3634 	.db #0x4A	; 74	'J'
      000077 AB                    3635 	.db #0xAB	; 171
      000078 00                    3636 	.db #0x00	; 0
      000079 01                    3637 	.db #0x01	; 1
      00007A 02                    3638 	.db #0x02	; 2
      00007B 04                    3639 	.db #0x04	; 4
      00007C 02                    3640 	.db #0x02	; 2
      00007D 01                    3641 	.db #0x01	; 1
      00007E 02                    3642 	.db #0x02	; 2
      00007F 03                    3643 	.db #0x03	; 3
      000080 02                    3644 	.db #0x02	; 2
      000081 02                    3645 	.db #0x02	; 2
      000082 02                    3646 	.db #0x02	; 2
      000083 04                    3647 	.db #0x04	; 4
      000084 07                    3648 	.db #0x07	; 7
      000085 85                    3649 	.db #0x85	; 133
      000086 08                    3650 	.db #0x08	; 8
      000087 0E                    3651 	.db #0x0E	; 14
      000088 12                    3652 	.db #0x12	; 18
      000089 72                    3653 	.db #0x72	; 114	'r'
      00008A 8A                    3654 	.db #0x8A	; 138
      00008B 0E                    3655 	.db #0x0E	; 14
      00008C 18                    3656 	.db #0x18	; 24
      00008D BB                    3657 	.db #0xBB	; 187
      00008E 0E                    3658 	.db #0x0E	; 14
      00008F BB                    3659 	.db #0xBB	; 187
      000090 EA                    3660 	.db #0xEA	; 234
      000091 FF                    3661 	.db #0xFF	; 255
      000092 1D                    3662 	.db #0x1D	; 29
      000093 1D                    3663 	.db #0x1D	; 29
      000094 1D                    3664 	.db #0x1D	; 29
      000095 1E                    3665 	.db #0x1E	; 30
      000096 1E                    3666 	.db #0x1E	; 30
      000097 1E                    3667 	.db #0x1E	; 30
      000098 20                    3668 	.db #0x20	; 32
      000099 30                    3669 	.db #0x30	; 48	'0'
      00009A 41                    3670 	.db #0x41	; 65	'A'
      00009B 50                    3671 	.db #0x50	; 80	'P'
      00009C 50                    3672 	.db #0x50	; 80	'P'
      00009D 50                    3673 	.db #0x50	; 80	'P'
      00009E 50                    3674 	.db #0x50	; 80	'P'
      00009F 10                    3675 	.db #0x10	; 16
      0000A0 20                    3676 	.db #0x20	; 32
      0000A1 41                    3677 	.db #0x41	; 65	'A'
      0000A2 83                    3678 	.db #0x83	; 131
      0000A3 9B                    3679 	.db #0x9B	; 155
      0000A4 C4                    3680 	.db #0xC4	; 196
      0000A5 08                    3681 	.db #0x08	; 8
      0000A6 0C                    3682 	.db #0x0C	; 12
      0000A7 10                    3683 	.db #0x10	; 16
      0000A8 18                    3684 	.db #0x18	; 24
      0000A9 20                    3685 	.db #0x20	; 32
      0000AA 31                    3686 	.db #0x31	; 49	'1'
      0000AB 40                    3687 	.db #0x40	; 64
      0000AC 62                    3688 	.db #0x62	; 98	'b'
      0000AD C5                    3689 	.db #0xC5	; 197
      0000AE 89                    3690 	.db #0x89	; 137
      0000AF 12                    3691 	.db #0x12	; 18
      0000B0 A6                    3692 	.db #0xA6	; 166
      0000B1 9C                    3693 	.db #0x9C	; 156
      0000B2 31                    3694 	.db #0x31	; 49	'1'
      0000B3 4A                    3695 	.db #0x4A	; 74	'J'
      0000B4 62                    3696 	.db #0x62	; 98	'b'
      0000B5 93                    3697 	.db #0x93	; 147
      0000B6 C5                    3698 	.db #0xC5	; 197
      0000B7 27                    3699 	.db #0x27	; 39
      0000B8 00                    3700 	.db #0x00	; 0
      0000B9 03                    3701 	.db #0x03	; 3
      0000BA 06                    3702 	.db #0x06	; 6
      0000BB 0D                    3703 	.db #0x0D	; 13
      0000BC 1A                    3704 	.db #0x1A	; 26
      0000BD 1E                    3705 	.db #0x1E	; 30
      0000BE 26                    3706 	.db #0x26	; 38
      0000BF 33                    3707 	.db #0x33	; 51	'3'
      0000C0 4D                    3708 	.db #0x4D	; 77	'M'
      0000C1 66                    3709 	.db #0x66	; 102	'f'
      0000C2 9A                    3710 	.db #0x9A	; 154
      0000C3 CD                    3711 	.db #0xCD	; 205
      0000C4 FE                    3712 	.db #0xFE	; 254
      0000C5 FE                    3713 	.db #0xFE	; 254
      0000C6                       3714 _reg_table_470:
      0000C6 2B                    3715 	.db #0x2B	; 43
      0000C7 2B                    3716 	.db #0x2B	; 43
      0000C8 2B                    3717 	.db #0x2B	; 43
      0000C9 2E                    3718 	.db #0x2E	; 46
      0000CA 16                    3719 	.db #0x16	; 22
      0000CB 01                    3720 	.db #0x01	; 1
      0000CC 05                    3721 	.db #0x05	; 5
      0000CD 0B                    3722 	.db #0x0B	; 11
      0000CE 9A                    3723 	.db #0x9A	; 154
      0000CF 88                    3724 	.db #0x88	; 136
      0000D0 8A                    3725 	.db #0x8A	; 138
      0000D1 8C                    3726 	.db #0x8C	; 140
      0000D2 8D                    3727 	.db #0x8D	; 141
      0000D3 03                    3728 	.db #0x03	; 3
      0000D4 03                    3729 	.db #0x03	; 3
      0000D5 03                    3730 	.db #0x03	; 3
      0000D6 03                    3731 	.db #0x03	; 3
      0000D7 03                    3732 	.db #0x03	; 3
      0000D8 03                    3733 	.db #0x03	; 3
      0000D9 03                    3734 	.db #0x03	; 3
      0000DA 03                    3735 	.db #0x03	; 3
      0000DB 03                    3736 	.db #0x03	; 3
      0000DC 03                    3737 	.db #0x03	; 3
      0000DD 03                    3738 	.db #0x03	; 3
      0000DE 03                    3739 	.db #0x03	; 3
      0000DF 03                    3740 	.db #0x03	; 3
      0000E0 F4                    3741 	.db #0xF4	; 244
      0000E1 FA                    3742 	.db #0xFA	; 250
      0000E2 7D                    3743 	.db #0x7D	; 125
      0000E3 3F                    3744 	.db #0x3F	; 63
      0000E4 69                    3745 	.db #0x69	; 105	'i'
      0000E5 A7                    3746 	.db #0xA7	; 167
      0000E6 7D                    3747 	.db #0x7D	; 125
      0000E7 53                    3748 	.db #0x53	; 83	'S'
      0000E8 5E                    3749 	.db #0x5E	; 94
      0000E9 7D                    3750 	.db #0x7D	; 125
      0000EA 5E                    3751 	.db #0x5E	; 94
      0000EB 3F                    3752 	.db #0x3F	; 63
      0000EC 30                    3753 	.db #0x30	; 48	'0'
      0000ED 20                    3754 	.db #0x20	; 32
      0000EE 00                    3755 	.db #0x00	; 0
      0000EF 01                    3756 	.db #0x01	; 1
      0000F0 02                    3757 	.db #0x02	; 2
      0000F1 01                    3758 	.db #0x01	; 1
      0000F2 00                    3759 	.db #0x00	; 0
      0000F3 01                    3760 	.db #0x01	; 1
      0000F4 01                    3761 	.db #0x01	; 1
      0000F5 01                    3762 	.db #0x01	; 1
      0000F6 01                    3763 	.db #0x01	; 1
      0000F7 01                    3764 	.db #0x01	; 1
      0000F8 02                    3765 	.db #0x02	; 2
      0000F9 02                    3766 	.db #0x02	; 2
      0000FA 41                    3767 	.db #0x41	; 65	'A'
      0000FB 83                    3768 	.db #0x83	; 131
      0000FC 06                    3769 	.db #0x06	; 6
      0000FD 0C                    3770 	.db #0x0C	; 12
      0000FE 37                    3771 	.db #0x37	; 55	'7'
      0000FF C4                    3772 	.db #0xC4	; 196
      000100 06                    3773 	.db #0x06	; 6
      000101 89                    3774 	.db #0x89	; 137
      000102 5D                    3775 	.db #0x5D	; 93
      000103 06                    3776 	.db #0x06	; 6
      000104 5D                    3777 	.db #0x5D	; 93
      000105 0C                    3778 	.db #0x0C	; 12
      000106 AA                    3779 	.db #0xAA	; 170
      000107 89                    3780 	.db #0x89	; 137
      000108 12                    3781 	.db #0x12	; 18
      000109 25                    3782 	.db #0x25	; 37
      00010A 4A                    3783 	.db #0x4A	; 74	'J'
      00010B 4C                    3784 	.db #0x4C	; 76	'L'
      00010C 9C                    3785 	.db #0x9C	; 156
      00010D 25                    3786 	.db #0x25	; 37
      00010E 37                    3787 	.db #0x37	; 55	'7'
      00010F 86                    3788 	.db #0x86	; 134
      000110 25                    3789 	.db #0x25	; 37
      000111 86                    3790 	.db #0x86	; 134
      000112 4A                    3791 	.db #0x4A	; 74	'J'
      000113 AB                    3792 	.db #0xAB	; 171
      000114 00                    3793 	.db #0x00	; 0
      000115 01                    3794 	.db #0x01	; 1
      000116 02                    3795 	.db #0x02	; 2
      000117 04                    3796 	.db #0x04	; 4
      000118 02                    3797 	.db #0x02	; 2
      000119 01                    3798 	.db #0x01	; 1
      00011A 02                    3799 	.db #0x02	; 2
      00011B 03                    3800 	.db #0x03	; 3
      00011C 02                    3801 	.db #0x02	; 2
      00011D 02                    3802 	.db #0x02	; 2
      00011E 02                    3803 	.db #0x02	; 2
      00011F 04                    3804 	.db #0x04	; 4
      000120 07                    3805 	.db #0x07	; 7
      000121 85                    3806 	.db #0x85	; 133
      000122 08                    3807 	.db #0x08	; 8
      000123 0E                    3808 	.db #0x0E	; 14
      000124 12                    3809 	.db #0x12	; 18
      000125 72                    3810 	.db #0x72	; 114	'r'
      000126 8A                    3811 	.db #0x8A	; 138
      000127 0E                    3812 	.db #0x0E	; 14
      000128 18                    3813 	.db #0x18	; 24
      000129 BB                    3814 	.db #0xBB	; 187
      00012A 0E                    3815 	.db #0x0E	; 14
      00012B BB                    3816 	.db #0xBB	; 187
      00012C EA                    3817 	.db #0xEA	; 234
      00012D FF                    3818 	.db #0xFF	; 255
      00012E 1E                    3819 	.db #0x1E	; 30
      00012F 1E                    3820 	.db #0x1E	; 30
      000130 1E                    3821 	.db #0x1E	; 30
      000131 21                    3822 	.db #0x21	; 33
      000132 21                    3823 	.db #0x21	; 33
      000133 21                    3824 	.db #0x21	; 33
      000134 21                    3825 	.db #0x21	; 33
      000135 30                    3826 	.db #0x30	; 48	'0'
      000136 41                    3827 	.db #0x41	; 65	'A'
      000137 50                    3828 	.db #0x50	; 80	'P'
      000138 50                    3829 	.db #0x50	; 80	'P'
      000139 50                    3830 	.db #0x50	; 80	'P'
      00013A 50                    3831 	.db #0x50	; 80	'P'
      00013B 10                    3832 	.db #0x10	; 16
      00013C 20                    3833 	.db #0x20	; 32
      00013D 41                    3834 	.db #0x41	; 65	'A'
      00013E 83                    3835 	.db #0x83	; 131
      00013F 9B                    3836 	.db #0x9B	; 155
      000140 C4                    3837 	.db #0xC4	; 196
      000141 08                    3838 	.db #0x08	; 8
      000142 0C                    3839 	.db #0x0C	; 12
      000143 10                    3840 	.db #0x10	; 16
      000144 18                    3841 	.db #0x18	; 24
      000145 20                    3842 	.db #0x20	; 32
      000146 31                    3843 	.db #0x31	; 49	'1'
      000147 40                    3844 	.db #0x40	; 64
      000148 62                    3845 	.db #0x62	; 98	'b'
      000149 C5                    3846 	.db #0xC5	; 197
      00014A 89                    3847 	.db #0x89	; 137
      00014B 12                    3848 	.db #0x12	; 18
      00014C A6                    3849 	.db #0xA6	; 166
      00014D 9C                    3850 	.db #0x9C	; 156
      00014E 31                    3851 	.db #0x31	; 49	'1'
      00014F 4A                    3852 	.db #0x4A	; 74	'J'
      000150 62                    3853 	.db #0x62	; 98	'b'
      000151 93                    3854 	.db #0x93	; 147
      000152 C5                    3855 	.db #0xC5	; 197
      000153 27                    3856 	.db #0x27	; 39
      000154 00                    3857 	.db #0x00	; 0
      000155 03                    3858 	.db #0x03	; 3
      000156 06                    3859 	.db #0x06	; 6
      000157 0D                    3860 	.db #0x0D	; 13
      000158 1A                    3861 	.db #0x1A	; 26
      000159 1E                    3862 	.db #0x1E	; 30
      00015A 26                    3863 	.db #0x26	; 38
      00015B 33                    3864 	.db #0x33	; 51	'3'
      00015C 4D                    3865 	.db #0x4D	; 77	'M'
      00015D 66                    3866 	.db #0x66	; 102	'f'
      00015E 9A                    3867 	.db #0x9A	; 154
      00015F CD                    3868 	.db #0xCD	; 205
      000160 FE                    3869 	.db #0xFE	; 254
      000161 FE                    3870 	.db #0xFE	; 254
      000162                       3871 _reg_table_868:
      000162 01                    3872 	.db #0x01	; 1
      000163 01                    3873 	.db #0x01	; 1
      000164 01                    3874 	.db #0x01	; 1
      000165 01                    3875 	.db #0x01	; 1
      000166 01                    3876 	.db #0x01	; 1
      000167 01                    3877 	.db #0x01	; 1
      000168 05                    3878 	.db #0x05	; 5
      000169 0B                    3879 	.db #0x0B	; 11
      00016A 9A                    3880 	.db #0x9A	; 154
      00016B 88                    3881 	.db #0x88	; 136
      00016C 8A                    3882 	.db #0x8A	; 138
      00016D 8C                    3883 	.db #0x8C	; 140
      00016E 8D                    3884 	.db #0x8D	; 141
      00016F 03                    3885 	.db #0x03	; 3
      000170 03                    3886 	.db #0x03	; 3
      000171 03                    3887 	.db #0x03	; 3
      000172 03                    3888 	.db #0x03	; 3
      000173 03                    3889 	.db #0x03	; 3
      000174 03                    3890 	.db #0x03	; 3
      000175 03                    3891 	.db #0x03	; 3
      000176 03                    3892 	.db #0x03	; 3
      000177 03                    3893 	.db #0x03	; 3
      000178 03                    3894 	.db #0x03	; 3
      000179 03                    3895 	.db #0x03	; 3
      00017A 03                    3896 	.db #0x03	; 3
      00017B 03                    3897 	.db #0x03	; 3
      00017C D0                    3898 	.db #0xD0	; 208
      00017D E8                    3899 	.db #0xE8	; 232
      00017E F4                    3900 	.db #0xF4	; 244
      00017F FA                    3901 	.db #0xFA	; 250
      000180 D3                    3902 	.db #0xD3	; 211
      000181 A7                    3903 	.db #0xA7	; 167
      000182 7D                    3904 	.db #0x7D	; 125
      000183 53                    3905 	.db #0x53	; 83	'S'
      000184 5E                    3906 	.db #0x5E	; 94
      000185 7D                    3907 	.db #0x7D	; 125
      000186 5E                    3908 	.db #0x5E	; 94
      000187 3F                    3909 	.db #0x3F	; 63
      000188 30                    3910 	.db #0x30	; 48	'0'
      000189 E0                    3911 	.db #0xE0	; 224
      00018A 60                    3912 	.db #0x60	; 96
      00018B 20                    3913 	.db #0x20	; 32
      00018C 00                    3914 	.db #0x00	; 0
      00018D 00                    3915 	.db #0x00	; 0
      00018E 00                    3916 	.db #0x00	; 0
      00018F 01                    3917 	.db #0x01	; 1
      000190 01                    3918 	.db #0x01	; 1
      000191 01                    3919 	.db #0x01	; 1
      000192 01                    3920 	.db #0x01	; 1
      000193 01                    3921 	.db #0x01	; 1
      000194 02                    3922 	.db #0x02	; 2
      000195 02                    3923 	.db #0x02	; 2
      000196 10                    3924 	.db #0x10	; 16
      000197 20                    3925 	.db #0x20	; 32
      000198 41                    3926 	.db #0x41	; 65	'A'
      000199 83                    3927 	.db #0x83	; 131
      00019A 9B                    3928 	.db #0x9B	; 155
      00019B C4                    3929 	.db #0xC4	; 196
      00019C 06                    3930 	.db #0x06	; 6
      00019D 89                    3931 	.db #0x89	; 137
      00019E 5D                    3932 	.db #0x5D	; 93
      00019F 06                    3933 	.db #0x06	; 6
      0001A0 5D                    3934 	.db #0x5D	; 93
      0001A1 0C                    3935 	.db #0x0C	; 12
      0001A2 AA                    3936 	.db #0xAA	; 170
      0001A3 62                    3937 	.db #0x62	; 98	'b'
      0001A4 C5                    3938 	.db #0xC5	; 197
      0001A5 89                    3939 	.db #0x89	; 137
      0001A6 12                    3940 	.db #0x12	; 18
      0001A7 A6                    3941 	.db #0xA6	; 166
      0001A8 9C                    3942 	.db #0x9C	; 156
      0001A9 25                    3943 	.db #0x25	; 37
      0001AA 37                    3944 	.db #0x37	; 55	'7'
      0001AB 86                    3945 	.db #0x86	; 134
      0001AC 25                    3946 	.db #0x25	; 37
      0001AD 86                    3947 	.db #0x86	; 134
      0001AE 4A                    3948 	.db #0x4A	; 74	'J'
      0001AF AB                    3949 	.db #0xAB	; 171
      0001B0 00                    3950 	.db #0x00	; 0
      0001B1 00                    3951 	.db #0x00	; 0
      0001B2 00                    3952 	.db #0x00	; 0
      0001B3 01                    3953 	.db #0x01	; 1
      0001B4 01                    3954 	.db #0x01	; 1
      0001B5 01                    3955 	.db #0x01	; 1
      0001B6 02                    3956 	.db #0x02	; 2
      0001B7 03                    3957 	.db #0x03	; 3
      0001B8 02                    3958 	.db #0x02	; 2
      0001B9 02                    3959 	.db #0x02	; 2
      0001BA 02                    3960 	.db #0x02	; 2
      0001BB 04                    3961 	.db #0x04	; 4
      0001BC 07                    3962 	.db #0x07	; 7
      0001BD 23                    3963 	.db #0x23	; 35
      0001BE 44                    3964 	.db #0x44	; 68	'D'
      0001BF 85                    3965 	.db #0x85	; 133
      0001C0 08                    3966 	.db #0x08	; 8
      0001C1 39                    3967 	.db #0x39	; 57	'9'
      0001C2 8A                    3968 	.db #0x8A	; 138
      0001C3 0E                    3969 	.db #0x0E	; 14
      0001C4 18                    3970 	.db #0x18	; 24
      0001C5 BB                    3971 	.db #0xBB	; 187
      0001C6 0E                    3972 	.db #0x0E	; 14
      0001C7 BB                    3973 	.db #0xBB	; 187
      0001C8 EA                    3974 	.db #0xEA	; 234
      0001C9 FF                    3975 	.db #0xFF	; 255
      0001CA 1C                    3976 	.db #0x1C	; 28
      0001CB 1C                    3977 	.db #0x1C	; 28
      0001CC 1C                    3978 	.db #0x1C	; 28
      0001CD 1C                    3979 	.db #0x1C	; 28
      0001CE 1C                    3980 	.db #0x1C	; 28
      0001CF 1E                    3981 	.db #0x1E	; 30
      0001D0 20                    3982 	.db #0x20	; 32
      0001D1 30                    3983 	.db #0x30	; 48	'0'
      0001D2 41                    3984 	.db #0x41	; 65	'A'
      0001D3 50                    3985 	.db #0x50	; 80	'P'
      0001D4 50                    3986 	.db #0x50	; 80	'P'
      0001D5 50                    3987 	.db #0x50	; 80	'P'
      0001D6 50                    3988 	.db #0x50	; 80	'P'
      0001D7 10                    3989 	.db #0x10	; 16
      0001D8 20                    3990 	.db #0x20	; 32
      0001D9 41                    3991 	.db #0x41	; 65	'A'
      0001DA 83                    3992 	.db #0x83	; 131
      0001DB 9B                    3993 	.db #0x9B	; 155
      0001DC C4                    3994 	.db #0xC4	; 196
      0001DD 08                    3995 	.db #0x08	; 8
      0001DE 0C                    3996 	.db #0x0C	; 12
      0001DF 10                    3997 	.db #0x10	; 16
      0001E0 18                    3998 	.db #0x18	; 24
      0001E1 20                    3999 	.db #0x20	; 32
      0001E2 31                    4000 	.db #0x31	; 49	'1'
      0001E3 40                    4001 	.db #0x40	; 64
      0001E4 62                    4002 	.db #0x62	; 98	'b'
      0001E5 C5                    4003 	.db #0xC5	; 197
      0001E6 89                    4004 	.db #0x89	; 137
      0001E7 12                    4005 	.db #0x12	; 18
      0001E8 A6                    4006 	.db #0xA6	; 166
      0001E9 9C                    4007 	.db #0x9C	; 156
      0001EA 31                    4008 	.db #0x31	; 49	'1'
      0001EB 4A                    4009 	.db #0x4A	; 74	'J'
      0001EC 62                    4010 	.db #0x62	; 98	'b'
      0001ED 93                    4011 	.db #0x93	; 147
      0001EE C5                    4012 	.db #0xC5	; 197
      0001EF 27                    4013 	.db #0x27	; 39
      0001F0 00                    4014 	.db #0x00	; 0
      0001F1 03                    4015 	.db #0x03	; 3
      0001F2 06                    4016 	.db #0x06	; 6
      0001F3 0D                    4017 	.db #0x0D	; 13
      0001F4 1A                    4018 	.db #0x1A	; 26
      0001F5 1E                    4019 	.db #0x1E	; 30
      0001F6 26                    4020 	.db #0x26	; 38
      0001F7 33                    4021 	.db #0x33	; 51	'3'
      0001F8 4D                    4022 	.db #0x4D	; 77	'M'
      0001F9 66                    4023 	.db #0x66	; 102	'f'
      0001FA 9A                    4024 	.db #0x9A	; 154
      0001FB CD                    4025 	.db #0xCD	; 205
      0001FC FE                    4026 	.db #0xFE	; 254
      0001FD FE                    4027 	.db #0xFE	; 254
      0001FE                       4028 _reg_table_915:
      0001FE 01                    4029 	.db #0x01	; 1
      0001FF 01                    4030 	.db #0x01	; 1
      000200 01                    4031 	.db #0x01	; 1
      000201 01                    4032 	.db #0x01	; 1
      000202 01                    4033 	.db #0x01	; 1
      000203 01                    4034 	.db #0x01	; 1
      000204 05                    4035 	.db #0x05	; 5
      000205 0B                    4036 	.db #0x0B	; 11
      000206 9A                    4037 	.db #0x9A	; 154
      000207 88                    4038 	.db #0x88	; 136
      000208 8A                    4039 	.db #0x8A	; 138
      000209 8C                    4040 	.db #0x8C	; 140
      00020A 8D                    4041 	.db #0x8D	; 141
      00020B 03                    4042 	.db #0x03	; 3
      00020C 03                    4043 	.db #0x03	; 3
      00020D 03                    4044 	.db #0x03	; 3
      00020E 03                    4045 	.db #0x03	; 3
      00020F 03                    4046 	.db #0x03	; 3
      000210 03                    4047 	.db #0x03	; 3
      000211 03                    4048 	.db #0x03	; 3
      000212 03                    4049 	.db #0x03	; 3
      000213 03                    4050 	.db #0x03	; 3
      000214 03                    4051 	.db #0x03	; 3
      000215 03                    4052 	.db #0x03	; 3
      000216 03                    4053 	.db #0x03	; 3
      000217 03                    4054 	.db #0x03	; 3
      000218 D0                    4055 	.db #0xD0	; 208
      000219 E8                    4056 	.db #0xE8	; 232
      00021A F4                    4057 	.db #0xF4	; 244
      00021B FA                    4058 	.db #0xFA	; 250
      00021C D3                    4059 	.db #0xD3	; 211
      00021D A7                    4060 	.db #0xA7	; 167
      00021E 7D                    4061 	.db #0x7D	; 125
      00021F 53                    4062 	.db #0x53	; 83	'S'
      000220 5E                    4063 	.db #0x5E	; 94
      000221 7D                    4064 	.db #0x7D	; 125
      000222 5E                    4065 	.db #0x5E	; 94
      000223 3F                    4066 	.db #0x3F	; 63
      000224 30                    4067 	.db #0x30	; 48	'0'
      000225 E0                    4068 	.db #0xE0	; 224
      000226 60                    4069 	.db #0x60	; 96
      000227 20                    4070 	.db #0x20	; 32
      000228 00                    4071 	.db #0x00	; 0
      000229 00                    4072 	.db #0x00	; 0
      00022A 00                    4073 	.db #0x00	; 0
      00022B 01                    4074 	.db #0x01	; 1
      00022C 01                    4075 	.db #0x01	; 1
      00022D 01                    4076 	.db #0x01	; 1
      00022E 01                    4077 	.db #0x01	; 1
      00022F 01                    4078 	.db #0x01	; 1
      000230 02                    4079 	.db #0x02	; 2
      000231 02                    4080 	.db #0x02	; 2
      000232 10                    4081 	.db #0x10	; 16
      000233 20                    4082 	.db #0x20	; 32
      000234 41                    4083 	.db #0x41	; 65	'A'
      000235 83                    4084 	.db #0x83	; 131
      000236 9B                    4085 	.db #0x9B	; 155
      000237 C4                    4086 	.db #0xC4	; 196
      000238 06                    4087 	.db #0x06	; 6
      000239 89                    4088 	.db #0x89	; 137
      00023A 5D                    4089 	.db #0x5D	; 93
      00023B 06                    4090 	.db #0x06	; 6
      00023C 5D                    4091 	.db #0x5D	; 93
      00023D 0C                    4092 	.db #0x0C	; 12
      00023E AA                    4093 	.db #0xAA	; 170
      00023F 62                    4094 	.db #0x62	; 98	'b'
      000240 C5                    4095 	.db #0xC5	; 197
      000241 89                    4096 	.db #0x89	; 137
      000242 12                    4097 	.db #0x12	; 18
      000243 A6                    4098 	.db #0xA6	; 166
      000244 9C                    4099 	.db #0x9C	; 156
      000245 25                    4100 	.db #0x25	; 37
      000246 37                    4101 	.db #0x37	; 55	'7'
      000247 86                    4102 	.db #0x86	; 134
      000248 25                    4103 	.db #0x25	; 37
      000249 86                    4104 	.db #0x86	; 134
      00024A 4A                    4105 	.db #0x4A	; 74	'J'
      00024B AB                    4106 	.db #0xAB	; 171
      00024C 00                    4107 	.db #0x00	; 0
      00024D 00                    4108 	.db #0x00	; 0
      00024E 00                    4109 	.db #0x00	; 0
      00024F 01                    4110 	.db #0x01	; 1
      000250 01                    4111 	.db #0x01	; 1
      000251 01                    4112 	.db #0x01	; 1
      000252 02                    4113 	.db #0x02	; 2
      000253 03                    4114 	.db #0x03	; 3
      000254 02                    4115 	.db #0x02	; 2
      000255 02                    4116 	.db #0x02	; 2
      000256 02                    4117 	.db #0x02	; 2
      000257 04                    4118 	.db #0x04	; 4
      000258 07                    4119 	.db #0x07	; 7
      000259 23                    4120 	.db #0x23	; 35
      00025A 44                    4121 	.db #0x44	; 68	'D'
      00025B 85                    4122 	.db #0x85	; 133
      00025C 08                    4123 	.db #0x08	; 8
      00025D 39                    4124 	.db #0x39	; 57	'9'
      00025E 8A                    4125 	.db #0x8A	; 138
      00025F 0E                    4126 	.db #0x0E	; 14
      000260 18                    4127 	.db #0x18	; 24
      000261 BB                    4128 	.db #0xBB	; 187
      000262 0E                    4129 	.db #0x0E	; 14
      000263 BB                    4130 	.db #0xBB	; 187
      000264 EA                    4131 	.db #0xEA	; 234
      000265 FF                    4132 	.db #0xFF	; 255
      000266 1E                    4133 	.db #0x1E	; 30
      000267 1E                    4134 	.db #0x1E	; 30
      000268 1E                    4135 	.db #0x1E	; 30
      000269 1E                    4136 	.db #0x1E	; 30
      00026A 1E                    4137 	.db #0x1E	; 30
      00026B 1E                    4138 	.db #0x1E	; 30
      00026C 20                    4139 	.db #0x20	; 32
      00026D 30                    4140 	.db #0x30	; 48	'0'
      00026E 41                    4141 	.db #0x41	; 65	'A'
      00026F 50                    4142 	.db #0x50	; 80	'P'
      000270 50                    4143 	.db #0x50	; 80	'P'
      000271 50                    4144 	.db #0x50	; 80	'P'
      000272 50                    4145 	.db #0x50	; 80	'P'
      000273 10                    4146 	.db #0x10	; 16
      000274 20                    4147 	.db #0x20	; 32
      000275 41                    4148 	.db #0x41	; 65	'A'
      000276 83                    4149 	.db #0x83	; 131
      000277 9B                    4150 	.db #0x9B	; 155
      000278 C4                    4151 	.db #0xC4	; 196
      000279 08                    4152 	.db #0x08	; 8
      00027A 0C                    4153 	.db #0x0C	; 12
      00027B 10                    4154 	.db #0x10	; 16
      00027C 18                    4155 	.db #0x18	; 24
      00027D 20                    4156 	.db #0x20	; 32
      00027E 31                    4157 	.db #0x31	; 49	'1'
      00027F 40                    4158 	.db #0x40	; 64
      000280 62                    4159 	.db #0x62	; 98	'b'
      000281 C5                    4160 	.db #0xC5	; 197
      000282 89                    4161 	.db #0x89	; 137
      000283 12                    4162 	.db #0x12	; 18
      000284 A6                    4163 	.db #0xA6	; 166
      000285 9C                    4164 	.db #0x9C	; 156
      000286 31                    4165 	.db #0x31	; 49	'1'
      000287 4A                    4166 	.db #0x4A	; 74	'J'
      000288 62                    4167 	.db #0x62	; 98	'b'
      000289 93                    4168 	.db #0x93	; 147
      00028A C5                    4169 	.db #0xC5	; 197
      00028B 27                    4170 	.db #0x27	; 39
      00028C 00                    4171 	.db #0x00	; 0
      00028D 03                    4172 	.db #0x03	; 3
      00028E 06                    4173 	.db #0x06	; 6
      00028F 0D                    4174 	.db #0x0D	; 13
      000290 1A                    4175 	.db #0x1A	; 26
      000291 1E                    4176 	.db #0x1E	; 30
      000292 26                    4177 	.db #0x26	; 38
      000293 33                    4178 	.db #0x33	; 51	'3'
      000294 4D                    4179 	.db #0x4D	; 77	'M'
      000295 66                    4180 	.db #0x66	; 102	'f'
      000296 9A                    4181 	.db #0x9A	; 154
      000297 CD                    4182 	.db #0xCD	; 205
      000298 FE                    4183 	.db #0xFE	; 254
      000299 FE                    4184 	.db #0xFE	; 254
      00029A                       4185 _power_levels:
      00029A 01                    4186 	.db #0x01	; 1
      00029B 02                    4187 	.db #0x02	; 2
      00029C 05                    4188 	.db #0x05	; 5
      00029D 08                    4189 	.db #0x08	; 8
      00029E 0B                    4190 	.db #0x0B	; 11
      00029F 0E                    4191 	.db #0x0E	; 14
      0002A0 11                    4192 	.db #0x11	; 17
      0002A1 14                    4193 	.db #0x14	; 20
                                   4194 	.area XINIT   (CODE)
                                   4195 	.area CABS    (ABS,CODE)
